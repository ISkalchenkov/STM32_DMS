HSEStartUp_TimeOut		EQU	0x0500	; Time out for HSE start up

HSI_Value				EQU	8000000	; Value of the Internal oscillator in Hz

__MPU_PRESENT			EQU	0		; STM32 does not provide an MPU
__NVIC_PRIO_BITS		EQU	4		; STM32 uses 4 Bits for the Priority Levels
__Vendor_SysTickConfig	EQU	0		; Set to 1 if different SysTick Config is used



SRAM_BB_BASE	EQU	0x22000000		; SRAM base address in the alias region
PERIPH_BB_BASE	EQU	0x42000000		; Peripheral base address in the alias region

SRAM_BASE		EQU	0x20000000		; SRAM base address in the bit-band region
PERIPH_BASE		EQU	0x40000000		; Peripheral base address in the bit-band region

FSMC_R_BASE		EQU	0xA0000000		; FSMC registers base address

; Peripheral memory map
APB1PERIPH_BASE	EQU	PERIPH_BASE
APB2PERIPH_BASE	EQU	PERIPH_BASE + 0x10000
AHBPERIPH_BASE	EQU	PERIPH_BASE + 0x20000

TIM2_BASE	EQU	APB1PERIPH_BASE + 0x0000
TIM3_BASE	EQU	APB1PERIPH_BASE + 0x0400
TIM4_BASE	EQU	APB1PERIPH_BASE + 0x0800
TIM5_BASE	EQU	APB1PERIPH_BASE + 0x0C00
TIM6_BASE	EQU	APB1PERIPH_BASE + 0x1000
TIM7_BASE	EQU	APB1PERIPH_BASE + 0x1400
RTC_BASE	EQU	APB1PERIPH_BASE + 0x2800
WWDG_BASE	EQU	APB1PERIPH_BASE + 0x2C00
IWDG_BASE	EQU	APB1PERIPH_BASE + 0x3000
SPI2_BASE	EQU	APB1PERIPH_BASE + 0x3800
SPI3_BASE	EQU	APB1PERIPH_BASE + 0x3C00
USART2_BASE	EQU	APB1PERIPH_BASE + 0x4400
USART3_BASE	EQU	APB1PERIPH_BASE + 0x4800
UART4_BASE	EQU	APB1PERIPH_BASE + 0x4C00
UART5_BASE	EQU	APB1PERIPH_BASE + 0x5000
I2C1_BASE	EQU	APB1PERIPH_BASE + 0x5400
I2C2_BASE	EQU	APB1PERIPH_BASE + 0x5800
CAN1_BASE	EQU	APB1PERIPH_BASE + 0x6400
CAN2_BASE	EQU	APB1PERIPH_BASE + 0x6800
BKP_BASE	EQU	APB1PERIPH_BASE + 0x6C00
PWR_BASE	EQU	APB1PERIPH_BASE + 0x7000
DAC_BASE	EQU	APB1PERIPH_BASE + 0x7400

AFIO_BASE	EQU	APB2PERIPH_BASE + 0x0000
EXTI_BASE	EQU	APB2PERIPH_BASE + 0x0400
GPIOA_BASE	EQU	APB2PERIPH_BASE + 0x0800
GPIOB_BASE	EQU	APB2PERIPH_BASE + 0x0C00
GPIOC_BASE	EQU	APB2PERIPH_BASE + 0x1000
GPIOD_BASE	EQU	APB2PERIPH_BASE + 0x1400
GPIOE_BASE	EQU	APB2PERIPH_BASE + 0x1800
GPIOF_BASE	EQU	APB2PERIPH_BASE + 0x1C00
GPIOG_BASE	EQU	APB2PERIPH_BASE + 0x2000
ADC1_BASE	EQU	APB2PERIPH_BASE + 0x2400
ADC2_BASE	EQU	APB2PERIPH_BASE + 0x2800
TIM1_BASE	EQU	APB2PERIPH_BASE + 0x2C00
SPI1_BASE	EQU	APB2PERIPH_BASE + 0x3000
TIM8_BASE	EQU	APB2PERIPH_BASE + 0x3400
USART1_BASE	EQU	APB2PERIPH_BASE + 0x3800
ADC3_BASE	EQU	APB2PERIPH_BASE + 0x3C00

SDIO_BASE	EQU	PERIPH_BASE + 0x18000

DMA1_BASE	EQU	AHBPERIPH_BASE + 0x0000
DMA1_Channel1_BASE	EQU	AHBPERIPH_BASE + 0x0008
DMA1_Channel2_BASE	EQU	AHBPERIPH_BASE + 0x001C
DMA1_Channel3_BASE	EQU	AHBPERIPH_BASE + 0x0030
DMA1_Channel4_BASE	EQU	AHBPERIPH_BASE + 0x0044
DMA1_Channel5_BASE	EQU	AHBPERIPH_BASE + 0x0058
DMA1_Channel6_BASE	EQU	AHBPERIPH_BASE + 0x006C
DMA1_Channel7_BASE	EQU	AHBPERIPH_BASE + 0x0080
DMA2_BASE			EQU	AHBPERIPH_BASE + 0x0400
DMA2_Channel1_BASE	EQU	AHBPERIPH_BASE + 0x0408
DMA2_Channel2_BASE	EQU	AHBPERIPH_BASE + 0x041C
DMA2_Channel3_BASE	EQU	AHBPERIPH_BASE + 0x0430
DMA2_Channel4_BASE	EQU	AHBPERIPH_BASE + 0x0444
DMA2_Channel5_BASE	EQU	AHBPERIPH_BASE + 0x0458
RCC_BASE			EQU	AHBPERIPH_BASE + 0x1000
CRC_BASE			EQU	AHBPERIPH_BASE + 0x3000

FLASH_R_BASE		EQU	AHBPERIPH_BASE + 0x2000 ; Flash registers base address
OB_BASE				EQU	0x1FFFF800 ; Flash Option Bytes base address

ETH_BASE			EQU	AHBPERIPH_BASE + 0x8000
ETH_MAC_BASE		EQU	ETH_BASE
ETH_MMC_BASE		EQU	ETH_BASE + 0x0100
ETH_PTP_BASE		EQU	ETH_BASE + 0x0700
ETH_DMA_BASE		EQU	ETH_BASE + 0x1000

FSMC_Bank1_R_BASE	EQU	FSMC_R_BASE + 0x0000 ; FSMC Bank1 registers base address
FSMC_Bank1E_R_BASE	EQU	FSMC_R_BASE + 0x0104 ; FSMC Bank1E registers base address
FSMC_Bank2_R_BASE	EQU	FSMC_R_BASE + 0x0060 ; FSMC Bank2 registers base address
FSMC_Bank3_R_BASE	EQU	FSMC_R_BASE + 0x0080 ; FSMC Bank3 registers base address
FSMC_Bank4_R_BASE	EQU	FSMC_R_BASE + 0x00A0 ; FSMC Bank4 registers base address

DBGMCU_BASE			EQU	0xE0042000 ; Debug MCU registers base address

SCS_BASE			EQU	0xE000E000


ETH_MACCR		EQU	ETH_MAC_BASE
ETH_MACFFR		EQU	ETH_MACCR + 0x04
ETH_MACHTHR		EQU	ETH_MACCR + 0x08
ETH_MACHTLR		EQU	ETH_MACCR + 0x0C
ETH_MACMIIAR		EQU	ETH_MACCR + 0x10
ETH_MACMIIDR		EQU	ETH_MACCR + 0x14
ETH_MACFCR		EQU	ETH_MACCR + 0x18
ETH_MACVLANTR	EQU	ETH_MACCR + 0x1C
ETH_MACRWUFFR	EQU	ETH_MACCR + 0x28
ETH_MACPMTCSR	EQU	ETH_MACCR + 0x2C
ETH_MACSR		EQU	ETH_MACCR + 0x38
ETH_MACIMR		EQU	ETH_MACCR + 0x3C
ETH_MACA0HR		EQU	ETH_MACCR + 0x40
ETH_MACA0LR		EQU	ETH_MACCR + 0x44
ETH_MACA1HR		EQU	ETH_MACCR + 0x48
ETH_MACA1LR		EQU	ETH_MACCR + 0x4C
ETH_MACA2HR		EQU	ETH_MACCR + 0x50
ETH_MACA2LR		EQU	ETH_MACCR + 0x54
ETH_MACA3HR		EQU	ETH_MACCR + 0x58
ETH_MACA3LR		EQU	ETH_MACCR + 0x5C
ETH_MMCCR		EQU	ETH_MMC_BASE
ETH_MMCRIR		EQU	ETH_MMCCR + 0x04
ETH_MMCTIR		EQU	ETH_MMCCR + 0x08
ETH_MMCRIMR		EQU	ETH_MMCCR + 0x0C
ETH_MMCTIMR		EQU	ETH_MMCCR + 0x10
ETH_MMCTGFSCCR	EQU	ETH_MMCCR + 0x4C
ETH_MMCTGFMSCCR	EQU	ETH_MMCCR + 0x50
ETH_MMCTGFCR		EQU	ETH_MMCCR + 0x68
ETH_MMCRFCECR	EQU	ETH_MMCCR + 0x94
ETH_MMCRFAECR	EQU	ETH_MMCCR + 0x98
ETH_MMCRGUFCR	EQU	ETH_MMCCR + 0xC4
ETH_PTPTSCR		EQU	ETH_PTP_BASE
ETH_PTPSSIR		EQU	ETH_PTP_BASE + 0x04
ETH_PTPTSHR		EQU	ETH_PTP_BASE + 0x08
ETH_PTPTSLR		EQU	ETH_PTP_BASE + 0x0C
ETH_PTPTSHUR		EQU	ETH_PTP_BASE + 0x10
ETH_PTPTSLUR		EQU	ETH_PTP_BASE + 0x14
ETH_PTPTSAR		EQU	ETH_PTP_BASE + 0x18
ETH_PTPTTHR		EQU	ETH_PTP_BASE + 0x1C
ETH_PTPTTLR		EQU	ETH_PTP_BASE + 0x20
ETH_DMABMR		EQU	ETH_DMA_BASE
ETH_DMATPDR		EQU	ETH_DMA_BASE + 0x04
ETH_DMARPDR		EQU	ETH_DMA_BASE + 0x08
ETH_DMARDLAR		EQU	ETH_DMA_BASE + 0x0C
ETH_DMATDLAR		EQU	ETH_DMA_BASE + 0x10
ETH_DMASR		EQU	ETH_DMA_BASE + 0x14
ETH_DMAOMR		EQU	ETH_DMA_BASE + 0x18
ETH_DMAIER		EQU	ETH_DMA_BASE + 0x1C
ETH_DMAMFBOCR	EQU	ETH_DMA_BASE + 0x20
ETH_DMACHTDR		EQU	ETH_DMA_BASE + 0x48
ETH_DMACHRDR		EQU	ETH_DMA_BASE + 0x4C
ETH_DMACHTBAR	EQU	ETH_DMA_BASE + 0x50
ETH_DMACHRBAR	EQU	ETH_DMA_BASE + 0x54



TIM2	EQU	TIM2_BASE
TIM3	EQU	TIM3_BASE
TIM4	EQU	TIM4_BASE
TIM5	EQU	TIM5_BASE
TIM6	EQU	TIM6_BASE
TIM7	EQU	TIM7_BASE
RTC		EQU	RTC_BASE
WWDG	EQU	WWDG_BASE
IWDG	EQU	IWDG_BASE
SPI2	EQU	SPI2_BASE
SPI3	EQU	SPI3_BASE
USART2	EQU	USART2_BASE
USART3	EQU	USART3_BASE
UART4	EQU	UART4_BASE
UART5	EQU	UART5_BASE
I2C1	EQU	I2C1_BASE
I2C2	EQU	I2C2_BASE
CAN1	EQU	CAN1_BASE
CAN2	EQU	CAN2_BASE
BKP		EQU	BKP_BASE
PWR		EQU	PWR_BASE
DAC		EQU	DAC_BASE
AFIO	EQU	AFIO_BASE
EXTI	EQU	EXTI_BASE
GPIOA	EQU	GPIOA_BASE
GPIOB	EQU	GPIOB_BASE
GPIOC	EQU	GPIOC_BASE
GPIOD	EQU	GPIOD_BASE
GPIOE	EQU	GPIOE_BASE
GPIOF	EQU	GPIOF_BASE
GPIOG	EQU	GPIOG_BASE
ADC1	EQU	ADC1_BASE
ADC2	EQU	ADC2_BASE
TIM1	EQU	TIM1_BASE
SPI1	EQU	SPI1_BASE
TIM8	EQU	TIM8_BASE
USART1	EQU	USART1_BASE
ADC3	EQU	ADC3_BASE
SDIO	EQU	SDIO_BASE
DMA1	EQU	DMA1_BASE
DMA2	EQU	DMA2_BASE
DMA1_Channel1	EQU	DMA1_Channel1_BASE
DMA1_Channel2	EQU	DMA1_Channel2_BASE
DMA1_Channel3	EQU	DMA1_Channel3_BASE
DMA1_Channel4	EQU	DMA1_Channel4_BASE
DMA1_Channel5	EQU	DMA1_Channel5_BASE
DMA1_Channel6	EQU	DMA1_Channel6_BASE
DMA1_Channel7	EQU	DMA1_Channel7_BASE
DMA2_Channel1	EQU	DMA2_Channel1_BASE
DMA2_Channel2	EQU	DMA2_Channel2_BASE
DMA2_Channel3	EQU	DMA2_Channel3_BASE
DMA2_Channel4	EQU	DMA2_Channel4_BASE
DMA2_Channel5	EQU	DMA2_Channel5_BASE
RCC			EQU	RCC_BASE
CRC			EQU	CRC_BASE
FLASH		EQU	FLASH_R_BASE
OB			EQU	OB_BASE
ETH			EQU	ETH_BASE
FSMC_Bank1	EQU	FSMC_Bank1_R_BASE
FSMC_Bank1E	EQU	FSMC_Bank1E_R_BASE
FSMC_Bank2	EQU	FSMC_Bank2_R_BASE
FSMC_Bank3	EQU	FSMC_Bank3_R_BASE
FSMC_Bank4	EQU	FSMC_Bank4_R_BASE
DBGMCU		EQU	DBGMCU_BASE


PWR_CR		EQU	0x40007000
PWR_CSR		EQU	0x40007004
RCC_CR		EQU	0x40021000
RCC_CFGR	EQU	0x40021004
RCC_CIR		EQU	0x40021008
RCC_APB2RSTR	EQU	0x4002100C
RCC_APB1RSTR	EQU	0x40021010
RCC_AHBENR	EQU	0x40021014
RCC_APB2ENR	EQU	0x40021018
RCC_APB1ENR	EQU	0x4002101C
RCC_BDCR	EQU	0x40021020
RCC_CSR		EQU	0x40021024
GPIOA_CRL	EQU	0x40010800
GPIOA_CRH	EQU	0x40010804
GPIOA_IDR	EQU	0x40010808
GPIOA_ODR	EQU	0x4001080C
GPIOA_BSRR	EQU	0x40010810
GPIOA_BRR	EQU	0x40010814
GPIOA_LCKR	EQU	0x40010818
GPIOB_CRL	EQU	0x40010C00
GPIOB_CRH	EQU	0x40010C04
GPIOB_IDR	EQU	0x40010C08
GPIOB_ODR	EQU	0x40010C0C
GPIOB_BSRR	EQU	0x40010C10
GPIOB_BRR	EQU	0x40010C14
GPIOB_LCKR	EQU	0x40010C18
GPIOC_CRL	EQU	0x40011000
GPIOC_CRH	EQU	0x40011004
GPIOC_IDR	EQU	0x40011008
GPIOC_ODR	EQU	0x4001100C
GPIOC_BSRR	EQU	0x40011010
GPIOC_BRR	EQU	0x40011014
GPIOC_LCKR	EQU	0x40011018
GPIOD_CRL	EQU	0x40011400
GPIOD_CRH	EQU	0x40011404
GPIOD_IDR	EQU	0x40011408
GPIOD_ODR	EQU	0x4001140C
GPIOD_BSRR	EQU	0x40011410
GPIOD_BRR	EQU	0x40011414
GPIOD_LCKR	EQU	0x40011418
GPIOE_CRL	EQU	0x40011800
GPIOE_CRH	EQU	0x40011804
GPIOE_IDR	EQU	0x40011808
GPIOE_ODR	EQU	0x4001180C
GPIOE_BSRR	EQU	0x40011810
GPIOE_BRR	EQU	0x40011814
GPIOE_LCKR	EQU	0x40011818
GPIOF_CRL	EQU	0x40011C00
GPIOF_CRH	EQU	0x40011C04
GPIOF_IDR	EQU	0x40011C08
GPIOF_ODR	EQU	0x40011C0C
GPIOF_BSRR	EQU	0x40011C10
GPIOF_BRR	EQU	0x40011C14
GPIOF_LCKR	EQU	0x40011C18
GPIOG_CRL	EQU	0x40012000
GPIOG_CRH	EQU	0x40012004
GPIOG_IDR	EQU	0x40012008
GPIOG_ODR	EQU	0x4001200C
GPIOG_BSRR	EQU	0x40012010
GPIOG_BRR	EQU	0x40012014
GPIOG_LCKR	EQU	0x40012018
AFIO_EVCR	EQU	0x40010000
AFIO_MAPR	EQU	0x40010004
AFIO_EXTICR1	EQU	0x40010008
AFIO_EXTICR2	EQU	0x4001000C
AFIO_EXTICR3	EQU	0x40010010
AFIO_EXTICR4	EQU	0x40010014
EXTI_IMR	EQU	0x40010400
EXTI_EMR	EQU	0x40010404
EXTI_RTSR	EQU	0x40010408
EXTI_FTSR	EQU	0x4001040C
EXTI_SWIER	EQU	0x40010410
EXTI_PR		EQU	0x40010414
DMA_ISR		EQU	0x40020000
DMA_IFCR	EQU	0x40020004
DMA_CCR1	EQU	0x40020008
DMA_CNDTR1	EQU	0x4002000C
DMA_CPAR1	EQU	0x40020010
DMA_CMAR1	EQU	0x40020014
DMA_CCR2	EQU	0x4002001C
DMA_CNDTR2	EQU	0x40020020
DMA_CPAR2	EQU	0x40020024
DMA_CMAR2	EQU	0x40020028
DMA_CCR3	EQU	0x40020030
DMA_CNDTR3	EQU	0x40020034
DMA_CPAR3	EQU	0x40020038
DMA_CMAR3	EQU	0x4002003C
DMA_CCR4	EQU	0x40020044
DMA_CNDTR4	EQU	0x40020048
DMA_CPAR4	EQU	0x4002004C
DMA_CMAR4	EQU	0x40020050
DMA_CCR5	EQU	0x40020058
DMA_CNDTR5	EQU	0x4002005C
DMA_CPAR5	EQU	0x40020060
DMA_CMAR5	EQU	0x40020064
DMA_CCR6	EQU	0x4002006C
DMA_CNDTR6	EQU	0x40020070
DMA_CPAR6	EQU	0x40020074
DMA_CMAR6	EQU	0x40020078
DMA_CCR7	EQU	0x40020080
DMA_CNDTR7	EQU	0x40020084
DMA_CPAR7	EQU	0x40020088
DMA_CMAR7	EQU	0x4002008C
DMA2_ISR	EQU	0x40020400
DMA2_IFCR	EQU	0x40020404
DMA2_CCR1	EQU	0x40020408
DMA2_CNDTR1	EQU	0x4002040C
DMA2_CPAR1	EQU	0x40020410
DMA2_CMAR1	EQU	0x40020414
DMA2_CCR2	EQU	0x4002041C
DMA2_CNDTR2	EQU	0x40020420
DMA2_CPAR2	EQU	0x40020424
DMA2_CMAR2	EQU	0x40020428
DMA2_CCR3	EQU	0x40020430
DMA2_CNDTR3	EQU	0x40020434
DMA2_CPAR3	EQU	0x40020438
DMA2_CMAR3	EQU	0x4002043C
DMA2_CCR4	EQU	0x40020444
DMA2_CNDTR4	EQU	0x40020448
DMA2_CPAR4	EQU	0x4002044C
DMA2_CMAR4	EQU	0x40020450
DMA2_CCR5	EQU	0x40020458
DMA2_CNDTR5	EQU	0x4002045C
DMA2_CPAR5	EQU	0x40020460
DMA2_CMAR5	EQU	0x40020464
RTC_CRH		EQU	0x40002800
RTC_CRL		EQU	0x40002804
RTC_PRLH	EQU	0x40002808
RTC_PRLL	EQU	0x4000280C
RTC_DIVH	EQU	0x40002810
RTC_DIVL	EQU	0x40002814
RTC_CNTH	EQU	0x40002818
RTC_CNTL	EQU	0x4000281C
RTC_ALRH	EQU	0x40002820
RTC_ALRL	EQU	0x40002824
BKP_DR1	EQU	0x40006C04
BKP_DR2	EQU	0x40006C08
BKP_DR3	EQU	0x40006C0C
BKP_DR4	EQU	0x40006C10
BKP_DR5	EQU	0x40006C14
BKP_DR6	EQU	0x40006C18
BKP_DR7	EQU	0x40006C1C
BKP_DR8	EQU	0x40006C20
BKP_DR9	EQU	0x40006C24
BKP_DR10	EQU	0x40006C28
BKP_RTCCR	EQU	0x40006C2C
BKP_CR	EQU	0x40006C30
BKP_CSR	EQU	0x40006C34
BKP_DR11	EQU	0x40006C40
BKP_DR12	EQU	0x40006C44
BKP_DR13	EQU	0x40006C48
BKP_DR14	EQU	0x40006C4C
BKP_DR15	EQU	0x40006C50
BKP_DR16	EQU	0x40006C54
BKP_DR17	EQU	0x40006C58
BKP_DR18	EQU	0x40006C5C
BKP_DR19	EQU	0x40006C60
BKP_DR20	EQU	0x40006C64
BKP_DR21	EQU	0x40006C68
BKP_DR22	EQU	0x40006C6C
BKP_DR23	EQU	0x40006C70
BKP_DR24	EQU	0x40006C74
BKP_DR25	EQU	0x40006C78
BKP_DR26	EQU	0x40006C7C
BKP_DR27	EQU	0x40006C80
BKP_DR28	EQU	0x40006C84
BKP_DR29	EQU	0x40006C88
BKP_DR30	EQU	0x40006C8C
BKP_DR31	EQU	0x40006C90
BKP_DR32	EQU	0x40006C94
BKP_DR33	EQU	0x40006C98
BKP_DR34	EQU	0x40006C9C
BKP_DR35	EQU	0x40006CA0
BKP_DR36	EQU	0x40006CA4
BKP_DR37	EQU	0x40006CA8
BKP_DR38	EQU	0x40006CAC
BKP_DR39	EQU	0x40006CB0
BKP_DR40	EQU	0x40006CB4
BKP_DR41	EQU	0x40006CB8
BKP_DR42	EQU	0x40006CBC
IWDG_KR	EQU	0x40003000
IWDG_PR	EQU	0x40003004
IWDG_RLR	EQU	0x40003008
IWDG_SR	EQU	0x4000300C
WWDG_CR	EQU	0x40002C00
WWDG_CFR	EQU	0x40002C04
WWDG_SR	EQU	0x40002C08
TIM1_CR1	EQU	0x40012C00
TIM1_CR2	EQU	0x40012C04
TIM1_SMCR	EQU	0x40012C08
TIM1_DIER	EQU	0x40012C0C
TIM1_SR	EQU	0x40012C10
TIM1_EGR	EQU	0x40012C14
TIM1_CCMR1	EQU	0x40012C18
TIM1_OCMR1	EQU	0x40012C18
TIM1_CCMR2	EQU	0x40012C1C
TIM1_OCMR2	EQU	0x40012C1C
TIM1_CCER	EQU	0x40012C20
TIM1_CNT	EQU	0x40012C24
TIM1_PSC	EQU	0x40012C28
TIM1_ARR	EQU	0x40012C2C
TIM1_RCR	EQU	0x40012C30
TIM1_CCR1	EQU	0x40012C34
TIM1_CCR2	EQU	0x40012C38
TIM1_CCR3	EQU	0x40012C3C
TIM1_CCR4	EQU	0x40012C40
TIM1_BDTR	EQU	0x40012C44
TIM1_DCR	EQU	0x40012C48
TIM1_DMAR	EQU	0x40012C4C
TIM8_CR1	EQU	0x40013400
TIM8_CR2	EQU	0x40013404
TIM8_SMCR	EQU	0x40013408
TIM8_DIER	EQU	0x4001340C
TIM8_SR	EQU	0x40013410
TIM8_EGR	EQU	0x40013414
TIM8_CCMR1	EQU	0x40013418
TIM8_OCMR1	EQU	0x40013418
TIM8_CCMR2	EQU	0x4001341C
TIM8_OCMR2	EQU	0x4001341C
TIM8_CCER	EQU	0x40013420
TIM8_CNT	EQU	0x40013424
TIM8_PSC	EQU	0x40013428
TIM8_ARR	EQU	0x4001342C
TIM8_RCR	EQU	0x40013430
TIM8_CCR1	EQU	0x40013434
TIM8_CCR2	EQU	0x40013438
TIM8_CCR3	EQU	0x4001343C
TIM8_CCR4	EQU	0x40013440
TIM8_BDTR	EQU	0x40013444
TIM8_DCR	EQU	0x40013448
TIM8_DMAR	EQU	0x4001344C
TIM2_CR1	EQU	0x40000000
TIM2_CR2	EQU	0x40000004
TIM2_SMCR	EQU	0x40000008
TIM2_DIER	EQU	0x4000000C
TIM2_SR	EQU	0x40000010
TIM2_EGR	EQU	0x40000014
TIM2_CCMR1	EQU	0x40000018
TIM2_OCMR1	EQU	0x40000018
TIM2_CCMR2	EQU	0x4000001C
TIM2_OCMR2	EQU	0x4000001C
TIM2_CCER	EQU	0x40000020
TIM2_CNT	EQU	0x40000024
TIM2_PSC	EQU	0x40000028
TIM2_ARR	EQU	0x4000002C
TIM2_CCR1	EQU	0x40000034
TIM2_CCR2	EQU	0x40000038
TIM2_CCR3	EQU	0x4000003C
TIM2_CCR4	EQU	0x40000040
TIM2_DCR	EQU	0x40000048
TIM2_DMAR	EQU	0x4000004C
TIM3_CR1	EQU	0x40000400
TIM3_CR2	EQU	0x40000404
TIM3_SMCR	EQU	0x40000408
TIM3_DIER	EQU	0x4000040C
TIM3_SR	EQU	0x40000410
TIM3_EGR	EQU	0x40000414
TIM3_CCMR1	EQU	0x40000418
TIM3_OCMR1	EQU	0x40000418
TIM3_CCMR2	EQU	0x4000041C
TIM3_OCMR2	EQU	0x4000041C
TIM3_CCER	EQU	0x40000420
TIM3_CNT	EQU	0x40000424
TIM3_PSC	EQU	0x40000428
TIM3_ARR	EQU	0x4000042C
TIM3_CCR1	EQU	0x40000434
TIM3_CCR2	EQU	0x40000438
TIM3_CCR3	EQU	0x4000043C
TIM3_CCR4	EQU	0x40000440
TIM3_DCR	EQU	0x40000448
TIM3_DMAR	EQU	0x4000044C
TIM4_CR1	EQU	0x40000800
TIM4_CR2	EQU	0x40000804
TIM4_SMCR	EQU	0x40000808
TIM4_DIER	EQU	0x4000080C
TIM4_SR	EQU	0x40000810
TIM4_EGR	EQU	0x40000814
TIM4_CCMR1	EQU	0x40000818
TIM4_OCMR1	EQU	0x40000818
TIM4_CCMR2	EQU	0x4000081C
TIM4_OCMR2	EQU	0x4000081C
TIM4_CCER	EQU	0x40000820
TIM4_CNT	EQU	0x40000824
TIM4_PSC	EQU	0x40000828
TIM4_ARR	EQU	0x4000082C
TIM4_CCR1	EQU	0x40000834
TIM4_CCR2	EQU	0x40000838
TIM4_CCR3	EQU	0x4000083C
TIM4_CCR4	EQU	0x40000840
TIM4_DCR	EQU	0x40000848
TIM4_DMAR	EQU	0x4000084C
TIM5_CR1	EQU	0x40000C00
TIM5_CR2	EQU	0x40000C04
TIM5_SMCR	EQU	0x40000C08
TIM5_DIER	EQU	0x40000C0C
TIM5_SR	EQU	0x40000C10
TIM5_EGR	EQU	0x40000C14
TIM5_CCMR1	EQU	0x40000C18
TIM5_OCMR1	EQU	0x40000C18
TIM5_CCMR2	EQU	0x40000C1C
TIM5_OCMR2	EQU	0x40000C1C
TIM5_CCER	EQU	0x40000C20
TIM5_CNT	EQU	0x40000C24
TIM5_PSC	EQU	0x40000C28
TIM5_ARR	EQU	0x40000C2C
TIM5_CCR1	EQU	0x40000C34
TIM5_CCR2	EQU	0x40000C38
TIM5_CCR3	EQU	0x40000C3C
TIM5_CCR4	EQU	0x40000C40
TIM5_DCR	EQU	0x40000C48
TIM5_DMAR	EQU	0x40000C4C
TIM6_CR1	EQU	0x40001000
TIM6_CR2	EQU	0x40001004
TIM6_DIER	EQU	0x4000100C
TIM6_SR	EQU	0x40001010
TIM6_EGR	EQU	0x40001014
TIM6_CNT	EQU	0x40001024
TIM6_PSC	EQU	0x40001028
TIM6_ARR	EQU	0x4000102C
TIM7_CR1	EQU	0x40001400
TIM7_CR2	EQU	0x40001404
TIM7_DIER	EQU	0x4000140C
TIM7_SR	EQU	0x40001410
TIM7_EGR	EQU	0x40001414
TIM7_CNT	EQU	0x40001424
TIM7_PSC	EQU	0x40001428
TIM7_ARR	EQU	0x4000142C
CAN_MCR	EQU	0x40006400
CAN_MSR	EQU	0x40006404
CAN_TSR	EQU	0x40006408
CAN_RF0R	EQU	0x4000640C
CAN_RF1R	EQU	0x40006410
CAN_IER	EQU	0x40006414
CAN_ESR	EQU	0x40006418
CAN_BTR	EQU	0x4000641C
CAN_TI0R	EQU	0x40006580
CAN_TDT0R	EQU	0x40006584
CAN_TDL0R	EQU	0x40006588
CAN_TDH0R	EQU	0x4000658C
CAN_TI1R	EQU	0x40006590
CAN_TDT1R	EQU	0x40006594
CAN_TDL1R	EQU	0x40006598
CAN_TDH1R	EQU	0x4000659C
CAN_TI2R	EQU	0x400065A0
CAN_TDT2R	EQU	0x400065A4
CAN_TDL2R	EQU	0x400065A8
CAN_TDH2R	EQU	0x400065AC
CAN_RI0R	EQU	0x400065B0
CAN_RDT0R	EQU	0x400065B4
CAN_RDL0R	EQU	0x400065B8
CAN_RDH0R	EQU	0x400065BC
CAN_RI1R	EQU	0x400065C0
CAN_RDT1R	EQU	0x400065C4
CAN_RDL1R	EQU	0x400065C8
CAN_RDH1R	EQU	0x400065CC
CAN_FMR	EQU	0x40006600
CAN_FM1R	EQU	0x40006604
CAN_FS1R	EQU	0x4000660C
CAN_FFA1R	EQU	0x40006614
CAN_FA1R	EQU	0x4000661C
CAN_F0R1	EQU	0x40006640
CAN_F0R2	EQU	0x40006644
CAN_F1R1	EQU	0x40006648
CAN_F1R2	EQU	0x4000664C
CAN_F2R1	EQU	0x40006650
CAN_F2R2	EQU	0x40006654
CAN_F3R1	EQU	0x40006658
CAN_F3R2	EQU	0x4000665C
CAN_F4R1	EQU	0x40006660
CAN_F4R2	EQU	0x40006664
CAN_F5R1	EQU	0x40006668
CAN_F5R2	EQU	0x4000666C
CAN_F6R1	EQU	0x40006670
CAN_F6R2	EQU	0x40006674
CAN_F7R1	EQU	0x40006678
CAN_F7R2	EQU	0x4000667C
CAN_F8R1	EQU	0x40006680
CAN_F8R2	EQU	0x40006684
CAN_F9R1	EQU	0x40006688
CAN_F9R2	EQU	0x4000668C
CAN_F10R1	EQU	0x40006690
CAN_F10R2	EQU	0x40006694
CAN_F11R1	EQU	0x40006698
CAN_F11R2	EQU	0x4000669C
CAN_F12R1	EQU	0x400066A0
CAN_F12R2	EQU	0x400066A4
CAN_F13R1	EQU	0x400066A8
CAN_F13R2	EQU	0x400066AC
I2C1_CR1	EQU	0x40005400
I2C1_CR2	EQU	0x40005404
I2C1_OAR1	EQU	0x40005408
I2C1_OAR2	EQU	0x4000540C
I2C1_DR	EQU	0x40005410
I2C1_SR1	EQU	0x40005414
I2C1_SR2	EQU	0x40005418
I2C1_CCR	EQU	0x4000541C
I2C1_TRISE	EQU	0x40005420
I2C2_CR1	EQU	0x40005800
I2C2_CR2	EQU	0x40005804
I2C2_OAR1	EQU	0x40005808
I2C2_OAR2	EQU	0x4000580C
I2C2_DR	EQU	0x40005810
I2C2_SR1	EQU	0x40005814
I2C2_SR2	EQU	0x40005818
I2C2_CCR	EQU	0x4000581C
I2C2_TRISE	EQU	0x40005820
SPI1_CR1	EQU	0x40013000
SPI1_CR2	EQU	0x40013004
SPI1_SR	EQU	0x40013008
SPI1_DR	EQU	0x4001300C
SPI1_CRCPR	EQU	0x40013010
SPI1_RXCRCR	EQU	0x40013014
SPI1_TXCRCR	EQU	0x40013018
SPI2_CR1	EQU	0x40003800
SPI2_CR2	EQU	0x40003804
SPI2_SR	EQU	0x40003808
SPI2_DR	EQU	0x4000380C
SPI2_CRCPR	EQU	0x40003810
SPI2_RXCRCR	EQU	0x40003814
SPI2_TXCRCR	EQU	0x40003818
SPI2_I2SCFGR	EQU	0x4000381C
SPI2_I2SPR	EQU	0x40003820
SPI3_CR1	EQU	0x40003C00
SPI3_CR2	EQU	0x40003C04
SPI3_SR	EQU	0x40003C08
SPI3_DR	EQU	0x40003C0C
SPI3_CRCPR	EQU	0x40003C10
SPI3_RXCRCR	EQU	0x40003C14
SPI3_TXCRCR	EQU	0x40003C18
SPI3_I2SCFGR	EQU	0x40003C1C
SPI3_I2SPR	EQU	0x40003C20
USART1_SR	EQU	0x40013800
USART1_DR	EQU	0x40013804
USART1_BRR	EQU	0x40013808
USART1_CR1	EQU	0x4001380C
USART1_CR2	EQU	0x40013810
USART1_CR3	EQU	0x40013814
USART1_GTPR	EQU	0x40013818
USART2_SR	EQU	0x40004400
USART2_DR	EQU	0x40004404
USART2_BRR	EQU	0x40004408
USART2_CR1	EQU	0x4000440C
USART2_CR2	EQU	0x40004410
USART2_CR3	EQU	0x40004414
USART2_GTPR	EQU	0x40004418
USART3_SR	EQU	0x40004800
USART3_DR	EQU	0x40004804
USART3_BRR	EQU	0x40004808
USART3_CR1	EQU	0x4000480C
USART3_CR2	EQU	0x40004810
USART3_CR3	EQU	0x40004814
USART3_GTPR	EQU	0x40004818
UART4_SR	EQU	0x40004C00
UART4_DR	EQU	0x40004C04
UART4_BRR	EQU	0x40004C08
UART4_CR1	EQU	0x40004C0C
UART4_CR2	EQU	0x40004C10
UART4_CR3	EQU	0x40004C14
UART5_SR	EQU	0x40005000
UART5_DR	EQU	0x40005004
UART5_BRR	EQU	0x40005008
UART5_CR1	EQU	0x4000500C
UART5_CR2	EQU	0x40005010
UART5_CR3	EQU	0x40005014
USB_EP0R	EQU	0x40005C00
USB_EP1R	EQU	0x40005C04
USB_EP2R	EQU	0x40005C08
USB_EP3R	EQU	0x40005C0C
USB_EP4R	EQU	0x40005C10
USB_EP5R	EQU	0x40005C14
USB_EP6R	EQU	0x40005C18
USB_EP7R	EQU	0x40005C1C
USB_CR	EQU	0x40005C40
USB_ISR	EQU	0x40005C44
USB_FNR	EQU	0x40005C48
USB_ADDR	EQU	0x40005C4C
USB_BTAR	EQU	0x40005C50
ADC1_SR	EQU	0x40012400
ADC1_CR1	EQU	0x40012404
ADC1_CR2	EQU	0x40012408
ADC1_SMPR1	EQU	0x4001240C
ADC1_SMPR2	EQU	0x40012410
ADC1_JOFR1	EQU	0x40012414
ADC1_JOFR2	EQU	0x40012418
ADC1_JOFR3	EQU	0x4001241C
ADC1_JOFR4	EQU	0x40012420
ADC1_HTR	EQU	0x40012424
ADC1_LTR	EQU	0x40012428
ADC1_SQR1	EQU	0x4001242C
ADC1_SQR2	EQU	0x40012430
ADC1_SQR3	EQU	0x40012434
ADC1_JSQR	EQU	0x40012438
ADC1_JDR1	EQU	0x4001243C
ADC1_JDR2	EQU	0x40012440
ADC1_JDR3	EQU	0x40012444
ADC1_JDR4	EQU	0x40012448
ADC1_DR	EQU	0x4001244C
ADC2_SR	EQU	0x40012800
ADC2_CR1	EQU	0x40012804
ADC2_CR2	EQU	0x40012808
ADC2_SMPR1	EQU	0x4001280C
ADC2_SMPR2	EQU	0x40012810
ADC2_JOFR1	EQU	0x40012814
ADC2_JOFR2	EQU	0x40012818
ADC2_JOFR3	EQU	0x4001281C
ADC2_JOFR4	EQU	0x40012820
ADC2_HTR	EQU	0x40012824
ADC2_LTR	EQU	0x40012828
ADC2_SQR1	EQU	0x4001282C
ADC2_SQR2	EQU	0x40012830
ADC2_SQR3	EQU	0x40012834
ADC2_JSQR	EQU	0x40012838
ADC2_JDR1	EQU	0x4001283C
ADC2_JDR2	EQU	0x40012840
ADC2_JDR3	EQU	0x40012844
ADC2_JDR4	EQU	0x40012848
ADC2_DR	EQU	0x4001284C
ADC3_SR	EQU	0x40013C00
ADC3_CR1	EQU	0x40013C04
ADC3_CR2	EQU	0x40013C08
ADC3_SMPR1	EQU	0x40013C0C
ADC3_SMPR2	EQU	0x40013C10
ADC3_JOFR1	EQU	0x40013C14
ADC3_JOFR2	EQU	0x40013C18
ADC3_JOFR3	EQU	0x40013C1C
ADC3_JOFR4	EQU	0x40013C20
ADC3_HTR	EQU	0x40013C24
ADC3_LTR	EQU	0x40013C28
ADC3_SQR1	EQU	0x40013C2C
ADC3_SQR2	EQU	0x40013C30
ADC3_SQR3	EQU	0x40013C34
ADC3_JSQR	EQU	0x40013C38
ADC3_JDR1	EQU	0x40013C3C
ADC3_JDR2	EQU	0x40013C40
ADC3_JDR3	EQU	0x40013C44
ADC3_JDR4	EQU	0x40013C48
ADC3_DR	EQU	0x40013C4C
FSMC_BCR1	EQU	0xA0000000
FSMC_BTR1	EQU	0xA0000004
FSMC_BCR2	EQU	0xA0000008
FSMC_BTR2	EQU	0xA000000C
FSMC_BCR3	EQU	0xA0000010
FSMC_BTR3	EQU	0xA0000014
FSMC_BCR4	EQU	0xA0000018
FSMC_BTR4	EQU	0xA000001C
FSMC_PCR2	EQU	0xA0000060
FSMC_SR2	EQU	0xA0000064
FSMC_PMEM2	EQU	0xA0000068
FSMC_PATT2	EQU	0xA000006C
FSMC_ECCR2	EQU	0xA0000074
FSMC_PCR3	EQU	0xA0000080
FSMC_SR3	EQU	0xA0000084
FSMC_PMEM3	EQU	0xA0000088
FSMC_PATT3	EQU	0xA000008C
FSMC_ECCR3	EQU	0xA0000094
FSMC_PCR4	EQU	0xA00000A0
FSMC_SR4	EQU	0xA00000A4
FSMC_PMEM4	EQU	0xA00000A8
FSMC_PATT4	EQU	0xA00000AC
FSMC_PIO4	EQU	0xA00000B0
FSMC_BWTR1	EQU	0xA0000104
FSMC_BWTR2	EQU	0xA000010C
FSMC_BWTR3	EQU	0xA0000114
FSMC_BWTR4	EQU	0xA000011C
SDIO_POWER	EQU	0x40018000
SDIO_CLKCR	EQU	0x40018004
SDIO_ARG	EQU	0x40018008
SDIO_CMD	EQU	0x4001800C
SDIO_RESPCMD	EQU	0x40018010
SDIO_RESP1	EQU	0x40018014
SDIO_RESP2	EQU	0x40018018
SDIO_RESP3	EQU	0x4001801C
SDIO_RESP4	EQU	0x40018020
SDIO_DTIMER	EQU	0x40018024
SDIO_DLEN	EQU	0x40018028
SDIO_DCTRL	EQU	0x4001802C
SDIO_DCOUNT	EQU	0x40018030
SDIO_STA	EQU	0x40018034
SDIO_ICR	EQU	0x40018038
SDIO_MASK	EQU	0x4001803C
SDIO_FIFOCNT	EQU	0x40018048
SDIO_FIFO	EQU	0x40018080
DAC_CR	EQU	0x40007400
DAC_SWTRIGR	EQU	0x40007404
DAC_DHR12R1	EQU	0x40007408
DAC_DHR12L1	EQU	0x4000740C
DAC_DHR8R1	EQU	0x40007410
DAC_DHR12R2	EQU	0x40007414
DAC_DHR12L2	EQU	0x40007418
DAC_DHR8R2	EQU	0x4000741C
DAC_DHR12RD	EQU	0x40007420
DAC_DHR12LD	EQU	0x40007424
DAC_DHR8RD	EQU	0x40007428
DAC_DOR1	EQU	0x4000742C
DAC_DOR2	EQU	0x40007430
DBGMCU_IDCODE	EQU	0xE0042000
DBGMCU_CR	EQU	0xE0042004
NVIC	EQU	0xE000E004
SYSTICKCSR	EQU	0xE000E010
SYSTICKRVR	EQU	0xE000E014
SYSTICKCVR	EQU	0xE000E018
SYSTICKCALVR	EQU	0xE000E01C
SETENA0	EQU	0xE000E100
SETENA1	EQU	0xE000E104
CLRENA0	EQU	0xE000E180
CLRENA1	EQU	0xE000E184
SETPEND0	EQU	0xE000E200
SETPEND1	EQU	0xE000E204
CLRPEND0	EQU	0xE000E280
CLRPEND1	EQU	0xE000E284
ACTIVE0	EQU	0xE000E300
ACTIVE1	EQU	0xE000E304
IP0	EQU	0xE000E400
IP1	EQU	0xE000E404
IP2	EQU	0xE000E408
IP3	EQU	0xE000E40C
IP4	EQU	0xE000E410
IP5	EQU	0xE000E414
IP6	EQU	0xE000E418
IP7	EQU	0xE000E41C
IP8	EQU	0xE000E420
IP9	EQU	0xE000E424
IP10	EQU	0xE000E428
IP11	EQU	0xE000E42C
IP12	EQU	0xE000E430
IP13	EQU	0xE000E434
IP14	EQU	0xE000E438
IP15	EQU	0xE000E43C
CPUIDBR	EQU	0xE000ED00
ICSR	EQU	0xE000ED04
VTOR	EQU	0xE000ED08
AITCR	EQU	0xE000ED0C
SCR	EQU	0xE000ED10
CCR	EQU	0xE000ED14
SHPR0	EQU	0xE000ED18
SHPR1	EQU	0xE000ED1C
SHPR2	EQU	0xE000ED20
SHCSR	EQU	0xE000ED24
CFSR	EQU	0xE000ED28
HFSR	EQU	0xE000ED2C
DFSR	EQU	0xE000ED30
MMFAR	EQU	0xE000ED34
BFAR	EQU	0xE000ED38
STIR	EQU	0xE000EF00
FLASH_ACR	EQU	0x40022000
FLASH_KEYR	EQU	0x40022004
FLASH_OPTKEYR	EQU	0x40022008
FLASH_SR	EQU	0x4002200C
FLASH_CR	EQU	0x40022010
FLASH_AR	EQU	0x40022014
FLASH_OBR	EQU	0x4002201C
FLASH_WRPR	EQU	0x40022020





; Peripheral Registers_Bits_Definition




; Bit definition for CRC_DR register
CRC_DR_DR	EQU	0xFFFFFFFF ; Data register bits


; Bit definition for CRC_IDR register
CRC_IDR_IDR	EQU	0xFF ; General-purpose 8-bit data register bits


; Bit definition for CRC_CR register
CRC_CR_RESET	EQU	0x01 ; RESET bit


;
; Power Control
;


; Bit definition for PWR_CR register
PWR_CR_LPDS	EQU	0x0001 ; Low-Power Deepsleep
PWR_CR_PDDS	EQU	0x0002 ; Power Down Deepsleep
PWR_CR_CWUF	EQU	0x0004 ; Clear Wakeup Flag
PWR_CR_CSBF	EQU	0x0008 ; Clear Standby Flag
PWR_CR_PVDE	EQU	0x0010 ; Power Voltage Detector Enable

PWR_CR_PLS	EQU	0x00E0	; PLS[2:0] bits (PVD Level Selection)
PWR_CR_PLS_0	EQU	0x0020	; Bit 0
PWR_CR_PLS_1	EQU	0x0040	; Bit 1
PWR_CR_PLS_2	EQU	0x0080	; Bit 2

; PVD level configuration
PWR_CR_PLS_2V2	EQU	0x0000	; PVD level 2.2V
PWR_CR_PLS_2V3	EQU	0x0020	; PVD level 2.3V
PWR_CR_PLS_2V4	EQU	0x0040	; PVD level 2.4V
PWR_CR_PLS_2V5	EQU	0x0060	; PVD level 2.5V
PWR_CR_PLS_2V6	EQU	0x0080	; PVD level 2.6V
PWR_CR_PLS_2V7	EQU	0x00A0	; PVD level 2.7V
PWR_CR_PLS_2V8	EQU	0x00C0	; PVD level 2.8V
PWR_CR_PLS_2V9	EQU	0x00E0	; PVD level 2.9V

PWR_CR_DBP	EQU	0x0100	; Disable Backup Domain write protection


; Bit definition for PWR_CSR register
PWR_CSR_WUF	EQU	0x0001	; Wakeup Flag
PWR_CSR_SBF	EQU	0x0002	; Standby Flag
PWR_CSR_PVDO	EQU	0x0004	; PVD Output
PWR_CSR_EWUP	EQU	0x0100	; Enable WKUP pin


;
; Backup registers
;


; Bit definition for BKP_DR1 register
BKP_DR1_D	EQU	0xFFFF	; Backup data

; Bit definition for BKP_DR2 register
BKP_DR2_D	EQU	0xFFFF	; Backup data

; Bit definition for BKP_DR3 register
BKP_DR3_D	EQU	0xFFFF	; Backup data

; Bit definition for BKP_DR4 register
BKP_DR4_D	EQU	0xFFFF	; Backup data

; Bit definition for BKP_DR5 register
BKP_DR5_D	EQU	0xFFFF	; Backup data

; Bit definition for BKP_DR6 register
BKP_DR6_D	EQU	0xFFFF	; Backup data

; Bit definition for BKP_DR7 register
BKP_DR7_D	EQU	0xFFFF	; Backup data

; Bit definition for BKP_DR8 register
BKP_DR8_D	EQU	0xFFFF	; Backup data

; Bit definition for BKP_DR9 register
BKP_DR9_D	EQU	0xFFFF	; Backup data

; Bit definition for BKP_DR10 register
BKP_DR10_D	EQU	0xFFFF	; Backup data

; Bit definition for BKP_DR11 register
BKP_DR11_D	EQU	0xFFFF	; Backup data

; Bit definition for BKP_DR12 register
BKP_DR12_D	EQU	0xFFFF	; Backup data

; Bit definition for BKP_DR13 register
BKP_DR13_D	EQU	0xFFFF	; Backup data

; Bit definition for BKP_DR14 register
BKP_DR14_D	EQU	0xFFFF	; Backup data

; Bit definition for BKP_DR15 register
BKP_DR15_D	EQU	0xFFFF	; Backup data

; Bit definition for BKP_DR16 register
BKP_DR16_D	EQU	0xFFFF	; Backup data

; Bit definition for BKP_DR17 register
BKP_DR17_D	EQU	0xFFFF	; Backup data

; Bit definition for BKP_DR18 register
BKP_DR18_D	EQU	0xFFFF	; Backup data

; Bit definition for BKP_DR19 register
BKP_DR19_D	EQU	0xFFFF	; Backup data

; Bit definition for BKP_DR20 register
BKP_DR20_D	EQU	0xFFFF	; Backup data

; Bit definition for BKP_DR21 register
BKP_DR21_D	EQU	0xFFFF	; Backup data

; Bit definition for BKP_DR22 register
BKP_DR22_D	EQU	0xFFFF	; Backup data

; Bit definition for BKP_DR23 register
BKP_DR23_D	EQU	0xFFFF	; Backup data

; Bit definition for BKP_DR24 register
BKP_DR24_D	EQU	0xFFFF	; Backup data

; Bit definition for BKP_DR25 register
BKP_DR25_D	EQU	0xFFFF	; Backup data

; Bit definition for BKP_DR26 register
BKP_DR26_D	EQU	0xFFFF	; Backup data

; Bit definition for BKP_DR27 register
BKP_DR27_D	EQU	0xFFFF	; Backup data

; Bit definition for BKP_DR28 register
BKP_DR28_D	EQU	0xFFFF	; Backup data

; Bit definition for BKP_DR29 register
BKP_DR29_D	EQU	0xFFFF	; Backup data

; Bit definition for BKP_DR30 register
BKP_DR30_D	EQU	0xFFFF	; Backup data

; Bit definition for BKP_DR31 register
BKP_DR31_D	EQU	0xFFFF	; Backup data

; Bit definition for BKP_DR32 register
BKP_DR32_D	EQU	0xFFFF	; Backup data

; Bit definition for BKP_DR33 register
BKP_DR33_D	EQU	0xFFFF	; Backup data

; Bit definition for BKP_DR34 register
BKP_DR34_D	EQU	0xFFFF	; Backup data

; Bit definition for BKP_DR35 register
BKP_DR35_D	EQU	0xFFFF	; Backup data

; Bit definition for BKP_DR36 register
BKP_DR36_D	EQU	0xFFFF	; Backup data

; Bit definition for BKP_DR37 register
BKP_DR37_D	EQU	0xFFFF	; Backup data

; Bit definition for BKP_DR38 register
BKP_DR38_D	EQU	0xFFFF	; Backup data

; Bit definition for BKP_DR39 register
BKP_DR39_D	EQU	0xFFFF	; Backup data

; Bit definition for BKP_DR40 register
BKP_DR40_D	EQU	0xFFFF	; Backup data

; Bit definition for BKP_DR41 register
BKP_DR41_D	EQU	0xFFFF	; Backup data

; Bit definition for BKP_DR42 register
BKP_DR42_D	EQU	0xFFFF	; Backup data

; Bit definition for BKP_RTCCR register
BKP_RTCCR_CAL	EQU	0x007F	; Calibration value
BKP_RTCCR_CCO	EQU	0x0080	; Calibration Clock Output
BKP_RTCCR_ASOE	EQU	0x0100	; Alarm or Second Output Enable
BKP_RTCCR_ASOS	EQU	0x0200	; Alarm or Second Output Selection

; Bit definition for BKP_CR register
BKP_CR_TPE	EQU	0x01	; TAMPER pin enable
BKP_CR_TPAL	EQU	0x02	; TAMPER pin active level

; Bit definition for BKP_CSR register
BKP_CSR_CTE	EQU	0x0001	; Clear Tamper event
BKP_CSR_CTI	EQU	0x0002	; Clear Tamper Interrupt
BKP_CSR_TPIE	EQU	0x0004	; TAMPER Pin interrupt enable
BKP_CSR_TEF	EQU	0x0100	; Tamper Event Flag
BKP_CSR_TIF	EQU	0x0200	; Tamper Interrupt Flag


;
; Reset and Clock Control
;


; Bit definition for RCC_CR register
RCC_CR_HSION	EQU	0x00000001	; Internal High Speed clock enable
RCC_CR_HSIRDY	EQU	0x00000002	; Internal High Speed clock ready flag
RCC_CR_HSITRIM	EQU	0x000000F8	; Internal High Speed clock trimming
RCC_CR_HSICAL	EQU	0x0000FF00	; Internal High Speed clock Calibration
RCC_CR_HSEON	EQU	0x00010000	; External High Speed clock enable
RCC_CR_HSERDY	EQU	0x00020000	; External High Speed clock ready flag
RCC_CR_HSEBYP	EQU	0x00040000	; External High Speed clock Bypass
RCC_CR_CSSON	EQU	0x00080000	; Clock Security System enable
RCC_CR_PLLON	EQU	0x01000000	; PLL enable
RCC_CR_PLLRDY	EQU	0x02000000	; PLL clock ready flag

RCC_CR_PLL2ON	EQU	0x04000000	; PLL2 enable
RCC_CR_PLL2RDY	EQU	0x08000000	; PLL2 clock ready flag
RCC_CR_PLL3ON	EQU	0x10000000	; PLL3 enable
RCC_CR_PLL3RDY	EQU	0x20000000	; PLL3 clock ready flag

; Bit definition for RCC_CFGR register
; SW configuration
RCC_CFGR_SW	EQU	0x00000003	; SW[1:0] bits (System clock Switch)
RCC_CFGR_SW_0	EQU	0x00000001	; Bit 0
RCC_CFGR_SW_1	EQU	0x00000002	; Bit 1

RCC_CFGR_SW_HSI	EQU	0x00000000	; HSI selected as system clock
RCC_CFGR_SW_HSE	EQU	0x00000001	; HSE selected as system clock
RCC_CFGR_SW_PLL	EQU	0x00000002	; PLL selected as system clock

; SWS configuration
RCC_CFGR_SWS	EQU	0x0000000C	; SWS[1:0] bits (System Clock Switch Status)
RCC_CFGR_SWS_0	EQU	0x00000004	; Bit 0
RCC_CFGR_SWS_1	EQU	0x00000008	; Bit 1

RCC_CFGR_SWS_HSI	EQU	0x00000000	; HSI oscillator used as system clock
RCC_CFGR_SWS_HSE	EQU	0x00000004	; HSE oscillator used as system clock
RCC_CFGR_SWS_PLL	EQU	0x00000008	; PLL used as system clock

; HPRE configuration
RCC_CFGR_HPRE	EQU	0x000000F0	; HPRE[3:0] bits (AHB prescaler)
RCC_CFGR_HPRE_0	EQU	0x00000010	; Bit 0
RCC_CFGR_HPRE_1	EQU	0x00000020	; Bit 1
RCC_CFGR_HPRE_2	EQU	0x00000040	; Bit 2
RCC_CFGR_HPRE_3	EQU	0x00000080	; Bit 3

RCC_CFGR_HPRE_DIV1	EQU	0x00000000	; SYSCLK not divided
RCC_CFGR_HPRE_DIV2	EQU	0x00000080	; SYSCLK divided by 2
RCC_CFGR_HPRE_DIV4	EQU	0x00000090	; SYSCLK divided by 4
RCC_CFGR_HPRE_DIV8	EQU	0x000000A0	; SYSCLK divided by 8
RCC_CFGR_HPRE_DIV16	EQU	0x000000B0	; SYSCLK divided by 16
RCC_CFGR_HPRE_DIV64	EQU	0x000000C0	; SYSCLK divided by 64
RCC_CFGR_HPRE_DIV128	EQU	0x000000D0	; SYSCLK divided by 128
RCC_CFGR_HPRE_DIV256	EQU	0x000000E0	; SYSCLK divided by 256
RCC_CFGR_HPRE_DIV512	EQU	0x000000F0	; SYSCLK divided by 512

; PPRE1 configuration
RCC_CFGR_PPRE1	EQU	0x00000700	; PRE1[2:0] bits (APB1 prescaler)
RCC_CFGR_PPRE1_0	EQU	0x00000100	; Bit 0
RCC_CFGR_PPRE1_1	EQU	0x00000200	; Bit 1
RCC_CFGR_PPRE1_2	EQU	0x00000400	; Bit 2

RCC_CFGR_PPRE1_DIV1	EQU	0x00000000	; HCLK not divided
RCC_CFGR_PPRE1_DIV2	EQU	0x00000400	; HCLK divided by 2
RCC_CFGR_PPRE1_DIV4	EQU	0x00000500	; HCLK divided by 4
RCC_CFGR_PPRE1_DIV8	EQU	0x00000600	; HCLK divided by 8
RCC_CFGR_PPRE1_DIV16	EQU	0x00000700	; HCLK divided by 16

; PPRE2 configuration
RCC_CFGR_PPRE2	EQU	0x00003800	; PRE2[2:0] bits (APB2 prescaler)
RCC_CFGR_PPRE2_0	EQU	0x00000800	; Bit 0
RCC_CFGR_PPRE2_1	EQU	0x00001000	; Bit 1
RCC_CFGR_PPRE2_2	EQU	0x00002000	; Bit 2

RCC_CFGR_PPRE2_DIV1	EQU	0x00000000	; HCLK not divided
RCC_CFGR_PPRE2_DIV2	EQU	0x00002000	; HCLK divided by 2
RCC_CFGR_PPRE2_DIV4	EQU	0x00002800	; HCLK divided by 4
RCC_CFGR_PPRE2_DIV8	EQU	0x00003000	; HCLK divided by 8
RCC_CFGR_PPRE2_DIV16	EQU	0x00003800	; HCLK divided by 16

; ADCPPRE configuration
RCC_CFGR_ADCPRE	EQU	0x0000C000	; ADCPRE[1:0] bits (ADC prescaler)
RCC_CFGR_ADCPRE_0	EQU	0x00004000	; Bit 0
RCC_CFGR_ADCPRE_1	EQU	0x00008000	; Bit 1

RCC_CFGR_ADCPRE_DIV2	EQU	0x00000000	; PCLK2 divided by 2
RCC_CFGR_ADCPRE_DIV4	EQU	0x00004000	; PCLK2 divided by 4
RCC_CFGR_ADCPRE_DIV6	EQU	0x00008000	; PCLK2 divided by 6
RCC_CFGR_ADCPRE_DIV8	EQU	0x0000C000	; PCLK2 divided by 8

RCC_CFGR_PLLSRC	EQU	0x00010000	; PLL entry clock source

RCC_CFGR_PLLXTPRE	EQU	0x00020000	; HSE divider for PLL entry

; PLLMUL configuration
RCC_CFGR_PLLMULL	EQU	0x003C0000	; PLLMUL[3:0] bits (PLL multiplication factor)
RCC_CFGR_PLLMULL_0	EQU	0x00040000	; Bit 0
RCC_CFGR_PLLMULL_1	EQU	0x00080000	; Bit 1
RCC_CFGR_PLLMULL_2	EQU	0x00100000	; Bit 2
RCC_CFGR_PLLMULL_3	EQU	0x00200000	; Bit 3


	IF :DEF:STM32F10X_CL
RCC_CFGR_PLLSRC_HSI_Div2	EQU	0x00000000	; HSI clock divided by 2 selected as PLL entry clock source
RCC_CFGR_PLLSRC_PREDIV1	EQU	0x00010000	; PREDIV1 clock selected as PLL entry clock source

RCC_CFGR_PLLXTPRE_PREDIV1	EQU	0x00000000	; PREDIV1 clock not divided for PLL entry
RCC_CFGR_PLLXTPRE_PREDIV1_Div2	EQU	0x00020000	; PREDIV1 clock divided by 2 for PLL entry

RCC_CFGR_PLLMULL4	EQU	0x00080000	; PLL input clock * 4
RCC_CFGR_PLLMULL5	EQU	0x000C0000	; PLL input clock * 5
RCC_CFGR_PLLMULL6	EQU	0x00100000	; PLL input clock * 6
RCC_CFGR_PLLMULL7	EQU	0x00140000	; PLL input clock * 7
RCC_CFGR_PLLMULL8	EQU	0x00180000	; PLL input clock * 8
RCC_CFGR_PLLMULL9	EQU	0x001C0000	; PLL input clock * 9
RCC_CFGR_PLLMULL6_5	EQU	0x00340000	; PLL input clock * 6.5

RCC_CFGR_OTGFSPRE	EQU	0x00400000	; USB OTG FS prescaler

; MCO configuration
RCC_CFGR_MCO	EQU	0x0F000000	; MCO[3:0] bits (Microcontroller Clock Output)
RCC_CFGR_MCO_0	EQU	0x01000000	; Bit 0
RCC_CFGR_MCO_1	EQU	0x02000000	; Bit 1
RCC_CFGR_MCO_2	EQU	0x04000000	; Bit 2
RCC_CFGR_MCO_3	EQU	0x08000000	; Bit 3

RCC_CFGR_MCO_NOCLOCK	EQU	0x00000000	; No clock
RCC_CFGR_MCO_SYSCLK	EQU	0x04000000	; System clock selected as MCO source
RCC_CFGR_MCO_HSI	EQU	0x05000000	; HSI clock selected as MCO source
RCC_CFGR_MCO_HSE	EQU	0x06000000	; HSE clock selected as MCO source
RCC_CFGR_MCO_PLLCLK_Div2	EQU	0x07000000	; PLL clock divided by 2 selected as MCO source
RCC_CFGR_MCO_PLL2CLK	EQU	0x08000000	; PLL2 clock selected as MCO source
RCC_CFGR_MCO_PLL3CLK_Div2	EQU	0x09000000	; PLL3 clock divided by 2 selected as MCO source
RCC_CFGR_MCO_Ext_HSE	EQU	0x0A000000	; XT1 external 3-25 MHz oscillator clock selected as MCO source
RCC_CFGR_MCO_PLL3CLK	EQU	0x0B000000	; PLL3 clock selected as MCO source

	ELSE

RCC_CFGR_PLLSRC_HSI_Div2	EQU	0x00000000	; HSI clock divided by 2 selected as PLL entry clock source
RCC_CFGR_PLLSRC_HSE	EQU	0x00010000	; HSE clock selected as PLL entry clock source

RCC_CFGR_PLLXTPRE_HSE	EQU	0x00000000	; HSE clock not divided for PLL entry
RCC_CFGR_PLLXTPRE_HSE_Div2	EQU	0x00020000	; HSE clock divided by 2 for PLL entry

RCC_CFGR_PLLMULL2	EQU	0x00000000	; PLL input clock*2
RCC_CFGR_PLLMULL3	EQU	0x00040000	; PLL input clock*3
RCC_CFGR_PLLMULL4	EQU	0x00080000	; PLL input clock*4
RCC_CFGR_PLLMULL5	EQU	0x000C0000	; PLL input clock*5
RCC_CFGR_PLLMULL6	EQU	0x00100000	; PLL input clock*6
RCC_CFGR_PLLMULL7	EQU	0x00140000	; PLL input clock*7
RCC_CFGR_PLLMULL8	EQU	0x00180000	; PLL input clock*8
RCC_CFGR_PLLMULL9	EQU	0x001C0000	; PLL input clock*9
RCC_CFGR_PLLMULL10	EQU	0x00200000	; PLL input clock10
RCC_CFGR_PLLMULL11	EQU	0x00240000	; PLL input clock*11
RCC_CFGR_PLLMULL12	EQU	0x00280000	; PLL input clock*12
RCC_CFGR_PLLMULL13	EQU	0x002C0000	; PLL input clock*13
RCC_CFGR_PLLMULL14	EQU	0x00300000	; PLL input clock*14
RCC_CFGR_PLLMULL15	EQU	0x00340000	; PLL input clock*15
RCC_CFGR_PLLMULL16	EQU	0x00380000	; PLL input clock*16
RCC_CFGR_USBPRE	EQU	0x00400000	; USB Device prescaler

; MCO configuration
RCC_CFGR_MCO	EQU	0x07000000	; MCO[2:0] bits (Microcontroller Clock Output)
RCC_CFGR_MCO_0	EQU	0x01000000	; Bit 0
RCC_CFGR_MCO_1	EQU	0x02000000	; Bit 1
RCC_CFGR_MCO_2	EQU	0x04000000	; Bit 2

RCC_CFGR_MCO_NOCLOCK	EQU	0x00000000	; No clock
RCC_CFGR_MCO_SYSCLK	EQU	0x04000000	; System clock selected as MCO source
RCC_CFGR_MCO_HSI	EQU	0x05000000	; HSI clock selected as MCO source
RCC_CFGR_MCO_HSE	EQU	0x06000000	; HSE clock selected as MCO source
RCC_CFGR_MCO_PLL	EQU	0x07000000	; PLL clock divided by 2 selected as MCO source

	ENDIF ; STM32F10X_CL

; * Bit definition for RCC_CIR register
RCC_CIR_LSIRDYF	EQU	0x00000001	; LSI Ready Interrupt flag
RCC_CIR_LSERDYF	EQU	0x00000002	; LSE Ready Interrupt flag
RCC_CIR_HSIRDYF	EQU	0x00000004	; HSI Ready Interrupt flag
RCC_CIR_HSERDYF	EQU	0x00000008	; HSE Ready Interrupt flag
RCC_CIR_PLLRDYF	EQU	0x00000010	; PLL Ready Interrupt flag
RCC_CIR_CSSF	EQU	0x00000080	; Clock Security System Interrupt flag
RCC_CIR_LSIRDYIE	EQU	0x00000100	; LSI Ready Interrupt Enable
RCC_CIR_LSERDYIE	EQU	0x00000200	; LSE Ready Interrupt Enable
RCC_CIR_HSIRDYIE	EQU	0x00000400	; HSI Ready Interrupt Enable
RCC_CIR_HSERDYIE	EQU	0x00000800	; HSE Ready Interrupt Enable
RCC_CIR_PLLRDYIE	EQU	0x00001000	; PLL Ready Interrupt Enable
RCC_CIR_LSIRDYC	EQU	0x00010000	; LSI Ready Interrupt Clear
RCC_CIR_LSERDYC	EQU	0x00020000	; LSE Ready Interrupt Clear
RCC_CIR_HSIRDYC	EQU	0x00040000	; HSI Ready Interrupt Clear
RCC_CIR_HSERDYC	EQU	0x00080000	; HSE Ready Interrupt Clear
RCC_CIR_PLLRDYC	EQU	0x00100000	; PLL Ready Interrupt Clear
RCC_CIR_CSSC	EQU	0x00800000	; Clock Security System Interrupt Clear

	IF :DEF:STM32F10X_CL
RCC_CIR_PLL2RDYF	EQU	0x00000020	; PLL2 Ready Interrupt flag
RCC_CIR_PLL3RDYF	EQU	0x00000040	; PLL3 Ready Interrupt flag
RCC_CIR_PLL2RDYIE	EQU	0x00002000	; PLL2 Ready Interrupt Enable
RCC_CIR_PLL3RDYIE	EQU	0x00004000	; PLL3 Ready Interrupt Enable
RCC_CIR_PLL2RDYC	EQU	0x00200000	; PLL2 Ready Interrupt Clear
RCC_CIR_PLL3RDYC	EQU	0x00400000	; PLL3 Ready Interrupt Clear
	ENDIF ; STM32F10X_CL

; Bit definition for RCC_APB2RSTR register
RCC_APB2RSTR_AFIORST	EQU	0x0001	; Alternate Function I/O reset
RCC_APB2RSTR_IOPARST	EQU	0x0004	; I/O port A reset
RCC_APB2RSTR_IOPBRST	EQU	0x0008	; I/O port B reset
RCC_APB2RSTR_IOPCRST	EQU	0x0010	; I/O port C reset
RCC_APB2RSTR_IOPDRST	EQU	0x0020	; I/O port D reset
RCC_APB2RSTR_ADC1RST	EQU	0x0200	; ADC 1 interface reset
RCC_APB2RSTR_ADC2RST	EQU	0x0400	; ADC 2 interface reset
RCC_APB2RSTR_TIM1RST	EQU	0x0800	; TIM1 Timer reset
RCC_APB2RSTR_SPI1RST	EQU	0x1000	; SPI 1 reset
RCC_APB2RSTR_USART1RST	EQU	0x4000	; USART1 reset

	IF :DEF:STM32F10X_LD
RCC_APB2RSTR_IOPERST	EQU	0x0040	; I/O port E reset
	ENDIF ; STM32F10X_LD

	IF :DEF:STM32F10X_HD
RCC_APB2RSTR_IOPFRST	EQU	0x0080	; I/O port F reset
RCC_APB2RSTR_IOPGRST	EQU	0x0100	; I/O port G reset
RCC_APB2RSTR_TIM8RST	EQU	0x2000	; TIM8 Timer reset
RCC_APB2RSTR_ADC3RST	EQU	0x8000	; ADC3 interface reset
	ENDIF ; STM32F10X_HD

; Bit definition for RCC_APB1RSTR register
RCC_APB1RSTR_TIM2RST	EQU	0x00000001	; Timer 2 reset
RCC_APB1RSTR_TIM3RST	EQU	0x00000002	; Timer 3 reset
RCC_APB1RSTR_WWDGRST	EQU	0x00000800	; Window Watchdog reset
RCC_APB1RSTR_USART2RST	EQU	0x00020000	; USART 2 reset
RCC_APB1RSTR_I2C1RST	EQU	0x00200000	; I2C 1 reset
RCC_APB1RSTR_CAN1RST	EQU	0x02000000	; CAN1 reset
RCC_APB1RSTR_BKPRST	EQU	0x08000000	; Backup interface reset
RCC_APB1RSTR_PWRRST	EQU	0x10000000	; Power interface reset

	IF :DEF:STM32F10X_LD
RCC_APB1RSTR_TIM4RST	EQU	0x00000004	; Timer 4 reset
RCC_APB1RSTR_SPI2RST	EQU	0x00004000	; SPI 2 reset
RCC_APB1RSTR_USART3RST	EQU	0x00040000	; RUSART 3 reset
RCC_APB1RSTR_I2C2RST	EQU	0x00400000	; I2C 2 reset
	ENDIF


	IF :DEF:STM32F10X_HD || :DEF:STM32F10X_MD || :DEF:STM32F10X_LD
RCC_APB1RSTR_USBRST	EQU	0x00800000	; USB Device reset
	ENDIF


	IF :DEF:STM32F10X_HD || :DEF:STM32F10X_CL
RCC_APB1RSTR_TIM5RST	EQU	0x00000008	; Timer 5 reset
RCC_APB1RSTR_TIM6RST	EQU	0x00000010	; Timer 6 reset
RCC_APB1RSTR_TIM7RST	EQU	0x00000020	; Timer 7 reset
RCC_APB1RSTR_SPI3RST	EQU	0x00008000	; SPI 3 reset
RCC_APB1RSTR_UART4RST	EQU	0x00080000	; UART 4 reset
RCC_APB1RSTR_UART5RST	EQU	0x00100000	; UART 5 reset
RCC_APB1RSTR_DACRST	EQU	0x20000000	; DAC interface reset
	ENDIF

	IF :DEF:STM32F10X_CL
RCC_APB1RSTR_CAN2RST	EQU	0x08000000	; CAN2 reset
	ENDIF

; Bit definition for RCC_AHBENR register
RCC_AHBENR_DMA1EN	EQU	0x0001	; DMA1 clock enable
RCC_AHBENR_SRAMEN	EQU	0x0004	; SRAM interface clock enable
RCC_AHBENR_FLITFEN	EQU	0x0010	; FLITF clock enable
RCC_AHBENR_CRCEN	EQU	0x0040	; CRC clock enable

	IF :DEF:STM32F10X_HD || :DEF:STM32F10X_CL
RCC_AHBENR_DMA2EN	EQU	0x0002	; DMA2 clock enable
	ENDIF

	IF :DEF:STM32F10X_HD
RCC_AHBENR_FSMCEN	EQU	0x0100	; FSMC clock enable
RCC_AHBENR_SDIOEN	EQU	0x0400	; SDIO clock enable
	ENDIF

	IF :DEF:STM32F10X_CL
RCC_AHBENR_OTGFSEN	EQU	0x00001000	; USB OTG FS clock enable
RCC_AHBENR_ETHMACEN	EQU	0x00004000	; ETHERNET MAC clock enable
RCC_AHBENR_ETHMACTXEN	EQU	0x00008000	; ETHERNET MAC Tx clock enable
RCC_AHBENR_ETHMACRXEN	EQU	0x00010000	; ETHERNET MAC Rx clock enable
	ENDIF

; Bit definition for RCC_APB2ENR register
RCC_APB2ENR_AFIOEN	EQU	0x0001	; Alternate Function I/O clock enable
RCC_APB2ENR_IOPAEN	EQU	0x0004	; I/O port A clock enable
RCC_APB2ENR_IOPBEN	EQU	0x0008	; I/O port B clock enable
RCC_APB2ENR_IOPCEN	EQU	0x0010	; I/O port C clock enable
RCC_APB2ENR_IOPDEN	EQU	0x0020	; I/O port D clock enable
RCC_APB2ENR_ADC1EN	EQU	0x0200	; ADC 1 interface clock enable
RCC_APB2ENR_ADC2EN	EQU	0x0400	; ADC 2 interface clock enable
RCC_APB2ENR_TIM1EN	EQU	0x0800	; TIM1 Timer clock enable
RCC_APB2ENR_SPI1EN	EQU	0x1000	; SPI 1 clock enable
RCC_APB2ENR_USART1EN	EQU	0x4000	; USART1 clock enable

	IF :DEF:STM32F10X_LD
RCC_APB2ENR_IOPEEN	EQU	0x0040	; I/O port E clock enable
	ENDIF

	IF :DEF:STM32F10X_HD
RCC_APB2ENR_IOPFEN	EQU	0x0080	; I/O port F clock enable
RCC_APB2ENR_IOPGEN	EQU	0x0100	; I/O port G clock enable
RCC_APB2ENR_TIM8EN	EQU	0x2000	; TIM8 Timer clock enable
RCC_APB2ENR_ADC3EN	EQU	0x8000	; DMA1 clock enable
	ENDIF

; Bit definition for RCC_APB1ENR register
RCC_APB1ENR_TIM2EN	EQU	0x00000001	; Timer 2 clock enabled
RCC_APB1ENR_TIM3EN	EQU	0x00000002	; Timer 3 clock enable
RCC_APB1ENR_WWDGEN	EQU	0x00000800	; Window Watchdog clock enable
RCC_APB1ENR_USART2EN	EQU	0x00020000	; USART 2 clock enable
RCC_APB1ENR_I2C1EN	EQU	0x00200000	; I2C 1 clock enable
RCC_APB1ENR_CAN1EN	EQU	0x02000000	; CAN1 clock enable
RCC_APB1ENR_BKPEN	EQU	0x08000000	; Backup interface clock enable
RCC_APB1ENR_PWREN	EQU	0x10000000	; Power interface clock enable

	IF :DEF:STM32F10X_LD
RCC_APB1ENR_TIM4EN	EQU	0x00000004	; Timer 4 clock enable
RCC_APB1ENR_SPI2EN	EQU	0x00004000	; SPI 2 clock enable
RCC_APB1ENR_USART3EN	EQU	0x00040000	; USART 3 clock enable
RCC_APB1ENR_I2C2EN	EQU	0x00400000	; I2C 2 clock enable
	ENDIF

	IF :DEF:STM32F10X_HD || :DEF:STM32F10X_MD || :DEF:STM32F10X_LD
RCC_APB1ENR_USBEN	EQU	0x00800000	; USB Device clock enable
	ENDIF

	IF :DEF:STM32F10X_HD || :DEF:STM32F10X_CL
RCC_APB1ENR_TIM5EN	EQU	0x00000008	; Timer 5 clock enable
RCC_APB1ENR_TIM6EN	EQU	0x00000010	; Timer 6 clock enable
RCC_APB1ENR_TIM7EN	EQU	0x00000020	; Timer 7 clock enable
RCC_APB1ENR_SPI3EN	EQU	0x00008000	; SPI 3 clock enable
RCC_APB1ENR_UART4EN	EQU	0x00080000	; UART 4 clock enable
RCC_APB1ENR_UART5EN	EQU	0x00100000	; UART 5 clock enable
RCC_APB1ENR_DACEN	EQU	0x20000000	; DAC interface clock enable
	ENDIF

	IF :DEF:STM32F10X_CL
RCC_APB1ENR_CAN2EN	EQU	0x08000000	; CAN2 clock enable
	ENDIF

; Bit definition for RCC_BDCR register
RCC_BDCR_LSEON	EQU	0x00000001	; External Low Speed oscillator enable
RCC_BDCR_LSERDY	EQU	0x00000002	; External Low Speed oscillator Ready
RCC_BDCR_LSEBYP	EQU	0x00000004	; External Low Speed oscillator Bypass

RCC_BDCR_RTCSEL	EQU	0x00000300	; RTCSEL[1:0] bits (RTC clock source selection)
RCC_BDCR_RTCSEL_0	EQU	0x00000100	; Bit 0
RCC_BDCR_RTCSEL_1	EQU	0x00000200	; Bit 1

; RTC congiguration
RCC_BDCR_RTCSEL_NOCLOCK	EQU	0x00000000	; No clock
RCC_BDCR_RTCSEL_LSE	EQU	0x00000100	; LSE oscillator clock used as RTC clock
RCC_BDCR_RTCSEL_LSI	EQU	0x00000200	; LSI oscillator clock used as RTC clock
RCC_BDCR_RTCSEL_HSE	EQU	0x00000300	; HSE oscillator clock divided by 128 used as RTC clock

RCC_BDCR_RTCEN	EQU	0x00008000	; RTC clock enable
RCC_BDCR_BDRST	EQU	0x00010000	; Backup domain software reset

; Bit definition for RCC_CSR register
RCC_CSR_LSION	EQU	0x00000001	; Internal Low Speed oscillator enable
RCC_CSR_LSIRDY	EQU	0x00000002	; Internal Low Speed oscillator Ready
RCC_CSR_RMVF	EQU	0x01000000	; Remove reset flag
RCC_CSR_PINRSTF	EQU	0x04000000	; PIN reset flag
RCC_CSR_PORRSTF	EQU	0x08000000	; POR/PDR reset flag
RCC_CSR_SFTRSTF	EQU	0x10000000	; Software Reset flag
RCC_CSR_IWDGRSTF	EQU	0x20000000	; Independent Watchdog reset flag
RCC_CSR_WWDGRSTF	EQU	0x40000000	; Window watchdog reset flag
RCC_CSR_LPWRRSTF	EQU	0x80000000	; Low-Power reset flag

	IF :DEF:STM32F10X_CL
; Bit definition for RCC_AHBRSTR register
RCC_AHBRSTR_OTGFSRST	EQU	0x00001000	; USB OTG FS reset
RCC_AHBRSTR_ETHMACRST	EQU	0x00004000	; ETHERNET MAC reset

; Bit definition for RCC_CFGR2 register
; PREDIV1 configuration
RCC_CFGR2_PREDIV1	EQU	0x0000000F	; PREDIV1[3:0] bits
RCC_CFGR2_PREDIV1_0	EQU	0x00000001	; Bit 0
RCC_CFGR2_PREDIV1_1	EQU	0x00000002	; Bit 1
RCC_CFGR2_PREDIV1_2	EQU	0x00000004	; Bit 2
RCC_CFGR2_PREDIV1_3	EQU	0x00000008	; Bit 3

RCC_CFGR2_PREDIV1_DIV1	EQU	0x00000000	; PREDIV1 input clock not divided
RCC_CFGR2_PREDIV1_DIV2	EQU	0x00000001	; PREDIV1 input clock divided by 2
RCC_CFGR2_PREDIV1_DIV3	EQU	0x00000002	; PREDIV1 input clock divided by 3
RCC_CFGR2_PREDIV1_DIV4	EQU	0x00000003	; PREDIV1 input clock divided by 4
RCC_CFGR2_PREDIV1_DIV5	EQU	0x00000004	; PREDIV1 input clock divided by 5
RCC_CFGR2_PREDIV1_DIV6	EQU	0x00000005	; PREDIV1 input clock divided by 6
RCC_CFGR2_PREDIV1_DIV7	EQU	0x00000006	; PREDIV1 input clock divided by 7
RCC_CFGR2_PREDIV1_DIV8	EQU	0x00000007	; PREDIV1 input clock divided by 8
RCC_CFGR2_PREDIV1_DIV9	EQU	0x00000008	; PREDIV1 input clock divided by 9
RCC_CFGR2_PREDIV1_DIV10	EQU	0x00000009	; PREDIV1 input clock divided by 10
RCC_CFGR2_PREDIV1_DIV11	EQU	0x0000000A	; PREDIV1 input clock divided by 11
RCC_CFGR2_PREDIV1_DIV12	EQU	0x0000000B	; PREDIV1 input clock divided by 12
RCC_CFGR2_PREDIV1_DIV13	EQU	0x0000000C	; PREDIV1 input clock divided by 13
RCC_CFGR2_PREDIV1_DIV14	EQU	0x0000000D	; PREDIV1 input clock divided by 14
RCC_CFGR2_PREDIV1_DIV15	EQU	0x0000000E	; PREDIV1 input clock divided by 15
RCC_CFGR2_PREDIV1_DIV16	EQU	0x0000000F	; PREDIV1 input clock divided by 16

; PREDIV2 configuration
RCC_CFGR2_PREDIV2	EQU	0x000000F0	; PREDIV2[3:0] bits
RCC_CFGR2_PREDIV2_0	EQU	0x00000010	; Bit 0
RCC_CFGR2_PREDIV2_1	EQU	0x00000020	; Bit 1
RCC_CFGR2_PREDIV2_2	EQU	0x00000040	; Bit 2
RCC_CFGR2_PREDIV2_3	EQU	0x00000080	; Bit 3

RCC_CFGR2_PREDIV2_DIV1	EQU	0x00000000	; PREDIV2 input clock not divided
RCC_CFGR2_PREDIV2_DIV2	EQU	0x00000010	; PREDIV2 input clock divided by 2
RCC_CFGR2_PREDIV2_DIV3	EQU	0x00000020	; PREDIV2 input clock divided by 3
RCC_CFGR2_PREDIV2_DIV4	EQU	0x00000030	; PREDIV2 input clock divided by 4
RCC_CFGR2_PREDIV2_DIV5	EQU	0x00000040	; PREDIV2 input clock divided by 5
RCC_CFGR2_PREDIV2_DIV6	EQU	0x00000050	; PREDIV2 input clock divided by 6
RCC_CFGR2_PREDIV2_DIV7	EQU	0x00000060	; PREDIV2 input clock divided by 7
RCC_CFGR2_PREDIV2_DIV8	EQU	0x00000070	; PREDIV2 input clock divided by 8
RCC_CFGR2_PREDIV2_DIV9	EQU	0x00000080	; PREDIV2 input clock divided by 9
RCC_CFGR2_PREDIV2_DIV10	EQU	0x00000090	; PREDIV2 input clock divided by 10
RCC_CFGR2_PREDIV2_DIV11	EQU	0x000000A0	; PREDIV2 input clock divided by 11
RCC_CFGR2_PREDIV2_DIV12	EQU	0x000000B0	; PREDIV2 input clock divided by 12
RCC_CFGR2_PREDIV2_DIV13	EQU	0x000000C0	; PREDIV2 input clock divided by 13
RCC_CFGR2_PREDIV2_DIV14	EQU	0x000000D0	; PREDIV2 input clock divided by 14
RCC_CFGR2_PREDIV2_DIV15	EQU	0x000000E0	; PREDIV2 input clock divided by 15
RCC_CFGR2_PREDIV2_DIV16	EQU	0x000000F0	; PREDIV2 input clock divided by 16

; PLL2MUL configuration
RCC_CFGR2_PLL2MUL	EQU	0x00000F00	; PLL2MUL[3:0] bits
RCC_CFGR2_PLL2MUL_0	EQU	0x00000100	; Bit 0
RCC_CFGR2_PLL2MUL_1	EQU	0x00000200	; Bit 1
RCC_CFGR2_PLL2MUL_2	EQU	0x00000400	; Bit 2
RCC_CFGR2_PLL2MUL_3	EQU	0x00000800	; Bit 3

RCC_CFGR2_PLL2MUL8	EQU	0x00000600	; PLL2 input clock * 8
RCC_CFGR2_PLL2MUL9	EQU	0x00000700	; PLL2 input clock * 9
RCC_CFGR2_PLL2MUL10	EQU	0x00000800	; PLL2 input clock * 10
RCC_CFGR2_PLL2MUL11	EQU	0x00000900	; PLL2 input clock * 11
RCC_CFGR2_PLL2MUL12	EQU	0x00000A00	; PLL2 input clock * 12
RCC_CFGR2_PLL2MUL13	EQU	0x00000B00	; PLL2 input clock * 13
RCC_CFGR2_PLL2MUL14	EQU	0x00000C00	; PLL2 input clock * 14
RCC_CFGR2_PLL2MUL16	EQU	0x00000E00	; PLL2 input clock * 16
RCC_CFGR2_PLL2MUL20	EQU	0x00000F00	; PLL2 input clock * 20

; PLL3MUL configuration
RCC_CFGR2_PLL3MUL	EQU	0x0000F000	; PLL3MUL[3:0] bits
RCC_CFGR2_PLL3MUL_0	EQU	0x00001000	; Bit 0
RCC_CFGR2_PLL3MUL_1	EQU	0x00002000	; Bit 1
RCC_CFGR2_PLL3MUL_2	EQU	0x00004000	; Bit 2
RCC_CFGR2_PLL3MUL_3	EQU	0x00008000	; Bit 3

RCC_CFGR2_PLL3MUL8	EQU	0x00006000	; PLL3 input clock * 8
RCC_CFGR2_PLL3MUL9	EQU	0x00007000	; PLL3 input clock * 9
RCC_CFGR2_PLL3MUL10	EQU	0x00008000	; PLL3 input clock * 10
RCC_CFGR2_PLL3MUL11	EQU	0x00009000	; PLL3 input clock * 11
RCC_CFGR2_PLL3MUL12	EQU	0x0000A000	; PLL3 input clock * 12
RCC_CFGR2_PLL3MUL13	EQU	0x0000B000	; PLL3 input clock * 13
RCC_CFGR2_PLL3MUL14	EQU	0x0000C000	; PLL3 input clock * 14
RCC_CFGR2_PLL3MUL16	EQU	0x0000E000	; PLL3 input clock * 16
RCC_CFGR2_PLL3MUL20	EQU	0x0000F000	; PLL3 input clock * 20

RCC_CFGR2_PREDIV1SRC	EQU	0x00010000	; PREDIV1 entry clock source
RCC_CFGR2_PREDIV1SRC_PLL2	EQU	0x00010000	; PLL2 selected as PREDIV1 entry clock source
RCC_CFGR2_PREDIV1SRC_HSE	EQU	0x00000000	; HSE selected as PREDIV1 entry clock source
RCC_CFGR2_I2S2SRC	EQU	0x00020000	; I2S2 entry clock source
RCC_CFGR2_I2S3SRC	EQU	0x00040000	; I2S3 clock source
	ENDIF ; STM32F10X_CL


;
; General Purpose and Alternate Function I/O
;


; Bit definition for GPIO_CRL register
GPIO_CRL_MODE	EQU	0x33333333	; Port x mode bits

GPIO_CRL_MODE0	EQU	0x00000003	; MODE0[1:0] bits (Port x mode bits, pin 0)
GPIO_CRL_MODE0_0	EQU	0x00000001	; Bit 0
GPIO_CRL_MODE0_1	EQU	0x00000002	; Bit 1

GPIO_CRL_MODE1	EQU	0x00000030	; MODE1[1:0] bits (Port x mode bits, pin 1)
GPIO_CRL_MODE1_0	EQU	0x00000010	; Bit 0
GPIO_CRL_MODE1_1	EQU	0x00000020	; Bit 1

GPIO_CRL_MODE2	EQU	0x00000300	; MODE2[1:0] bits (Port x mode bits, pin 2)
GPIO_CRL_MODE2_0	EQU	0x00000100	; Bit 0
GPIO_CRL_MODE2_1	EQU	0x00000200	; Bit 1

GPIO_CRL_MODE3	EQU	0x00003000	; MODE3[1:0] bits (Port x mode bits, pin 3)
GPIO_CRL_MODE3_0	EQU	0x00001000	; Bit 0
GPIO_CRL_MODE3_1	EQU	0x00002000	; Bit 1

GPIO_CRL_MODE4	EQU	0x00030000	; MODE4[1:0] bits (Port x mode bits, pin 4)
GPIO_CRL_MODE4_0	EQU	0x00010000	; Bit 0
GPIO_CRL_MODE4_1	EQU	0x00020000	; Bit 1

GPIO_CRL_MODE5	EQU	0x00300000	; MODE5[1:0] bits (Port x mode bits, pin 5)
GPIO_CRL_MODE5_0	EQU	0x00100000	; Bit 0
GPIO_CRL_MODE5_1	EQU	0x00200000	; Bit 1

GPIO_CRL_MODE6	EQU	0x03000000	; MODE6[1:0] bits (Port x mode bits, pin 6)
GPIO_CRL_MODE6_0	EQU	0x01000000	; Bit 0
GPIO_CRL_MODE6_1	EQU	0x02000000	; Bit 1

GPIO_CRL_MODE7	EQU	0x30000000	; MODE7[1:0] bits (Port x mode bits, pin 7)
GPIO_CRL_MODE7_0	EQU	0x10000000	; Bit 0
GPIO_CRL_MODE7_1	EQU	0x20000000	; Bit 1

GPIO_CRL_CNF	EQU	0xCCCCCCCC	; Port x configuration bits

GPIO_CRL_CNF0	EQU	0x0000000C	; CNF0[1:0] bits (Port x configuration bits, pin 0)
GPIO_CRL_CNF0_0	EQU	0x00000004	; Bit 0
GPIO_CRL_CNF0_1	EQU	0x00000008	; Bit 1

GPIO_CRL_CNF1	EQU	0x000000C0	; CNF1[1:0] bits (Port x configuration bits, pin 1)
GPIO_CRL_CNF1_0	EQU	0x00000040	; Bit 0
GPIO_CRL_CNF1_1	EQU	0x00000080	; Bit 1

GPIO_CRL_CNF2	EQU	0x00000C00	; CNF2[1:0] bits (Port x configuration bits, pin 2)
GPIO_CRL_CNF2_0	EQU	0x00000400	; Bit 0
GPIO_CRL_CNF2_1	EQU	0x00000800	; Bit 1

GPIO_CRL_CNF3	EQU	0x0000C000	; CNF3[1:0] bits (Port x configuration bits, pin 3)
GPIO_CRL_CNF3_0	EQU	0x00004000	; Bit 0
GPIO_CRL_CNF3_1	EQU	0x00008000	; Bit 1

GPIO_CRL_CNF4	EQU	0x000C0000	; CNF4[1:0] bits (Port x configuration bits, pin 4)
GPIO_CRL_CNF4_0	EQU	0x00040000	; Bit 0
GPIO_CRL_CNF4_1	EQU	0x00080000	; Bit 1

GPIO_CRL_CNF5	EQU	0x00C00000	; CNF5[1:0] bits (Port x configuration bits, pin 5)
GPIO_CRL_CNF5_0	EQU	0x00400000	; Bit 0
GPIO_CRL_CNF5_1	EQU	0x00800000	; Bit 1

GPIO_CRL_CNF6	EQU	0x0C000000	; CNF6[1:0] bits (Port x configuration bits, pin 6)
GPIO_CRL_CNF6_0	EQU	0x04000000	; Bit 0
GPIO_CRL_CNF6_1	EQU	0x08000000	; Bit 1

GPIO_CRL_CNF7	EQU	0xC0000000	; CNF7[1:0] bits (Port x configuration bits, pin 7)
GPIO_CRL_CNF7_0	EQU	0x40000000	; Bit 0
GPIO_CRL_CNF7_1	EQU	0x80000000	; Bit 1

; Bit definition for GPIO_CRH register
GPIO_CRH_MODE	EQU	0x33333333	; Port x mode bits

GPIO_CRH_MODE8	EQU	0x00000003	; MODE8[1:0] bits (Port x mode bits, pin 8)
GPIO_CRH_MODE8_0	EQU	0x00000001	; Bit 0
GPIO_CRH_MODE8_1	EQU	0x00000002	; Bit 1

GPIO_CRH_MODE9	EQU	0x00000030	; MODE9[1:0] bits (Port x mode bits, pin 9)
GPIO_CRH_MODE9_0	EQU	0x00000010	; Bit 0
GPIO_CRH_MODE9_1	EQU	0x00000020	; Bit 1

GPIO_CRH_MODE10	EQU	0x00000300	; MODE10[1:0] bits (Port x mode bits, pin 10)
GPIO_CRH_MODE10_0	EQU	0x00000100	; Bit 0
GPIO_CRH_MODE10_1	EQU	0x00000200	; Bit 1

GPIO_CRH_MODE11	EQU	0x00003000	; MODE11[1:0] bits (Port x mode bits, pin 11)
GPIO_CRH_MODE11_0	EQU	0x00001000	; Bit 0
GPIO_CRH_MODE11_1	EQU	0x00002000	; Bit 1

GPIO_CRH_MODE12	EQU	0x00030000	; MODE12[1:0] bits (Port x mode bits, pin 12)
GPIO_CRH_MODE12_0	EQU	0x00010000	; Bit 0
GPIO_CRH_MODE12_1	EQU	0x00020000	; Bit 1

GPIO_CRH_MODE13	EQU	0x00300000	; MODE13[1:0] bits (Port x mode bits, pin 13)
GPIO_CRH_MODE13_0	EQU	0x00100000	; Bit 0
GPIO_CRH_MODE13_1	EQU	0x00200000	; Bit 1

GPIO_CRH_MODE14	EQU	0x03000000	; MODE14[1:0] bits (Port x mode bits, pin 14)
GPIO_CRH_MODE14_0	EQU	0x01000000	; Bit 0
GPIO_CRH_MODE14_1	EQU	0x02000000	; Bit 1

GPIO_CRH_MODE15	EQU	0x30000000	; MODE15[1:0] bits (Port x mode bits, pin 15)
GPIO_CRH_MODE15_0	EQU	0x10000000	; Bit 0
GPIO_CRH_MODE15_1	EQU	0x20000000	; Bit 1

GPIO_CRH_CNF	EQU	0xCCCCCCCC	; Port x configuration bits

GPIO_CRH_CNF8	EQU	0x0000000C	; CNF8[1:0] bits (Port x configuration bits, pin 8)
GPIO_CRH_CNF8_0	EQU	0x00000004	; Bit 0
GPIO_CRH_CNF8_1	EQU	0x00000008	; Bit 1

GPIO_CRH_CNF9	EQU	0x000000C0	; CNF9[1:0] bits (Port x configuration bits, pin 9)
GPIO_CRH_CNF9_0	EQU	0x00000040	; Bit 0
GPIO_CRH_CNF9_1	EQU	0x00000080	; Bit 1

GPIO_CRH_CNF10	EQU	0x00000C00	; CNF10[1:0] bits (Port x configuration bits, pin 10)
GPIO_CRH_CNF10_0	EQU	0x00000400	; Bit 0
GPIO_CRH_CNF10_1	EQU	0x00000800	; Bit 1

GPIO_CRH_CNF11	EQU	0x0000C000	; CNF11[1:0] bits (Port x configuration bits, pin 11)
GPIO_CRH_CNF11_0	EQU	0x00004000	; Bit 0
GPIO_CRH_CNF11_1	EQU	0x00008000	; Bit 1

GPIO_CRH_CNF12	EQU	0x000C0000	; CNF12[1:0] bits (Port x configuration bits, pin 12)
GPIO_CRH_CNF12_0	EQU	0x00040000	; Bit 0
GPIO_CRH_CNF12_1	EQU	0x00080000	; Bit 1

GPIO_CRH_CNF13	EQU	0x00C00000	; CNF13[1:0] bits (Port x configuration bits, pin 13)
GPIO_CRH_CNF13_0	EQU	0x00400000	; Bit 0
GPIO_CRH_CNF13_1	EQU	0x00800000	; Bit 1

GPIO_CRH_CNF14	EQU	0x0C000000	; CNF14[1:0] bits (Port x configuration bits, pin 14)
GPIO_CRH_CNF14_0	EQU	0x04000000	; Bit 0
GPIO_CRH_CNF14_1	EQU	0x08000000	; Bit 1

GPIO_CRH_CNF15	EQU	0xC0000000	; CNF15[1:0] bits (Port x configuration bits, pin 15)
GPIO_CRH_CNF15_0	EQU	0x40000000	; Bit 0
GPIO_CRH_CNF15_1	EQU	0x80000000	; Bit 1

; * Bit definition for GPIO_IDR register
GPIO_IDR_IDR0	EQU	0x0001	; Port input data, bit 0
GPIO_IDR_IDR1	EQU	0x0002	; Port input data, bit 1
GPIO_IDR_IDR2	EQU	0x0004	; Port input data, bit 2
GPIO_IDR_IDR3	EQU	0x0008	; Port input data, bit 3
GPIO_IDR_IDR4	EQU	0x0010	; Port input data, bit 4
GPIO_IDR_IDR5	EQU	0x0020	; Port input data, bit 5
GPIO_IDR_IDR6	EQU	0x0040	; Port input data, bit 6
GPIO_IDR_IDR7	EQU	0x0080	; Port input data, bit 7
GPIO_IDR_IDR8	EQU	0x0100	; Port input data, bit 8
GPIO_IDR_IDR9	EQU	0x0200	; Port input data, bit 9
GPIO_IDR_IDR10	EQU	0x0400	; Port input data, bit 10
GPIO_IDR_IDR11	EQU	0x0800	; Port input data, bit 11
GPIO_IDR_IDR12	EQU	0x1000	; Port input data, bit 12
GPIO_IDR_IDR13	EQU	0x2000	; Port input data, bit 13
GPIO_IDR_IDR14	EQU	0x4000	; Port input data, bit 14
GPIO_IDR_IDR15	EQU	0x8000	; Port input data, bit 15

; Bit definition for GPIO_ODR register
GPIO_ODR_ODR0	EQU	0x0001	; Port output data, bit 0
GPIO_ODR_ODR1	EQU	0x0002	; Port output data, bit 1
GPIO_ODR_ODR2	EQU	0x0004	; Port output data, bit 2
GPIO_ODR_ODR3	EQU	0x0008	; Port output data, bit 3
GPIO_ODR_ODR4	EQU	0x0010	; Port output data, bit 4
GPIO_ODR_ODR5	EQU	0x0020	; Port output data, bit 5
GPIO_ODR_ODR6	EQU	0x0040	; Port output data, bit 6
GPIO_ODR_ODR7	EQU	0x0080	; Port output data, bit 7
GPIO_ODR_ODR8	EQU	0x0100	; Port output data, bit 8
GPIO_ODR_ODR9	EQU	0x0200	; Port output data, bit 9
GPIO_ODR_ODR10	EQU	0x0400	; Port output data, bit 10
GPIO_ODR_ODR11	EQU	0x0800	; Port output data, bit 11
GPIO_ODR_ODR12	EQU	0x1000	; Port output data, bit 12
GPIO_ODR_ODR13	EQU	0x2000	; Port output data, bit 13
GPIO_ODR_ODR14	EQU	0x4000	; Port output data, bit 14
GPIO_ODR_ODR15	EQU	0x8000	; Port output data, bit 15

; Bit definition for GPIO_BSRR register
GPIO_BSRR_BS0	EQU	0x00000001	; Port x Set bit 0
GPIO_BSRR_BS1	EQU	0x00000002	; Port x Set bit 1
GPIO_BSRR_BS2	EQU	0x00000004	; Port x Set bit 2
GPIO_BSRR_BS3	EQU	0x00000008	; Port x Set bit 3
GPIO_BSRR_BS4	EQU	0x00000010	; Port x Set bit 4
GPIO_BSRR_BS5	EQU	0x00000020	; Port x Set bit 5
GPIO_BSRR_BS6	EQU	0x00000040	; Port x Set bit 6
GPIO_BSRR_BS7	EQU	0x00000080	; Port x Set bit 7
GPIO_BSRR_BS8	EQU	0x00000100	; Port x Set bit 8
GPIO_BSRR_BS9	EQU	0x00000200	; Port x Set bit 9
GPIO_BSRR_BS10	EQU	0x00000400	; Port x Set bit 10
GPIO_BSRR_BS11	EQU	0x00000800	; Port x Set bit 11
GPIO_BSRR_BS12	EQU	0x00001000	; Port x Set bit 12
GPIO_BSRR_BS13	EQU	0x00002000	; Port x Set bit 13
GPIO_BSRR_BS14	EQU	0x00004000	; Port x Set bit 14
GPIO_BSRR_BS15	EQU	0x00008000	; Port x Set bit 15

GPIO_BSRR_BR0	EQU	0x00010000	; Port x Reset bit 0
GPIO_BSRR_BR1	EQU	0x00020000	; Port x Reset bit 1
GPIO_BSRR_BR2	EQU	0x00040000	; Port x Reset bit 2
GPIO_BSRR_BR3	EQU	0x00080000	; Port x Reset bit 3
GPIO_BSRR_BR4	EQU	0x00100000	; Port x Reset bit 4
GPIO_BSRR_BR5	EQU	0x00200000	; Port x Reset bit 5
GPIO_BSRR_BR6	EQU	0x00400000	; Port x Reset bit 6
GPIO_BSRR_BR7	EQU	0x00800000	; Port x Reset bit 7
GPIO_BSRR_BR8	EQU	0x01000000	; Port x Reset bit 8
GPIO_BSRR_BR9	EQU	0x02000000	; Port x Reset bit 9
GPIO_BSRR_BR10	EQU	0x04000000	; Port x Reset bit 10
GPIO_BSRR_BR11	EQU	0x08000000	; Port x Reset bit 11
GPIO_BSRR_BR12	EQU	0x10000000	; Port x Reset bit 12
GPIO_BSRR_BR13	EQU	0x20000000	; Port x Reset bit 13
GPIO_BSRR_BR14	EQU	0x40000000	; Port x Reset bit 14
GPIO_BSRR_BR15	EQU	0x80000000	; Port x Reset bit 15

; Bit definition for GPIO_BRR register
GPIO_BRR_BR0	EQU	0x0001	; Port x Reset bit 0
GPIO_BRR_BR1	EQU	0x0002	; Port x Reset bit 1
GPIO_BRR_BR2	EQU	0x0004	; Port x Reset bit 2
GPIO_BRR_BR3	EQU	0x0008	; Port x Reset bit 3
GPIO_BRR_BR4	EQU	0x0010	; Port x Reset bit 4
GPIO_BRR_BR5	EQU	0x0020	; Port x Reset bit 5
GPIO_BRR_BR6	EQU	0x0040	; Port x Reset bit 6
GPIO_BRR_BR7	EQU	0x0080	; Port x Reset bit 7
GPIO_BRR_BR8	EQU	0x0100	; Port x Reset bit 8
GPIO_BRR_BR9	EQU	0x0200	; Port x Reset bit 9
GPIO_BRR_BR10	EQU	0x0400	; Port x Reset bit 10
GPIO_BRR_BR11	EQU	0x0800	; Port x Reset bit 11
GPIO_BRR_BR12	EQU	0x1000	; Port x Reset bit 12
GPIO_BRR_BR13	EQU	0x2000	; Port x Reset bit 13
GPIO_BRR_BR14	EQU	0x4000	; Port x Reset bit 14
GPIO_BRR_BR15	EQU	0x8000	; Port x Reset bit 15

; Bit definition for GPIO_LCKR register
GPIO_LCKR_LCK0	EQU	0x00000001	; Port x Lock bit 0
GPIO_LCKR_LCK1	EQU	0x00000002	; Port x Lock bit 1
GPIO_LCKR_LCK2	EQU	0x00000004	; Port x Lock bit 2
GPIO_LCKR_LCK3	EQU	0x00000008	; Port x Lock bit 3
GPIO_LCKR_LCK4	EQU	0x00000010	; Port x Lock bit 4
GPIO_LCKR_LCK5	EQU	0x00000020	; Port x Lock bit 5
GPIO_LCKR_LCK6	EQU	0x00000040	; Port x Lock bit 6
GPIO_LCKR_LCK7	EQU	0x00000080	; Port x Lock bit 7
GPIO_LCKR_LCK8	EQU	0x00000100	; Port x Lock bit 8
GPIO_LCKR_LCK9	EQU	0x00000200	; Port x Lock bit 9
GPIO_LCKR_LCK10	EQU	0x00000400	; Port x Lock bit 10
GPIO_LCKR_LCK11	EQU	0x00000800	; Port x Lock bit 11
GPIO_LCKR_LCK12	EQU	0x00001000	; Port x Lock bit 12
GPIO_LCKR_LCK13	EQU	0x00002000	; Port x Lock bit 13
GPIO_LCKR_LCK14	EQU	0x00004000	; Port x Lock bit 14
GPIO_LCKR_LCK15	EQU	0x00008000	; Port x Lock bit 15
GPIO_LCKR_LCKK	EQU	0x00010000	; Lock key

; Отдельные пины I/O
PIN0	EQU	0x00000001
PIN1	EQU	0x00000002
PIN2	EQU	0x00000004
PIN3	EQU	0x00000008
PIN4	EQU	0x00000010
PIN5	EQU	0x00000020
PIN6	EQU	0x00000040
PIN7	EQU	0x00000080
PIN8	EQU	0x00000100
PIN9	EQU	0x00000200
PIN10	EQU	0x00000400
PIN11	EQU	0x00000800
PIN12	EQU	0x00001000
PIN13	EQU	0x00002000
PIN14	EQU	0x00004000
PIN15	EQU	0x00008000


;----------------------------------------------------------------------------

; Bit definition for AFIO_EVCR register
AFIO_EVCR_PIN	EQU	0x0F	; PIN[3:0] bits (Pin selection)
AFIO_EVCR_PIN_0	EQU	0x01	; Bit 0
AFIO_EVCR_PIN_1	EQU	0x02	; Bit 1
AFIO_EVCR_PIN_2	EQU	0x04	; Bit 2
AFIO_EVCR_PIN_3	EQU	0x08	; Bit 3

; PIN configuration
AFIO_EVCR_PIN_PX0	EQU	0x00	; Pin 0 selected
AFIO_EVCR_PIN_PX1	EQU	0x01	; Pin 1 selected
AFIO_EVCR_PIN_PX2	EQU	0x02	; Pin 2 selected
AFIO_EVCR_PIN_PX3	EQU	0x03	; Pin 3 selected
AFIO_EVCR_PIN_PX4	EQU	0x04	; Pin 4 selected
AFIO_EVCR_PIN_PX5	EQU	0x05	; Pin 5 selected
AFIO_EVCR_PIN_PX6	EQU	0x06	; Pin 6 selected
AFIO_EVCR_PIN_PX7	EQU	0x07	; Pin 7 selected
AFIO_EVCR_PIN_PX8	EQU	0x08	; Pin 8 selected
AFIO_EVCR_PIN_PX9	EQU	0x09	; Pin 9 selected
AFIO_EVCR_PIN_PX10	EQU	0x0A	; Pin 10 selected
AFIO_EVCR_PIN_PX11	EQU	0x0B	; Pin 11 selected
AFIO_EVCR_PIN_PX12	EQU	0x0C	; Pin 12 selected
AFIO_EVCR_PIN_PX13	EQU	0x0D	; Pin 13 selected
AFIO_EVCR_PIN_PX14	EQU	0x0E	; Pin 14 selected
AFIO_EVCR_PIN_PX15	EQU	0x0F	; Pin 15 selected

AFIO_EVCR_PORT	EQU	0x70	; PORT[2:0] bits (Port selection)
AFIO_EVCR_PORT_0	EQU	0x10	; Bit 0
AFIO_EVCR_PORT_1	EQU	0x20	; Bit 1
AFIO_EVCR_PORT_2	EQU	0x40	; Bit 2

; PORT configuration
AFIO_EVCR_PORT_PA	EQU	0x00	; Port A selected
AFIO_EVCR_PORT_PB	EQU	0x10	; Port B selected
AFIO_EVCR_PORT_PC	EQU	0x20	; Port C selected
AFIO_EVCR_PORT_PD	EQU	0x30	; Port D selected
AFIO_EVCR_PORT_PE	EQU	0x40	; Port E selected

AFIO_EVCR_EVOE	EQU	0x80	; Event Output Enable

; Bit definition for AFIO_MAPR register
AFIO_MAPR_SPI1_REMAP	EQU	0x00000001	; SPI1 remapping
AFIO_MAPR_I2C1_REMAP	EQU	0x00000002	; I2C1 remapping
AFIO_MAPR_USART1_REMAP	EQU	0x00000004	; USART1 remapping
AFIO_MAPR_USART2_REMAP	EQU	0x00000008	; USART2 remapping

AFIO_MAPR_USART3_REMAP	EQU	0x00000030	; USART3_REMAP[1:0] bits (USART3 remapping)
AFIO_MAPR_USART3_REMAP_0	EQU	0x00000010	; Bit 0
AFIO_MAPR_USART3_REMAP_1	EQU	0x00000020	; Bit 1

; USART3_REMAP configuration
AFIO_MAPR_USART3_REMAP_NOREMAP	EQU	0x00000000	; No remap (TX/PB10, RX/PB11, CK/PB12, CTS/PB13, RTS/PB14)
AFIO_MAPR_USART3_REMAP_PARTIALREMAP	EQU	0x00000010 ; Partial remap (TX/PC10, RX/PC11, CK/PC12, CTS/PB13, RTS/PB14)
AFIO_MAPR_USART3_REMAP_FULLREMAP	EQU	0x00000030	; Full remap (TX/PD8, RX/PD9, CK/PD10, CTS/PD11, RTS/PD12)

AFIO_MAPR_TIM1_REMAP	EQU	0x000000C0	; TIM1_REMAP[1:0] bits (TIM1 remapping)
AFIO_MAPR_TIM1_REMAP_0	EQU	0x00000040	; Bit 0
AFIO_MAPR_TIM1_REMAP_1	EQU	0x00000080	; Bit 1

; TIM1_REMAP configuration
AFIO_MAPR_TIM1_REMAP_NOREMAP	EQU	0x00000000	; No remap (ETR/PA12, CH1/PA8, CH2/PA9, CH3/PA10, CH4/PA11, BKIN/PB12, CH1N/PB13, CH2N/PB14, CH3N/PB15)
AFIO_MAPR_TIM1_REMAP_PARTIALREMAP	EQU	0x00000040	; Partial remap (ETR/PA12, CH1/PA8, CH2/PA9, CH3/PA10, CH4/PA11, BKIN/PA6, CH1N/PA7, CH2N/PB0, CH3N/PB1)
AFIO_MAPR_TIM1_REMAP_FULLREMAP	EQU	0x000000C0	; Full remap (ETR/PE7, CH1/PE9, CH2/PE11, CH3/PE13, CH4/PE14, BKIN/PE15, CH1N/PE8, CH2N/PE10, CH3N/PE12)

AFIO_MAPR_TIM2_REMAP	EQU	0x00000300	; TIM2_REMAP[1:0] bits (TIM2 remapping)
AFIO_MAPR_TIM2_REMAP_0	EQU	0x00000100	; Bit 0
AFIO_MAPR_TIM2_REMAP_1	EQU	0x00000200	; Bit 1

; TIM2_REMAP configuration
AFIO_MAPR_TIM2_REMAP_NOREMAP	EQU	0x00000000	; No remap (CH1/ETR/PA0, CH2/PA1, CH3/PA2, CH4/PA3)
AFIO_MAPR_TIM2_REMAP_PARTIALREMAP1	EQU	0x00000100	; Partial remap (CH1/ETR/PA15, CH2/PB3, CH3/PA2, CH4/PA3)
AFIO_MAPR_TIM2_REMAP_PARTIALREMAP2	EQU	0x00000200	; Partial remap (CH1/ETR/PA0, CH2/PA1, CH3/PB10, CH4/PB11)
AFIO_MAPR_TIM2_REMAP_FULLREMAP	EQU	0x00000300	; Full remap (CH1/ETR/PA15, CH2/PB3, CH3/PB10, CH4/PB11)

AFIO_MAPR_TIM3_REMAP	EQU	0x00000C00	; TIM3_REMAP[1:0] bits (TIM3 remapping)
AFIO_MAPR_TIM3_REMAP_0	EQU	0x00000400	; Bit 0
AFIO_MAPR_TIM3_REMAP_1	EQU	0x00000800	; Bit 1

; TIM3_REMAP configuration
AFIO_MAPR_TIM3_REMAP_NOREMAP	EQU	0x00000000	; No remap (CH1/PA6, CH2/PA7, CH3/PB0, CH4/PB1)
AFIO_MAPR_TIM3_REMAP_PARTIALREMAP	EQU	0x00000800	; Partial remap (CH1/PB4, CH2/PB5, CH3/PB0, CH4/PB1)
AFIO_MAPR_TIM3_REMAP_FULLREMAP	EQU	0x00000C00	; Full remap (CH1/PC6, CH2/PC7, CH3/PC8, CH4/PC9)

AFIO_MAPR_TIM4_REMAP	EQU	0x00001000	; TIM4_REMAP bit (TIM4 remapping)

AFIO_MAPR_CAN_REMAP	EQU	0x00006000	; CAN_REMAP[1:0] bits (CAN Alternate function remapping)
AFIO_MAPR_CAN_REMAP_0	EQU	0x00002000	; Bit 0
AFIO_MAPR_CAN_REMAP_1	EQU	0x00004000	; Bit 1

; CAN_REMAP configuration
AFIO_MAPR_CAN_REMAP_REMAP1	EQU	0x00000000	; CANRX mapped to PA11, CANTX mapped to PA12
AFIO_MAPR_CAN_REMAP_REMAP2	EQU	0x00004000	; CANRX mapped to PB8, CANTX mapped to PB9
AFIO_MAPR_CAN_REMAP_REMAP3	EQU	0x00006000	; CANRX mapped to PD0, CANTX mapped to PD1

AFIO_MAPR_PD01_REMAP	EQU	0x00008000	; Port D0/Port D1 mapping on OSC_IN/OSC_OUT
AFIO_MAPR_TIM5CH4_IREMAP	EQU	0x00010000	; TIM5 Channel4 Internal Remap
AFIO_MAPR_ADC1_ETRGINJ_REMAP	EQU	0x00020000	; ADC 1 External Trigger Injected Conversion remapping
AFIO_MAPR_ADC1_ETRGREG_REMAP	EQU	0x00040000	; ADC 1 External Trigger Regular Conversion remapping
AFIO_MAPR_ADC2_ETRGINJ_REMAP	EQU	0x00080000	; ADC 2 External Trigger Injected Conversion remapping
AFIO_MAPR_ADC2_ETRGREG_REMAP	EQU	0x00100000	; ADC 2 External Trigger Regular Conversion remapping

; SWJ_CFG configuration
AFIO_MAPR_SWJ_CFG	EQU	0x07000000	; SWJ_CFG[2:0] bits (Serial Wire JTAG configuration)
AFIO_MAPR_SWJ_CFG_0	EQU	0x01000000	; Bit 0
AFIO_MAPR_SWJ_CFG_1	EQU	0x02000000	; Bit 1
AFIO_MAPR_SWJ_CFG_2	EQU	0x04000000	; Bit 2

AFIO_MAPR_SWJ_CFG_RESET	EQU	0x00000000	; Full SWJ (JTAG-DP + SW-DP) : Reset State
AFIO_MAPR_SWJ_CFG_NOJNTRST	EQU	0x01000000	; Full SWJ (JTAG-DP + SW-DP) but without JNTRST
AFIO_MAPR_SWJ_CFG_JTAGDISABLE	EQU	0x02000000	; JTAG-DP Disabled and SW-DP Enabled
AFIO_MAPR_SWJ_CFG_DISABLE	EQU	0x04000000	; JTAG-DP Disabled and SW-DP Disabled

	IF :DEF:STM32F10X_CL
; ETH_REMAP configuration
AFIO_MAPR_ETH_REMAP	EQU	0x00200000	; SPI3_REMAP bit (Ethernet MAC I/O remapping)

; CAN2_REMAP configuration
AFIO_MAPR_CAN2_REMAP	EQU	0x00400000	; CAN2_REMAP bit (CAN2 I/O remapping)

; MII_RMII_SEL configuration
AFIO_MAPR_MII_RMII_SEL	EQU	0x00800000	; MII_RMII_SEL bit (Ethernet MII or RMII selection)

; SPI3_REMAP configuration
AFIO_MAPR_SPI3_REMAP	EQU	0x10000000	; SPI3_REMAP bit (SPI3 remapping)

; TIM2ITR1_IREMAP configuration
AFIO_MAPR_TIM2ITR1_IREMAP	EQU	0x20000000	; TIM2ITR1_IREMAP bit (TIM2 internal trigger 1 remapping)

; PTP_PPS_REMAP configuration
AFIO_MAPR_PTP_PPS_REMAP	EQU	0x20000000	; PTP_PPS_REMAP bit (Ethernet PTP PPS remapping)
	ENDIF

; Bit definition for AFIO_EXTICR1 register
AFIO_EXTICR1_EXTI0	EQU	0x000F	; EXTI 0 configuration
AFIO_EXTICR1_EXTI1	EQU	0x00F0	; EXTI 1 configuration
AFIO_EXTICR1_EXTI2	EQU	0x0F00	; EXTI 2 configuration
AFIO_EXTICR1_EXTI3	EQU	0xF000	; EXTI 3 configuration

; EXTI0 configuration
AFIO_EXTICR1_EXTI0_PA	EQU	0x0000	; PA[0] pin
AFIO_EXTICR1_EXTI0_PB	EQU	0x0001	; PB[0] pin
AFIO_EXTICR1_EXTI0_PC	EQU	0x0002	; PC[0] pin
AFIO_EXTICR1_EXTI0_PD	EQU	0x0003	; PD[0] pin
AFIO_EXTICR1_EXTI0_PE	EQU	0x0004	; PE[0] pin
AFIO_EXTICR1_EXTI0_PF	EQU	0x0005	; PF[0] pin
AFIO_EXTICR1_EXTI0_PG	EQU	0x0006	; PG[0] pin

; EXTI1 configuration
AFIO_EXTICR1_EXTI1_PA	EQU	0x0000	; PA[1] pin
AFIO_EXTICR1_EXTI1_PB	EQU	0x0010	; PB[1] pin
AFIO_EXTICR1_EXTI1_PC	EQU	0x0020	; PC[1] pin
AFIO_EXTICR1_EXTI1_PD	EQU	0x0030	; PD[1] pin
AFIO_EXTICR1_EXTI1_PE	EQU	0x0040	; PE[1] pin
AFIO_EXTICR1_EXTI1_PF	EQU	0x0050	; PF[1] pin
AFIO_EXTICR1_EXTI1_PG	EQU	0x0060	; PG[1] pin

; EXTI2 configuration
AFIO_EXTICR1_EXTI2_PA	EQU	0x0000	; PA[2] pin
AFIO_EXTICR1_EXTI2_PB	EQU	0x0100	; PB[2] pin
AFIO_EXTICR1_EXTI2_PC	EQU	0x0200	; PC[2] pin
AFIO_EXTICR1_EXTI2_PD	EQU	0x0300	; PD[2] pin
AFIO_EXTICR1_EXTI2_PE	EQU	0x0400	; PE[2] pin
AFIO_EXTICR1_EXTI2_PF	EQU	0x0500	; PF[2] pin
AFIO_EXTICR1_EXTI2_PG	EQU	0x0600	; PG[2] pin

; EXTI3 configuration
AFIO_EXTICR1_EXTI3_PA	EQU	0x0000	; PA[3] pin
AFIO_EXTICR1_EXTI3_PB	EQU	0x1000	; PB[3] pin
AFIO_EXTICR1_EXTI3_PC	EQU	0x2000	; PC[3] pin
AFIO_EXTICR1_EXTI3_PD	EQU	0x3000	; PD[3] pin
AFIO_EXTICR1_EXTI3_PE	EQU	0x4000	; PE[3] pin
AFIO_EXTICR1_EXTI3_PF	EQU	0x5000	; PF[3] pin
AFIO_EXTICR1_EXTI3_PG	EQU	0x6000	; PG[3] pin

; Bit definition for AFIO_EXTICR2 register
AFIO_EXTICR2_EXTI4	EQU	0x000F	; EXTI 4 configuration
AFIO_EXTICR2_EXTI5	EQU	0x00F0	; EXTI 5 configuration
AFIO_EXTICR2_EXTI6	EQU	0x0F00	; EXTI 6 configuration
AFIO_EXTICR2_EXTI7	EQU	0xF000	; EXTI 7 configuration

; EXTI4 configuration
AFIO_EXTICR2_EXTI4_PA	EQU	0x0000	; PA[4] pin
AFIO_EXTICR2_EXTI4_PB	EQU	0x0001	; PB[4] pin
AFIO_EXTICR2_EXTI4_PC	EQU	0x0002	; PC[4] pin
AFIO_EXTICR2_EXTI4_PD	EQU	0x0003	; PD[4] pin
AFIO_EXTICR2_EXTI4_PE	EQU	0x0004	; PE[4] pin
AFIO_EXTICR2_EXTI4_PF	EQU	0x0005	; PF[4] pin
AFIO_EXTICR2_EXTI4_PG	EQU	0x0006	; PG[4] pin

; EXTI5 configuration
AFIO_EXTICR2_EXTI5_PA	EQU	0x0000	; PA[5] pin
AFIO_EXTICR2_EXTI5_PB	EQU	0x0010	; PB[5] pin
AFIO_EXTICR2_EXTI5_PC	EQU	0x0020	; PC[5] pin
AFIO_EXTICR2_EXTI5_PD	EQU	0x0030	; PD[5] pin
AFIO_EXTICR2_EXTI5_PE	EQU	0x0040	; PE[5] pin
AFIO_EXTICR2_EXTI5_PF	EQU	0x0050	; PF[5] pin
AFIO_EXTICR2_EXTI5_PG	EQU	0x0060	; PG[5] pin

; EXTI6 configuration
AFIO_EXTICR2_EXTI6_PA	EQU	0x0000	; PA[6] pin
AFIO_EXTICR2_EXTI6_PB	EQU	0x0100	; PB[6] pin
AFIO_EXTICR2_EXTI6_PC	EQU	0x0200	; PC[6] pin
AFIO_EXTICR2_EXTI6_PD	EQU	0x0300	; PD[6] pin
AFIO_EXTICR2_EXTI6_PE	EQU	0x0400	; PE[6] pin
AFIO_EXTICR2_EXTI6_PF	EQU	0x0500	; PF[6] pin
AFIO_EXTICR2_EXTI6_PG	EQU	0x0600	; PG[6] pin

; EXTI7 configuration
AFIO_EXTICR2_EXTI7_PA	EQU	0x0000	; PA[7] pin
AFIO_EXTICR2_EXTI7_PB	EQU	0x1000	; PB[7] pin
AFIO_EXTICR2_EXTI7_PC	EQU	0x2000	; PC[7] pin
AFIO_EXTICR2_EXTI7_PD	EQU	0x3000	; PD[7] pin
AFIO_EXTICR2_EXTI7_PE	EQU	0x4000	; PE[7] pin
AFIO_EXTICR2_EXTI7_PF	EQU	0x5000	; PF[7] pin
AFIO_EXTICR2_EXTI7_PG	EQU	0x6000	; PG[7] pin

; Bit definition for AFIO_EXTICR3 register
AFIO_EXTICR3_EXTI8	EQU	0x000F	; EXTI 8 configuration
AFIO_EXTICR3_EXTI9	EQU	0x00F0	; EXTI 9 configuration
AFIO_EXTICR3_EXTI10	EQU	0x0F00	; EXTI 10 configuration
AFIO_EXTICR3_EXTI11	EQU	0xF000	; EXTI 11 configuration

; EXTI8 configuration
AFIO_EXTICR3_EXTI8_PA	EQU	0x0000	; PA[8] pin
AFIO_EXTICR3_EXTI8_PB	EQU	0x0001	; PB[8] pin
AFIO_EXTICR3_EXTI8_PC	EQU	0x0002	; PC[8] pin
AFIO_EXTICR3_EXTI8_PD	EQU	0x0003	; PD[8] pin
AFIO_EXTICR3_EXTI8_PE	EQU	0x0004	; PE[8] pin
AFIO_EXTICR3_EXTI8_PF	EQU	0x0005	; PF[8] pin
AFIO_EXTICR3_EXTI8_PG	EQU	0x0006	; PG[8] pin

; EXTI9 configuration
AFIO_EXTICR3_EXTI9_PA	EQU	0x0000	; PA[9] pin
AFIO_EXTICR3_EXTI9_PB	EQU	0x0010	; PB[9] pin
AFIO_EXTICR3_EXTI9_PC	EQU	0x0020	; PC[9] pin
AFIO_EXTICR3_EXTI9_PD	EQU	0x0030	; PD[9] pin
AFIO_EXTICR3_EXTI9_PE	EQU	0x0040	; PE[9] pin
AFIO_EXTICR3_EXTI9_PF	EQU	0x0050	; PF[9] pin
AFIO_EXTICR3_EXTI9_PG	EQU	0x0060	; PG[9] pin

; EXTI10 configuration
AFIO_EXTICR3_EXTI10_PA	EQU	0x0000	; PA[10] pin
AFIO_EXTICR3_EXTI10_PB	EQU	0x0100	; PB[10] pin
AFIO_EXTICR3_EXTI10_PC	EQU	0x0200	; PC[10] pin
AFIO_EXTICR3_EXTI10_PD	EQU	0x0300	; PD[10] pin
AFIO_EXTICR3_EXTI10_PE	EQU	0x0400	; PE[10] pin
AFIO_EXTICR3_EXTI10_PF	EQU	0x0500	; PF[10] pin
AFIO_EXTICR3_EXTI10_PG	EQU	0x0600	; PG[10] pin

; EXTI11 configuration
AFIO_EXTICR3_EXTI11_PA	EQU	0x0000	; PA[11] pin
AFIO_EXTICR3_EXTI11_PB	EQU	0x1000	; PB[11] pin
AFIO_EXTICR3_EXTI11_PC	EQU	0x2000	; PC[11] pin
AFIO_EXTICR3_EXTI11_PD	EQU	0x3000	; PD[11] pin
AFIO_EXTICR3_EXTI11_PE	EQU	0x4000	; PE[11] pin
AFIO_EXTICR3_EXTI11_PF	EQU	0x5000	; PF[11] pin
AFIO_EXTICR3_EXTI11_PG	EQU	0x6000	; PG[11] pin

; Bit definition for AFIO_EXTICR4 register
AFIO_EXTICR4_EXTI12	EQU	0x000F	; EXTI 12 configuration
AFIO_EXTICR4_EXTI13	EQU	0x00F0	; EXTI 13 configuration
AFIO_EXTICR4_EXTI14	EQU	0x0F00	; EXTI 14 configuration
AFIO_EXTICR4_EXTI15	EQU	0xF000	; EXTI 15 configuration

; EXTI12 configuration
AFIO_EXTICR4_EXTI12_PA	EQU	0x0000	; PA[12] pin
AFIO_EXTICR4_EXTI12_PB	EQU	0x0001	; PB[12] pin
AFIO_EXTICR4_EXTI12_PC	EQU	0x0002	; PC[12] pin
AFIO_EXTICR4_EXTI12_PD	EQU	0x0003	; PD[12] pin
AFIO_EXTICR4_EXTI12_PE	EQU	0x0004	; PE[12] pin
AFIO_EXTICR4_EXTI12_PF	EQU	0x0005	; PF[12] pin
AFIO_EXTICR4_EXTI12_PG	EQU	0x0006	; PG[12] pin

; EXTI13 configuration
AFIO_EXTICR4_EXTI13_PA	EQU	0x0000	; PA[13] pin
AFIO_EXTICR4_EXTI13_PB	EQU	0x0010	; PB[13] pin
AFIO_EXTICR4_EXTI13_PC	EQU	0x0020	; PC[13] pin
AFIO_EXTICR4_EXTI13_PD	EQU	0x0030	; PD[13] pin
AFIO_EXTICR4_EXTI13_PE	EQU	0x0040	; PE[13] pin
AFIO_EXTICR4_EXTI13_PF	EQU	0x0050	; PF[13] pin
AFIO_EXTICR4_EXTI13_PG	EQU	0x0060	; PG[13] pin

; EXTI14 configuration
AFIO_EXTICR4_EXTI14_PA	EQU	0x0000	; PA[14] pin
AFIO_EXTICR4_EXTI14_PB	EQU	0x0100	; PB[14] pin
AFIO_EXTICR4_EXTI14_PC	EQU	0x0200	; PC[14] pin
AFIO_EXTICR4_EXTI14_PD	EQU	0x0300	; PD[14] pin
AFIO_EXTICR4_EXTI14_PE	EQU	0x0400	; PE[14] pin
AFIO_EXTICR4_EXTI14_PF	EQU	0x0500	; PF[14] pin
AFIO_EXTICR4_EXTI14_PG	EQU	0x0600	; PG[14] pin

; EXTI15 configuration
AFIO_EXTICR4_EXTI15_PA	EQU	0x0000	; PA[15] pin
AFIO_EXTICR4_EXTI15_PB	EQU	0x1000	; PB[15] pin
AFIO_EXTICR4_EXTI15_PC	EQU	0x2000	; PC[15] pin
AFIO_EXTICR4_EXTI15_PD	EQU	0x3000	; PD[15] pin
AFIO_EXTICR4_EXTI15_PE	EQU	0x4000	; PE[15] pin
AFIO_EXTICR4_EXTI15_PF	EQU	0x5000	; PF[15] pin
AFIO_EXTICR4_EXTI15_PG	EQU	0x6000	; PG[15] pin


;
; SystemTick
;


; Bit definition for SysTick_CTRL register
SysTick_CTRL_ENABLE	EQU	0x00000001	; Counter enable
SysTick_CTRL_TICKINT	EQU	0x00000002	; Counting down to 0 pends the SysTick handler
SysTick_CTRL_CLKSOURCE	EQU	0x00000004	; Clock source
SysTick_CTRL_COUNTFLAG	EQU	0x00010000	; Count Flag

; Bit definition for SysTick_LOAD register
SysTick_LOAD_RELOAD	EQU	0x00FFFFFF	; Value to load into the SysTick Current Value Register when the counter reaches 0

; Bit definition for SysTick_VAL register
SysTick_VAL_CURRENT	EQU	0x00FFFFFF	; Current value at the time the register is accessed

; Bit definition for SysTick_CALIB register
SysTick_CALIB_TENMS	EQU	0x00FFFFFF	; Reload value to use for 10ms timing
SysTick_CALIB_SKEW	EQU	0x40000000	; Calibration value is not exactly 10 ms
SysTick_CALIB_NOREF	EQU	0x80000000	; The reference clock is not provided


;
; Nested Vectored Interrupt Controller
;


; Bit definition for NVIC_ISER register
NVIC_ISER_SETENA	EQU	0xFFFFFFFF	; Interrupt set enable bits
NVIC_ISER_SETENA_0	EQU	0x00000001	; bit 0
NVIC_ISER_SETENA_1	EQU	0x00000002	; bit 1
NVIC_ISER_SETENA_2	EQU	0x00000004	; bit 2
NVIC_ISER_SETENA_3	EQU	0x00000008	; bit 3
NVIC_ISER_SETENA_4	EQU	0x00000010	; bit 4
NVIC_ISER_SETENA_5	EQU	0x00000020	; bit 5
NVIC_ISER_SETENA_6	EQU	0x00000040	; bit 6
NVIC_ISER_SETENA_7	EQU	0x00000080	; bit 7
NVIC_ISER_SETENA_8	EQU	0x00000100	; bit 8
NVIC_ISER_SETENA_9	EQU	0x00000200	; bit 9
NVIC_ISER_SETENA_10	EQU	0x00000400	; bit 10
NVIC_ISER_SETENA_11	EQU	0x00000800	; bit 11
NVIC_ISER_SETENA_12	EQU	0x00001000	; bit 12
NVIC_ISER_SETENA_13	EQU	0x00002000	; bit 13
NVIC_ISER_SETENA_14	EQU	0x00004000	; bit 14
NVIC_ISER_SETENA_15	EQU	0x00008000	; bit 15
NVIC_ISER_SETENA_16	EQU	0x00010000	; bit 16
NVIC_ISER_SETENA_17	EQU	0x00020000	; bit 17
NVIC_ISER_SETENA_18	EQU	0x00040000	; bit 18
NVIC_ISER_SETENA_19	EQU	0x00080000	; bit 19
NVIC_ISER_SETENA_20	EQU	0x00100000	; bit 20
NVIC_ISER_SETENA_21	EQU	0x00200000	; bit 21
NVIC_ISER_SETENA_22	EQU	0x00400000	; bit 22
NVIC_ISER_SETENA_23	EQU	0x00800000	; bit 23
NVIC_ISER_SETENA_24	EQU	0x01000000	; bit 24
NVIC_ISER_SETENA_25	EQU	0x02000000	; bit 25
NVIC_ISER_SETENA_26	EQU	0x04000000	; bit 26
NVIC_ISER_SETENA_27	EQU	0x08000000	; bit 27
NVIC_ISER_SETENA_28	EQU	0x10000000	; bit 28
NVIC_ISER_SETENA_29	EQU	0x20000000	; bit 29
NVIC_ISER_SETENA_30	EQU	0x40000000	; bit 30
NVIC_ISER_SETENA_31	EQU	0x80000000	; bit 31

; Bit definition for NVIC_ICER register
NVIC_ICER_CLRENA	EQU	0xFFFFFFFF	; Interrupt clear-enable bits
NVIC_ICER_CLRENA_0	EQU	0x00000001	; bit 0
NVIC_ICER_CLRENA_1	EQU	0x00000002	; bit 1
NVIC_ICER_CLRENA_2	EQU	0x00000004	; bit 2
NVIC_ICER_CLRENA_3	EQU	0x00000008	; bit 3
NVIC_ICER_CLRENA_4	EQU	0x00000010	; bit 4
NVIC_ICER_CLRENA_5	EQU	0x00000020	; bit 5
NVIC_ICER_CLRENA_6	EQU	0x00000040	; bit 6
NVIC_ICER_CLRENA_7	EQU	0x00000080	; bit 7
NVIC_ICER_CLRENA_8	EQU	0x00000100	; bit 8
NVIC_ICER_CLRENA_9	EQU	0x00000200	; bit 9
NVIC_ICER_CLRENA_10	EQU	0x00000400	; bit 10
NVIC_ICER_CLRENA_11	EQU	0x00000800	; bit 11
NVIC_ICER_CLRENA_12	EQU	0x00001000	; bit 12
NVIC_ICER_CLRENA_13	EQU	0x00002000	; bit 13
NVIC_ICER_CLRENA_14	EQU	0x00004000	; bit 14
NVIC_ICER_CLRENA_15	EQU	0x00008000	; bit 15
NVIC_ICER_CLRENA_16	EQU	0x00010000	; bit 16
NVIC_ICER_CLRENA_17	EQU	0x00020000	; bit 17
NVIC_ICER_CLRENA_18	EQU	0x00040000	; bit 18
NVIC_ICER_CLRENA_19	EQU	0x00080000	; bit 19
NVIC_ICER_CLRENA_20	EQU	0x00100000	; bit 20
NVIC_ICER_CLRENA_21	EQU	0x00200000	; bit 21
NVIC_ICER_CLRENA_22	EQU	0x00400000	; bit 22
NVIC_ICER_CLRENA_23	EQU	0x00800000	; bit 23
NVIC_ICER_CLRENA_24	EQU	0x01000000	; bit 24
NVIC_ICER_CLRENA_25	EQU	0x02000000	; bit 25
NVIC_ICER_CLRENA_26	EQU	0x04000000	; bit 26
NVIC_ICER_CLRENA_27	EQU	0x08000000	; bit 27
NVIC_ICER_CLRENA_28	EQU	0x10000000	; bit 28
NVIC_ICER_CLRENA_29	EQU	0x20000000	; bit 29
NVIC_ICER_CLRENA_30	EQU	0x40000000	; bit 30
NVIC_ICER_CLRENA_31	EQU	0x80000000	; bit 31

; Bit definition for NVIC_ISPR register
NVIC_ISPR_SETPEND	EQU	0xFFFFFFFF	; Interrupt set-pending bits
NVIC_ISPR_SETPEND_0	EQU	0x00000001	; bit 0
NVIC_ISPR_SETPEND_1	EQU	0x00000002	; bit 1
NVIC_ISPR_SETPEND_2	EQU	0x00000004	; bit 2
NVIC_ISPR_SETPEND_3	EQU	0x00000008	; bit 3
NVIC_ISPR_SETPEND_4	EQU	0x00000010	; bit 4
NVIC_ISPR_SETPEND_5	EQU	0x00000020	; bit 5
NVIC_ISPR_SETPEND_6	EQU	0x00000040	; bit 6
NVIC_ISPR_SETPEND_7	EQU	0x00000080	; bit 7
NVIC_ISPR_SETPEND_8	EQU	0x00000100	; bit 8
NVIC_ISPR_SETPEND_9	EQU	0x00000200	; bit 9
NVIC_ISPR_SETPEND_10	EQU	0x00000400	; bit 10
NVIC_ISPR_SETPEND_11	EQU	0x00000800	; bit 11
NVIC_ISPR_SETPEND_12	EQU	0x00001000	; bit 12
NVIC_ISPR_SETPEND_13	EQU	0x00002000	; bit 13
NVIC_ISPR_SETPEND_14	EQU	0x00004000	; bit 14
NVIC_ISPR_SETPEND_15	EQU	0x00008000	; bit 15
NVIC_ISPR_SETPEND_16	EQU	0x00010000	; bit 16
NVIC_ISPR_SETPEND_17	EQU	0x00020000	; bit 17
NVIC_ISPR_SETPEND_18	EQU	0x00040000	; bit 18
NVIC_ISPR_SETPEND_19	EQU	0x00080000	; bit 19
NVIC_ISPR_SETPEND_20	EQU	0x00100000	; bit 20
NVIC_ISPR_SETPEND_21	EQU	0x00200000	; bit 21
NVIC_ISPR_SETPEND_22	EQU	0x00400000	; bit 22
NVIC_ISPR_SETPEND_23	EQU	0x00800000	; bit 23
NVIC_ISPR_SETPEND_24	EQU	0x01000000	; bit 24
NVIC_ISPR_SETPEND_25	EQU	0x02000000	; bit 25
NVIC_ISPR_SETPEND_26	EQU	0x04000000	; bit 26
NVIC_ISPR_SETPEND_27	EQU	0x08000000	; bit 27
NVIC_ISPR_SETPEND_28	EQU	0x10000000	; bit 28
NVIC_ISPR_SETPEND_29	EQU	0x20000000	; bit 29
NVIC_ISPR_SETPEND_30	EQU	0x40000000	; bit 30
NVIC_ISPR_SETPEND_31	EQU	0x80000000	; bit 31

; Bit definition for NVIC_ICPR register
NVIC_ICPR_CLRPEND	EQU	0xFFFFFFFF	; Interrupt clear-pending bits
NVIC_ICPR_CLRPEND_0	EQU	0x00000001	; bit 0
NVIC_ICPR_CLRPEND_1	EQU	0x00000002	; bit 1
NVIC_ICPR_CLRPEND_2	EQU	0x00000004	; bit 2
NVIC_ICPR_CLRPEND_3	EQU	0x00000008	; bit 3
NVIC_ICPR_CLRPEND_4	EQU	0x00000010	; bit 4
NVIC_ICPR_CLRPEND_5	EQU	0x00000020	; bit 5
NVIC_ICPR_CLRPEND_6	EQU	0x00000040	; bit 6
NVIC_ICPR_CLRPEND_7	EQU	0x00000080	; bit 7
NVIC_ICPR_CLRPEND_8	EQU	0x00000100	; bit 8
NVIC_ICPR_CLRPEND_9	EQU	0x00000200	; bit 9
NVIC_ICPR_CLRPEND_10	EQU	0x00000400	; bit 10
NVIC_ICPR_CLRPEND_11	EQU	0x00000800	; bit 11
NVIC_ICPR_CLRPEND_12	EQU	0x00001000	; bit 12
NVIC_ICPR_CLRPEND_13	EQU	0x00002000	; bit 13
NVIC_ICPR_CLRPEND_14	EQU	0x00004000	; bit 14
NVIC_ICPR_CLRPEND_15	EQU	0x00008000	; bit 15
NVIC_ICPR_CLRPEND_16	EQU	0x00010000	; bit 16
NVIC_ICPR_CLRPEND_17	EQU	0x00020000	; bit 17
NVIC_ICPR_CLRPEND_18	EQU	0x00040000	; bit 18
NVIC_ICPR_CLRPEND_19	EQU	0x00080000	; bit 19
NVIC_ICPR_CLRPEND_20	EQU	0x00100000	; bit 20
NVIC_ICPR_CLRPEND_21	EQU	0x00200000	; bit 21
NVIC_ICPR_CLRPEND_22	EQU	0x00400000	; bit 22
NVIC_ICPR_CLRPEND_23	EQU	0x00800000	; bit 23
NVIC_ICPR_CLRPEND_24	EQU	0x01000000	; bit 24
NVIC_ICPR_CLRPEND_25	EQU	0x02000000	; bit 25
NVIC_ICPR_CLRPEND_26	EQU	0x04000000	; bit 26
NVIC_ICPR_CLRPEND_27	EQU	0x08000000	; bit 27
NVIC_ICPR_CLRPEND_28	EQU	0x10000000	; bit 28
NVIC_ICPR_CLRPEND_29	EQU	0x20000000	; bit 29
NVIC_ICPR_CLRPEND_30	EQU	0x40000000	; bit 30
NVIC_ICPR_CLRPEND_31	EQU	0x80000000	; bit 31

; Bit definition for NVIC_IABR register
NVIC_IABR_ACTIVE	EQU	0xFFFFFFFF	; Interrupt active flags
NVIC_IABR_ACTIVE_0	EQU	0x00000001	; bit 0
NVIC_IABR_ACTIVE_1	EQU	0x00000002	; bit 1
NVIC_IABR_ACTIVE_2	EQU	0x00000004	; bit 2
NVIC_IABR_ACTIVE_3	EQU	0x00000008	; bit 3
NVIC_IABR_ACTIVE_4	EQU	0x00000010	; bit 4
NVIC_IABR_ACTIVE_5	EQU	0x00000020	; bit 5
NVIC_IABR_ACTIVE_6	EQU	0x00000040	; bit 6
NVIC_IABR_ACTIVE_7	EQU	0x00000080	; bit 7
NVIC_IABR_ACTIVE_8	EQU	0x00000100	; bit 8
NVIC_IABR_ACTIVE_9	EQU	0x00000200	; bit 9
NVIC_IABR_ACTIVE_10	EQU	0x00000400	; bit 10
NVIC_IABR_ACTIVE_11	EQU	0x00000800	; bit 11
NVIC_IABR_ACTIVE_12	EQU	0x00001000	; bit 12
NVIC_IABR_ACTIVE_13	EQU	0x00002000	; bit 13
NVIC_IABR_ACTIVE_14	EQU	0x00004000	; bit 14
NVIC_IABR_ACTIVE_15	EQU	0x00008000	; bit 15
NVIC_IABR_ACTIVE_16	EQU	0x00010000	; bit 16
NVIC_IABR_ACTIVE_17	EQU	0x00020000	; bit 17
NVIC_IABR_ACTIVE_18	EQU	0x00040000	; bit 18
NVIC_IABR_ACTIVE_19	EQU	0x00080000	; bit 19
NVIC_IABR_ACTIVE_20	EQU	0x00100000	; bit 20
NVIC_IABR_ACTIVE_21	EQU	0x00200000	; bit 21
NVIC_IABR_ACTIVE_22	EQU	0x00400000	; bit 22
NVIC_IABR_ACTIVE_23	EQU	0x00800000	; bit 23
NVIC_IABR_ACTIVE_24	EQU	0x01000000	; bit 24
NVIC_IABR_ACTIVE_25	EQU	0x02000000	; bit 25
NVIC_IABR_ACTIVE_26	EQU	0x04000000	; bit 26
NVIC_IABR_ACTIVE_27	EQU	0x08000000	; bit 27
NVIC_IABR_ACTIVE_28	EQU	0x10000000	; bit 28
NVIC_IABR_ACTIVE_29	EQU	0x20000000	; bit 29
NVIC_IABR_ACTIVE_30	EQU	0x40000000	; bit 30
NVIC_IABR_ACTIVE_31	EQU	0x80000000	; bit 31

; Bit definition for NVIC_PRI0 register
NVIC_IPR0_PRI_0	EQU	0x000000FF	; Priority of interrupt 0
NVIC_IPR0_PRI_1	EQU	0x0000FF00	; Priority of interrupt 1
NVIC_IPR0_PRI_2	EQU	0x00FF0000	; Priority of interrupt 2
NVIC_IPR0_PRI_3	EQU	0xFF000000	; Priority of interrupt 3

; Bit definition for NVIC_PRI1 register
NVIC_IPR1_PRI_4	EQU	0x000000FF	; Priority of interrupt 4
NVIC_IPR1_PRI_5	EQU	0x0000FF00	; Priority of interrupt 5
NVIC_IPR1_PRI_6	EQU	0x00FF0000	; Priority of interrupt 6
NVIC_IPR1_PRI_7	EQU	0xFF000000	; Priority of interrupt 7

; Bit definition for NVIC_PRI2 register
NVIC_IPR2_PRI_8	EQU	0x000000FF	; Priority of interrupt 8
NVIC_IPR2_PRI_9	EQU	0x0000FF00	; Priority of interrupt 9
NVIC_IPR2_PRI_10	EQU	0x00FF0000	; Priority of interrupt 10
NVIC_IPR2_PRI_11	EQU	0xFF000000	; Priority of interrupt 11

; Bit definition for NVIC_PRI3 register
NVIC_IPR3_PRI_12	EQU	0x000000FF	; Priority of interrupt 12
NVIC_IPR3_PRI_13	EQU	0x0000FF00	; Priority of interrupt 13
NVIC_IPR3_PRI_14	EQU	0x00FF0000	; Priority of interrupt 14
NVIC_IPR3_PRI_15	EQU	0xFF000000	; Priority of interrupt 15

; Bit definition for NVIC_PRI4 register
NVIC_IPR4_PRI_16	EQU	0x000000FF	; Priority of interrupt 16
NVIC_IPR4_PRI_17	EQU	0x0000FF00	; Priority of interrupt 17
NVIC_IPR4_PRI_18	EQU	0x00FF0000	; Priority of interrupt 18
NVIC_IPR4_PRI_19	EQU	0xFF000000	; Priority of interrupt 19

; Bit definition for NVIC_PRI5 register
NVIC_IPR5_PRI_20	EQU	0x000000FF	; Priority of interrupt 20
NVIC_IPR5_PRI_21	EQU	0x0000FF00	; Priority of interrupt 21
NVIC_IPR5_PRI_22	EQU	0x00FF0000	; Priority of interrupt 22
NVIC_IPR5_PRI_23	EQU	0xFF000000	; Priority of interrupt 23

; Bit definition for NVIC_PRI6 register
NVIC_IPR6_PRI_24	EQU	0x000000FF	; Priority of interrupt 24
NVIC_IPR6_PRI_25	EQU	0x0000FF00	; Priority of interrupt 25
NVIC_IPR6_PRI_26	EQU	0x00FF0000	; Priority of interrupt 26
NVIC_IPR6_PRI_27	EQU	0xFF000000	; Priority of interrupt 27

; Bit definition for NVIC_PRI7 register
NVIC_IPR7_PRI_28	EQU	0x000000FF	; Priority of interrupt 28
NVIC_IPR7_PRI_29	EQU	0x0000FF00	; Priority of interrupt 29
NVIC_IPR7_PRI_30	EQU	0x00FF0000	; Priority of interrupt 30
NVIC_IPR7_PRI_31	EQU	0xFF000000	; Priority of interrupt 31

; Bit definition for SCB_CPUID register
SCB_CPUID_REVISION	EQU	0x0000000F	; Implementation defined revision number
SCB_CPUID_PARTNO	EQU	0x0000FFF0	; Number of processor within family
SCB_CPUID_Constant	EQU	0x000F0000	; Reads as 0x0F
SCB_CPUID_VARIANT	EQU	0x00F00000	; Implementation defined variant number
SCB_CPUID_IMPLEMENTER	EQU	0xFF000000	; Implementer code. ARM is 0x41

; Bit definition for SCB_ICSR register
SCB_ICSR_VECTACTIVE	EQU	0x000001FF	; Active ISR number field
SCB_ICSR_RETTOBASE	EQU	0x00000800	; All active exceptions minus the IPSR_current_exception yields the empty set
SCB_ICSR_VECTPENDING	EQU	0x003FF000	; Pending ISR number field
SCB_ICSR_ISRPENDING	EQU	0x00400000	; Interrupt pending flag
SCB_ICSR_ISRPREEMPT	EQU	0x00800000	; It indicates that a pending interrupt becomes active in the next running cycle
SCB_ICSR_PENDSTCLR	EQU	0x02000000	; Clear pending SysTick bit
SCB_ICSR_PENDSTSET	EQU	0x04000000	; Set pending SysTick bit
SCB_ICSR_PENDSVCLR	EQU	0x08000000	; Clear pending pendSV bit
SCB_ICSR_PENDSVSET	EQU	0x10000000	; Set pending pendSV bit
SCB_ICSR_NMIPENDSET	EQU	0x80000000	; Set pending NMI bit

; Bit definition for SCB_VTOR register
SCB_VTOR_TBLOFF	EQU	0x1FFFFF80	; Vector table base offset field
SCB_VTOR_TBLBASE	EQU	0x20000000	; Table base in code(0) or RAM(1)

; * Bit definition for SCB_AIRCR register
SCB_AIRCR_VECTRESET	EQU	0x00000001	; System Reset bit
SCB_AIRCR_VECTCLRACTIVE	EQU	0x00000002	; Clear active vector bit
SCB_AIRCR_SYSRESETREQ	EQU	0x00000004	; Requests chip control logic to generate a reset

SCB_AIRCR_PRIGROUP	EQU	0x00000700	; PRIGROUP[2:0] bits (Priority group)
SCB_AIRCR_PRIGROUP_0	EQU	0x00000100	; Bit 0
SCB_AIRCR_PRIGROUP_1	EQU	0x00000200	; Bit 1
SCB_AIRCR_PRIGROUP_2	EQU	0x00000400	; Bit 2

; prority group configuration
SCB_AIRCR_PRIGROUP0	EQU	0x00000000	; Priority group=0 (7 bits of pre-emption priority, 1 bit of subpriority)
SCB_AIRCR_PRIGROUP1	EQU	0x00000100	; Priority group=1 (6 bits of pre-emption priority, 2 bits of subpriority)
SCB_AIRCR_PRIGROUP2	EQU	0x00000200	; Priority group=2 (5 bits of pre-emption priority, 3 bits of subpriority)
SCB_AIRCR_PRIGROUP3	EQU	0x00000300	; Priority group=3 (4 bits of pre-emption priority, 4 bits of subpriority)
SCB_AIRCR_PRIGROUP4	EQU	0x00000400	; Priority group=4 (3 bits of pre-emption priority, 5 bits of subpriority)
SCB_AIRCR_PRIGROUP5	EQU	0x00000500	; Priority group=5 (2 bits of pre-emption priority, 6 bits of subpriority)
SCB_AIRCR_PRIGROUP6	EQU	0x00000600	; Priority group=6 (1 bit of pre-emption priority, 7 bits of subpriority)
SCB_AIRCR_PRIGROUP7	EQU	0x00000700	; Priority group=7 (no pre-emption priority, 8 bits of subpriority)

SCB_AIRCR_ENDIANESS	EQU	0x00008000	; Data endianness bit
SCB_AIRCR_VECTKEY	EQU	0xFFFF0000	; Register key (VECTKEY) - Reads as 0xFA05 (VECTKEYSTAT)

; Bit definition for SCB_SCR register
SCB_SCR_SLEEPONEXIT	EQU	0x02	; Sleep on exit bit
SCB_SCR_SLEEPDEEP	EQU	0x04	; Sleep deep bit
SCB_SCR_SEVONPEND	EQU	0x10	; Wake up from WFE

; Bit definition for SCB_CCR register
SCB_CCR_NONBASETHRDENA	EQU	0x0001	; Thread mode can be entered from any level in Handler mode by controlled return value
SCB_CCR_USERSETMPEND	EQU	0x0002	; Enables user code to write the Software Trigger Interrupt register to trigger (pend) a Main exception
SCB_CCR_UNALIGN_TRP	EQU	0x0008	; Trap for unaligned access
SCB_CCR_DIV_0_TRP	EQU	0x0010	; Trap on Divide by 0
SCB_CCR_BFHFNMIGN	EQU	0x0100	; Handlers running at priority -1 and -2
SCB_CCR_STKALIGN	EQU	0x0200	; On exception entry, the SP used prior to the exception is adjusted to be 8-byte aligned

; Bit definition for SCB_SHPR register
SCB_SHPR_PRI_N	EQU	0x000000FF	; Priority of system handler 4,8, and 12. Mem Manage, reserved and Debug Monitor
SCB_SHPR_PRI_N1	EQU	0x0000FF00	; Priority of system handler 5,9, and 13. Bus Fault, reserved and reserved
SCB_SHPR_PRI_N2	EQU	0x00FF0000	; Priority of system handler 6,10, and 14. Usage Fault, reserved and PendSV
SCB_SHPR_PRI_N3	EQU	0xFF000000	; Priority of system handler 7,11, and 15. Reserved, SVCall and SysTick

; Bit definition for SCB_SHCSR register
SCB_SHCSR_MEMFAULTACT	EQU	0x00000001	; MemManage is active
SCB_SHCSR_BUSFAULTACT	EQU	0x00000002	; BusFault is active
SCB_SHCSR_USGFAULTACT	EQU	0x00000008	; UsageFault is active
SCB_SHCSR_SVCALLACT	EQU	0x00000080	; SVCall is active
SCB_SHCSR_MONITORACT	EQU	0x00000100	; Monitor is active
SCB_SHCSR_PENDSVACT	EQU	0x00000400	; PendSV is active
SCB_SHCSR_SYSTICKACT	EQU	0x00000800	; SysTick is active
SCB_SHCSR_USGFAULTPENDED	EQU	0x00001000	; Usage Fault is pended
SCB_SHCSR_MEMFAULTPENDED	EQU	0x00002000	; MemManage is pended
SCB_SHCSR_BUSFAULTPENDED	EQU	0x00004000	; Bus Fault is pended
SCB_SHCSR_SVCALLPENDED	EQU	0x00008000	; SVCall is pended
SCB_SHCSR_MEMFAULTENA	EQU	0x00010000	; MemManage enable
SCB_SHCSR_BUSFAULTENA	EQU	0x00020000	; Bus Fault enable
SCB_SHCSR_USGFAULTENA	EQU	0x00040000	; UsageFault enable

; Bit definition for SCB_CFSR register
; MFSR
SCB_CFSR_IACCVIOL	EQU	0x00000001	; Instruction access violation
SCB_CFSR_DACCVIOL	EQU	0x00000002	; Data access violation
SCB_CFSR_MUNSTKERR	EQU	0x00000008	; Unstacking error
SCB_CFSR_MSTKERR	EQU	0x00000010	; Stacking error
SCB_CFSR_MMARVALID	EQU	0x00000080	; Memory Manage Address Register address valid flag
; BFSR
SCB_CFSR_IBUSERR	EQU	0x00000100	; Instruction bus error flag
SCB_CFSR_PRECISERR	EQU	0x00000200	; Precise data bus error
SCB_CFSR_IMPRECISERR	EQU	0x00000400	; Imprecise data bus error
SCB_CFSR_UNSTKERR	EQU	0x00000800	; Unstacking error
SCB_CFSR_STKERR	EQU	0x00001000	; Stacking error
SCB_CFSR_BFARVALID	EQU	0x00008000	; Bus Fault Address Register address valid flag
; UFSR
SCB_CFSR_UNDEFINSTR	EQU	0x00010000	; The processor attempt to excecute an undefined instruction
SCB_CFSR_INVSTATE	EQU	0x00020000	; Invalid combination of EPSR and instruction
SCB_CFSR_INVPC	EQU	0x00040000	; Attempt to load EXC_RETURN into pc illegally
SCB_CFSR_NOCP	EQU	0x00080000	; Attempt to use a coprocessor instruction
SCB_CFSR_UNALIGNED	EQU	0x01000000	; Fault occurs when there is an attempt to make an unaligned memory access
SCB_CFSR_DIVBYZERO	EQU	0x02000000	; Fault occurs when SDIV or DIV instruction is used with a divisor of 0

; Bit definition for SCB_HFSR register
SCB_HFSR_VECTTBL	EQU	0x00000002	; Fault occures because of vector table read on exception processing
SCB_HFSR_FORCED	EQU	0x40000000	; Hard Fault activated when a configurable Fault was received and cannot activate
SCB_HFSR_DEBUGEVT	EQU	0x80000000	; Fault related to debug

; Bit definition for SCB_DFSR register
SCB_DFSR_HALTED	EQU	0x01	; Halt request flag
SCB_DFSR_BKPT	EQU	0x02	; BKPT flag
SCB_DFSR_DWTTRAP	EQU	0x04	; Data Watchpoint and Trace (DWT) flag
SCB_DFSR_VCATCH	EQU	0x08	; Vector catch flag
SCB_DFSR_EXTERNAL	EQU	0x10	; External debug request flag

; Bit definition for SCB_MMFAR register
SCB_MMFAR_ADDRESS	EQU	0xFFFFFFFF	; Mem Manage fault address field

; Bit definition for SCB_BFAR register
SCB_BFAR_ADDRESS	EQU	0xFFFFFFFF	; Bus fault address field

; Bit definition for SCB_afsr register
SCB_AFSR_IMPDEF	EQU	0xFFFFFFFF	; Implementation defined


;
; External Interrupt/Event Controller
;


; Bit definition for EXTI_IMR register
EXTI_IMR_MR0	EQU	0x00000001	; Interrupt Mask on line 0
EXTI_IMR_MR1	EQU	0x00000002	; Interrupt Mask on line 1
EXTI_IMR_MR2	EQU	0x00000004	; Interrupt Mask on line 2
EXTI_IMR_MR3	EQU	0x00000008	; Interrupt Mask on line 3
EXTI_IMR_MR4	EQU	0x00000010	; Interrupt Mask on line 4
EXTI_IMR_MR5	EQU	0x00000020	; Interrupt Mask on line 5
EXTI_IMR_MR6	EQU	0x00000040	; Interrupt Mask on line 6
EXTI_IMR_MR7	EQU	0x00000080	; Interrupt Mask on line 7
EXTI_IMR_MR8	EQU	0x00000100	; Interrupt Mask on line 8
EXTI_IMR_MR9	EQU	0x00000200	; Interrupt Mask on line 9
EXTI_IMR_MR10	EQU	0x00000400	; Interrupt Mask on line 10
EXTI_IMR_MR11	EQU	0x00000800	; Interrupt Mask on line 11
EXTI_IMR_MR12	EQU	0x00001000	; Interrupt Mask on line 12
EXTI_IMR_MR13	EQU	0x00002000	; Interrupt Mask on line 13
EXTI_IMR_MR14	EQU	0x00004000	; Interrupt Mask on line 14
EXTI_IMR_MR15	EQU	0x00008000	; Interrupt Mask on line 15
EXTI_IMR_MR16	EQU	0x00010000	; Interrupt Mask on line 16
EXTI_IMR_MR17	EQU	0x00020000	; Interrupt Mask on line 17
EXTI_IMR_MR18	EQU	0x00040000	; Interrupt Mask on line 18
EXTI_IMR_MR19	EQU	0x00080000	; Interrupt Mask on line 19

; Bit definition for EXTI_EMR register
EXTI_EMR_MR0	EQU	0x00000001	; Event Mask on line 0
EXTI_EMR_MR1	EQU	0x00000002	; Event Mask on line 1
EXTI_EMR_MR2	EQU	0x00000004	; Event Mask on line 2
EXTI_EMR_MR3	EQU	0x00000008	; Event Mask on line 3
EXTI_EMR_MR4	EQU	0x00000010	; Event Mask on line 4
EXTI_EMR_MR5	EQU	0x00000020	; Event Mask on line 5
EXTI_EMR_MR6	EQU	0x00000040	; Event Mask on line 6
EXTI_EMR_MR7	EQU	0x00000080	; Event Mask on line 7
EXTI_EMR_MR8	EQU	0x00000100	; Event Mask on line 8
EXTI_EMR_MR9	EQU	0x00000200	; Event Mask on line 9
EXTI_EMR_MR10	EQU	0x00000400	; Event Mask on line 10
EXTI_EMR_MR11	EQU	0x00000800	; Event Mask on line 11
EXTI_EMR_MR12	EQU	0x00001000	; Event Mask on line 12
EXTI_EMR_MR13	EQU	0x00002000	; Event Mask on line 13
EXTI_EMR_MR14	EQU	0x00004000	; Event Mask on line 14
EXTI_EMR_MR15	EQU	0x00008000	; Event Mask on line 15
EXTI_EMR_MR16	EQU	0x00010000	; Event Mask on line 16
EXTI_EMR_MR17	EQU	0x00020000	; Event Mask on line 17
EXTI_EMR_MR18	EQU	0x00040000	; Event Mask on line 18
EXTI_EMR_MR19	EQU	0x00080000	; Event Mask on line 19

; Bit definition for EXTI_RTSR register
EXTI_RTSR_TR0	EQU	0x00000001	; Rising trigger event configuration bit of line 0
EXTI_RTSR_TR1	EQU	0x00000002	; Rising trigger event configuration bit of line 1
EXTI_RTSR_TR2	EQU	0x00000004	; Rising trigger event configuration bit of line 2
EXTI_RTSR_TR3	EQU	0x00000008	; Rising trigger event configuration bit of line 3
EXTI_RTSR_TR4	EQU	0x00000010	; Rising trigger event configuration bit of line 4
EXTI_RTSR_TR5	EQU	0x00000020	; Rising trigger event configuration bit of line 5
EXTI_RTSR_TR6	EQU	0x00000040	; Rising trigger event configuration bit of line 6
EXTI_RTSR_TR7	EQU	0x00000080	; Rising trigger event configuration bit of line 7
EXTI_RTSR_TR8	EQU	0x00000100	; Rising trigger event configuration bit of line 8
EXTI_RTSR_TR9	EQU	0x00000200	; Rising trigger event configuration bit of line 9
EXTI_RTSR_TR10	EQU	0x00000400	; Rising trigger event configuration bit of line 10
EXTI_RTSR_TR11	EQU	0x00000800	; Rising trigger event configuration bit of line 11
EXTI_RTSR_TR12	EQU	0x00001000	; Rising trigger event configuration bit of line 12
EXTI_RTSR_TR13	EQU	0x00002000	; Rising trigger event configuration bit of line 13
EXTI_RTSR_TR14	EQU	0x00004000	; Rising trigger event configuration bit of line 14
EXTI_RTSR_TR15	EQU	0x00008000	; Rising trigger event configuration bit of line 15
EXTI_RTSR_TR16	EQU	0x00010000	; Rising trigger event configuration bit of line 16
EXTI_RTSR_TR17	EQU	0x00020000	; Rising trigger event configuration bit of line 17
EXTI_RTSR_TR18	EQU	0x00040000	; Rising trigger event configuration bit of line 18
EXTI_RTSR_TR19	EQU	0x00080000	; Rising trigger event configuration bit of line 19

; Bit definition for EXTI_FTSR register
EXTI_FTSR_TR0	EQU	0x00000001	; Falling trigger event configuration bit of line 0
EXTI_FTSR_TR1	EQU	0x00000002	; Falling trigger event configuration bit of line 1
EXTI_FTSR_TR2	EQU	0x00000004	; Falling trigger event configuration bit of line 2
EXTI_FTSR_TR3	EQU	0x00000008	; Falling trigger event configuration bit of line 3
EXTI_FTSR_TR4	EQU	0x00000010	; Falling trigger event configuration bit of line 4
EXTI_FTSR_TR5	EQU	0x00000020	; Falling trigger event configuration bit of line 5
EXTI_FTSR_TR6	EQU	0x00000040	; Falling trigger event configuration bit of line 6
EXTI_FTSR_TR7	EQU	0x00000080	; Falling trigger event configuration bit of line 7
EXTI_FTSR_TR8	EQU	0x00000100	; Falling trigger event configuration bit of line 8
EXTI_FTSR_TR9	EQU	0x00000200	; Falling trigger event configuration bit of line 9
EXTI_FTSR_TR10	EQU	0x00000400	; Falling trigger event configuration bit of line 10
EXTI_FTSR_TR11	EQU	0x00000800	; Falling trigger event configuration bit of line 11
EXTI_FTSR_TR12	EQU	0x00001000	; Falling trigger event configuration bit of line 12
EXTI_FTSR_TR13	EQU	0x00002000	; Falling trigger event configuration bit of line 13
EXTI_FTSR_TR14	EQU	0x00004000	; Falling trigger event configuration bit of line 14
EXTI_FTSR_TR15	EQU	0x00008000	; Falling trigger event configuration bit of line 15
EXTI_FTSR_TR16	EQU	0x00010000	; Falling trigger event configuration bit of line 16
EXTI_FTSR_TR17	EQU	0x00020000	; Falling trigger event configuration bit of line 17
EXTI_FTSR_TR18	EQU	0x00040000	; Falling trigger event configuration bit of line 18
EXTI_FTSR_TR19	EQU	0x00080000	; Falling trigger event configuration bit of line 19

; Bit definition for EXTI_SWIER register
EXTI_SWIER_SWIER0	EQU	0x00000001	; Software Interrupt on line 0
EXTI_SWIER_SWIER1	EQU	0x00000002	; Software Interrupt on line 1
EXTI_SWIER_SWIER2	EQU	0x00000004	; Software Interrupt on line 2
EXTI_SWIER_SWIER3	EQU	0x00000008	; Software Interrupt on line 3
EXTI_SWIER_SWIER4	EQU	0x00000010	; Software Interrupt on line 4
EXTI_SWIER_SWIER5	EQU	0x00000020	; Software Interrupt on line 5
EXTI_SWIER_SWIER6	EQU	0x00000040	; Software Interrupt on line 6
EXTI_SWIER_SWIER7	EQU	0x00000080	; Software Interrupt on line 7
EXTI_SWIER_SWIER8	EQU	0x00000100	; Software Interrupt on line 8
EXTI_SWIER_SWIER9	EQU	0x00000200	; Software Interrupt on line 9
EXTI_SWIER_SWIER10	EQU	0x00000400	; Software Interrupt on line 10
EXTI_SWIER_SWIER11	EQU	0x00000800	; Software Interrupt on line 11
EXTI_SWIER_SWIER12	EQU	0x00001000	; Software Interrupt on line 12
EXTI_SWIER_SWIER13	EQU	0x00002000	; Software Interrupt on line 13
EXTI_SWIER_SWIER14	EQU	0x00004000	; Software Interrupt on line 14
EXTI_SWIER_SWIER15	EQU	0x00008000	; Software Interrupt on line 15
EXTI_SWIER_SWIER16	EQU	0x00010000	; Software Interrupt on line 16
EXTI_SWIER_SWIER17	EQU	0x00020000	; Software Interrupt on line 17
EXTI_SWIER_SWIER18	EQU	0x00040000	; Software Interrupt on line 18
EXTI_SWIER_SWIER19	EQU	0x00080000	; Software Interrupt on line 19

; Bit definition for EXTI_PR register
EXTI_PR_PR0	EQU	0x00000001	; Pending bit for line 0
EXTI_PR_PR1	EQU	0x00000002	; Pending bit for line 1
EXTI_PR_PR2	EQU	0x00000004	; Pending bit for line 2
EXTI_PR_PR3	EQU	0x00000008	; Pending bit for line 3
EXTI_PR_PR4	EQU	0x00000010	; Pending bit for line 4
EXTI_PR_PR5	EQU	0x00000020	; Pending bit for line 5
EXTI_PR_PR6	EQU	0x00000040	; Pending bit for line 6
EXTI_PR_PR7	EQU	0x00000080	; Pending bit for line 7
EXTI_PR_PR8	EQU	0x00000100	; Pending bit for line 8
EXTI_PR_PR9	EQU	0x00000200	; Pending bit for line 9
EXTI_PR_PR10	EQU	0x00000400	; Pending bit for line 10
EXTI_PR_PR11	EQU	0x00000800	; Pending bit for line 11
EXTI_PR_PR12	EQU	0x00001000	; Pending bit for line 12
EXTI_PR_PR13	EQU	0x00002000	; Pending bit for line 13
EXTI_PR_PR14	EQU	0x00004000	; Pending bit for line 14
EXTI_PR_PR15	EQU	0x00008000	; Pending bit for line 15
EXTI_PR_PR16	EQU	0x00010000	; Pending bit for line 16
EXTI_PR_PR17	EQU	0x00020000	; Pending bit for line 17
EXTI_PR_PR18	EQU	0x00040000	; Pending bit for line 18
EXTI_PR_PR19	EQU	0x00080000	; Pending bit for line 19


;
; DMA Controller
;


; Bit definition for DMA_ISR register
DMA_ISR_GIF1	EQU	0x00000001	; Channel 1 Global interrupt flag
DMA_ISR_TCIF1	EQU	0x00000002	; Channel 1 Transfer Complete flag
DMA_ISR_HTIF1	EQU	0x00000004	; Channel 1 Half Transfer flag
DMA_ISR_TEIF1	EQU	0x00000008	; Channel 1 Transfer Error flag
DMA_ISR_GIF2	EQU	0x00000010	; Channel 2 Global interrupt flag
DMA_ISR_TCIF2	EQU	0x00000020	; Channel 2 Transfer Complete flag
DMA_ISR_HTIF2	EQU	0x00000040	; Channel 2 Half Transfer flag
DMA_ISR_TEIF2	EQU	0x00000080	; Channel 2 Transfer Error flag
DMA_ISR_GIF3	EQU	0x00000100	; Channel 3 Global interrupt flag
DMA_ISR_TCIF3	EQU	0x00000200	; Channel 3 Transfer Complete flag
DMA_ISR_HTIF3	EQU	0x00000400	; Channel 3 Half Transfer flag
DMA_ISR_TEIF3	EQU	0x00000800	; Channel 3 Transfer Error flag
DMA_ISR_GIF4	EQU	0x00001000	; Channel 4 Global interrupt flag
DMA_ISR_TCIF4	EQU	0x00002000	; Channel 4 Transfer Complete flag
DMA_ISR_HTIF4	EQU	0x00004000	; Channel 4 Half Transfer flag
DMA_ISR_TEIF4	EQU	0x00008000	; Channel 4 Transfer Error flag
DMA_ISR_GIF5	EQU	0x00010000	; Channel 5 Global interrupt flag
DMA_ISR_TCIF5	EQU	0x00020000	; Channel 5 Transfer Complete flag
DMA_ISR_HTIF5	EQU	0x00040000	; Channel 5 Half Transfer flag
DMA_ISR_TEIF5	EQU	0x00080000	; Channel 5 Transfer Error flag
DMA_ISR_GIF6	EQU	0x00100000	; Channel 6 Global interrupt flag
DMA_ISR_TCIF6	EQU	0x00200000	; Channel 6 Transfer Complete flag
DMA_ISR_HTIF6	EQU	0x00400000	; Channel 6 Half Transfer flag
DMA_ISR_TEIF6	EQU	0x00800000	; Channel 6 Transfer Error flag
DMA_ISR_GIF7	EQU	0x01000000	; Channel 7 Global interrupt flag
DMA_ISR_TCIF7	EQU	0x02000000	; Channel 7 Transfer Complete flag
DMA_ISR_HTIF7	EQU	0x04000000	; Channel 7 Half Transfer flag
DMA_ISR_TEIF7	EQU	0x08000000	; Channel 7 Transfer Error flag

; Bit definition for DMA_IFCR register
DMA_IFCR_CGIF1	EQU	0x00000001	; Channel 1 Global interrupt clearr
DMA_IFCR_CTCIF1	EQU	0x00000002	; Channel 1 Transfer Complete clear
DMA_IFCR_CHTIF1	EQU	0x00000004	; Channel 1 Half Transfer clear
DMA_IFCR_CTEIF1	EQU	0x00000008	; Channel 1 Transfer Error clear
DMA_IFCR_CGIF2	EQU	0x00000010	; Channel 2 Global interrupt clear
DMA_IFCR_CTCIF2	EQU	0x00000020	; Channel 2 Transfer Complete clear
DMA_IFCR_CHTIF2	EQU	0x00000040	; Channel 2 Half Transfer clear
DMA_IFCR_CTEIF2	EQU	0x00000080	; Channel 2 Transfer Error clear
DMA_IFCR_CGIF3	EQU	0x00000100	; Channel 3 Global interrupt clear
DMA_IFCR_CTCIF3	EQU	0x00000200	; Channel 3 Transfer Complete clear
DMA_IFCR_CHTIF3	EQU	0x00000400	; Channel 3 Half Transfer clear
DMA_IFCR_CTEIF3	EQU	0x00000800	; Channel 3 Transfer Error clear
DMA_IFCR_CGIF4	EQU	0x00001000	; Channel 4 Global interrupt clear
DMA_IFCR_CTCIF4	EQU	0x00002000	; Channel 4 Transfer Complete clear
DMA_IFCR_CHTIF4	EQU	0x00004000	; Channel 4 Half Transfer clear
DMA_IFCR_CTEIF4	EQU	0x00008000	; Channel 4 Transfer Error clear
DMA_IFCR_CGIF5	EQU	0x00010000	; Channel 5 Global interrupt clear
DMA_IFCR_CTCIF5	EQU	0x00020000	; Channel 5 Transfer Complete clear
DMA_IFCR_CHTIF5	EQU	0x00040000	; Channel 5 Half Transfer clear
DMA_IFCR_CTEIF5	EQU	0x00080000	; Channel 5 Transfer Error clear
DMA_IFCR_CGIF6	EQU	0x00100000	; Channel 6 Global interrupt clear
DMA_IFCR_CTCIF6	EQU	0x00200000	; Channel 6 Transfer Complete clear
DMA_IFCR_CHTIF6	EQU	0x00400000	; Channel 6 Half Transfer clear
DMA_IFCR_CTEIF6	EQU	0x00800000	; Channel 6 Transfer Error clear
DMA_IFCR_CGIF7	EQU	0x01000000	; Channel 7 Global interrupt clear
DMA_IFCR_CTCIF7	EQU	0x02000000	; Channel 7 Transfer Complete clear
DMA_IFCR_CHTIF7	EQU	0x04000000	; Channel 7 Half Transfer clear
DMA_IFCR_CTEIF7	EQU	0x08000000	; Channel 7 Transfer Error clear

; Bit definition for DMA_CCR1 register
DMA_CCR1_EN	EQU	0x0001	; Channel enable
DMA_CCR1_TCIE	EQU	0x0002	; Transfer complete interrupt enable
DMA_CCR1_HTIE	EQU	0x0004	; Half Transfer interrupt enable
DMA_CCR1_TEIE	EQU	0x0008	; Transfer error interrupt enable
DMA_CCR1_DIR	EQU	0x0010	; Data transfer direction
DMA_CCR1_CIRC	EQU	0x0020	; Circular mode
DMA_CCR1_PINC	EQU	0x0040	; Peripheral increment mode
DMA_CCR1_MINC	EQU	0x0080	; Memory increment mode

DMA_CCR1_PSIZE	EQU	0x0300	; PSIZE[1:0] bits (Peripheral size)
DMA_CCR1_PSIZE_0	EQU	0x0100	; Bit 0
DMA_CCR1_PSIZE_1	EQU	0x0200	; Bit 1

DMA_CCR1_MSIZE	EQU	0x0C00	; MSIZE[1:0] bits (Memory size)
DMA_CCR1_MSIZE_0	EQU	0x0400	; Bit 0
DMA_CCR1_MSIZE_1	EQU	0x0800	; Bit 1

DMA_CCR1_PL	EQU	0x3000	; PL[1:0] bits(Channel Priority level)
DMA_CCR1_PL_0	EQU	0x1000	; Bit 0
DMA_CCR1_PL_1	EQU	0x2000	; Bit 1

DMA_CCR1_MEM2MEM	EQU	0x4000	; Memory to memory mode

; Bit definition for DMA_CCR2 register
DMA_CCR2_EN	EQU	0x0001	; Channel enable
DMA_CCR2_TCIE	EQU	0x0002	; ransfer complete interrupt enable
DMA_CCR2_HTIE	EQU	0x0004	; Half Transfer interrupt enable
DMA_CCR2_TEIE	EQU	0x0008	; Transfer error interrupt enable
DMA_CCR2_DIR	EQU	0x0010	; Data transfer direction
DMA_CCR2_CIRC	EQU	0x0020	; Circular mode
DMA_CCR2_PINC	EQU	0x0040	; Peripheral increment mode
DMA_CCR2_MINC	EQU	0x0080	; Memory increment mode

DMA_CCR2_PSIZE	EQU	0x0300	; PSIZE[1:0] bits (Peripheral size)
DMA_CCR2_PSIZE_0	EQU	0x0100	; Bit 0
DMA_CCR2_PSIZE_1	EQU	0x0200	; Bit 1

DMA_CCR2_MSIZE	EQU	0x0C00	; MSIZE[1:0] bits (Memory size)
DMA_CCR2_MSIZE_0	EQU	0x0400	; Bit 0
DMA_CCR2_MSIZE_1	EQU	0x0800	; Bit 1

DMA_CCR2_PL	EQU	0x3000	; PL[1:0] bits (Channel Priority level)
DMA_CCR2_PL_0	EQU	0x1000	; Bit 0
DMA_CCR2_PL_1	EQU	0x2000	; Bit 1

DMA_CCR2_MEM2MEM	EQU	0x4000	; Memory to memory mode

; Bit definition for DMA_CCR3 register
DMA_CCR3_EN	EQU	0x0001	; Channel enable
DMA_CCR3_TCIE	EQU	0x0002	; Transfer complete interrupt enable
DMA_CCR3_HTIE	EQU	0x0004	; Half Transfer interrupt enable
DMA_CCR3_TEIE	EQU	0x0008	; Transfer error interrupt enable
DMA_CCR3_DIR	EQU	0x0010	; Data transfer direction
DMA_CCR3_CIRC	EQU	0x0020	; Circular mode
DMA_CCR3_PINC	EQU	0x0040	; Peripheral increment mode
DMA_CCR3_MINC	EQU	0x0080	; Memory increment mode

DMA_CCR3_PSIZE	EQU	0x0300	; PSIZE[1:0] bits (Peripheral size)
DMA_CCR3_PSIZE_0	EQU	0x0100	; Bit 0
DMA_CCR3_PSIZE_1	EQU	0x0200	; Bit 1

DMA_CCR3_MSIZE	EQU	0x0C00	; MSIZE[1:0] bits (Memory size)
DMA_CCR3_MSIZE_0	EQU	0x0400	; Bit 0
DMA_CCR3_MSIZE_1	EQU	0x0800	; Bit 1

DMA_CCR3_PL	EQU	0x3000	; PL[1:0] bits (Channel Priority level)
DMA_CCR3_PL_0	EQU	0x1000	; Bit 0
DMA_CCR3_PL_1	EQU	0x2000	; Bit 1

DMA_CCR3_MEM2MEM	EQU	0x4000	; Memory to memory mode

; * Bit definition for DMA_CCR4 register
DMA_CCR4_EN	EQU	0x0001	; Channel enable
DMA_CCR4_TCIE	EQU	0x0002	; Transfer complete interrupt enable
DMA_CCR4_HTIE	EQU	0x0004	; Half Transfer interrupt enable
DMA_CCR4_TEIE	EQU	0x0008	; Transfer error interrupt enable
DMA_CCR4_DIR	EQU	0x0010	; Data transfer direction
DMA_CCR4_CIRC	EQU	0x0020	; Circular mode
DMA_CCR4_PINC	EQU	0x0040	; Peripheral increment mode
DMA_CCR4_MINC	EQU	0x0080	; Memory increment mode

DMA_CCR4_PSIZE	EQU	0x0300	; PSIZE[1:0] bits (Peripheral size)
DMA_CCR4_PSIZE_0	EQU	0x0100	; Bit 0
DMA_CCR4_PSIZE_1	EQU	0x0200	; Bit 1

DMA_CCR4_MSIZE	EQU	0x0C00	; MSIZE[1:0] bits (Memory size)
DMA_CCR4_MSIZE_0	EQU	0x0400	; Bit 0
DMA_CCR4_MSIZE_1	EQU	0x0800	; Bit 1

DMA_CCR4_PL	EQU	0x3000	; PL[1:0] bits (Channel Priority level)
DMA_CCR4_PL_0	EQU	0x1000	; Bit 0
DMA_CCR4_PL_1	EQU	0x2000	; Bit 1

DMA_CCR4_MEM2MEM	EQU	0x4000	; Memory to memory mode

; Bit definition for DMA_CCR5 register
DMA_CCR5_EN	EQU	0x0001	; Channel enable
DMA_CCR5_TCIE	EQU	0x0002	; Transfer complete interrupt enable
DMA_CCR5_HTIE	EQU	0x0004	; Half Transfer interrupt enable
DMA_CCR5_TEIE	EQU	0x0008	; Transfer error interrupt enable
DMA_CCR5_DIR	EQU	0x0010	; Data transfer direction
DMA_CCR5_CIRC	EQU	0x0020	; Circular mode
DMA_CCR5_PINC	EQU	0x0040	; Peripheral increment mode
DMA_CCR5_MINC	EQU	0x0080	; Memory increment mode

DMA_CCR5_PSIZE	EQU	0x0300	; PSIZE[1:0] bits (Peripheral size)
DMA_CCR5_PSIZE_0	EQU	0x0100	; Bit 0
DMA_CCR5_PSIZE_1	EQU	0x0200	; Bit 1

DMA_CCR5_MSIZE	EQU	0x0C00	; MSIZE[1:0] bits (Memory size)
DMA_CCR5_MSIZE_0	EQU	0x0400	; Bit 0
DMA_CCR5_MSIZE_1	EQU	0x0800	; Bit 1

DMA_CCR5_PL	EQU	0x3000	; PL[1:0] bits (Channel Priority level)
DMA_CCR5_PL_0	EQU	0x1000	; Bit 0
DMA_CCR5_PL_1	EQU	0x2000	; Bit 1

DMA_CCR5_MEM2MEM	EQU	0x4000	; Memory to memory mode enable

; Bit definition for DMA_CCR6 register
DMA_CCR6_EN	EQU	0x0001	; Channel enable
DMA_CCR6_TCIE	EQU	0x0002	; Transfer complete interrupt enable
DMA_CCR6_HTIE	EQU	0x0004	; Half Transfer interrupt enable
DMA_CCR6_TEIE	EQU	0x0008	; Transfer error interrupt enable
DMA_CCR6_DIR	EQU	0x0010	; Data transfer direction
DMA_CCR6_CIRC	EQU	0x0020	; Circular mode
DMA_CCR6_PINC	EQU	0x0040	; Peripheral increment mode
DMA_CCR6_MINC	EQU	0x0080	; Memory increment mode

DMA_CCR6_PSIZE	EQU	0x0300	; PSIZE[1:0] bits (Peripheral size)
DMA_CCR6_PSIZE_0	EQU	0x0100	; Bit 0
DMA_CCR6_PSIZE_1	EQU	0x0200	; Bit 1

DMA_CCR6_MSIZE	EQU	0x0C00	; MSIZE[1:0] bits (Memory size)
DMA_CCR6_MSIZE_0	EQU	0x0400	; Bit 0
DMA_CCR6_MSIZE_1	EQU	0x0800	; Bit 1

DMA_CCR6_PL	EQU	0x3000	; PL[1:0] bits (Channel Priority level)
DMA_CCR6_PL_0	EQU	0x1000	; Bit 0
DMA_CCR6_PL_1	EQU	0x2000	; Bit 1

DMA_CCR6_MEM2MEM	EQU	0x4000	; Memory to memory mode

; Bit definition for DMA_CCR7 register
DMA_CCR7_EN	EQU	0x0001	; Channel enable
DMA_CCR7_TCIE	EQU	0x0002	; Transfer complete interrupt enable
DMA_CCR7_HTIE	EQU	0x0004	; Half Transfer interrupt enable
DMA_CCR7_TEIE	EQU	0x0008	; Transfer error interrupt enable
DMA_CCR7_DIR	EQU	0x0010	; Data transfer direction
DMA_CCR7_CIRC	EQU	0x0020	; Circular mode
DMA_CCR7_PINC	EQU	0x0040	; Peripheral increment mode
DMA_CCR7_MINC	EQU	0x0080	; Memory increment mode

DMA_CCR7_PSIZE	EQU	0x0300	; PSIZE[1:0] bits (Peripheral size)
DMA_CCR7_PSIZE_0	EQU	0x0100	; Bit 0
DMA_CCR7_PSIZE_1	EQU	0x0200	; Bit 1

DMA_CCR7_MSIZE	EQU	0x0C00	; MSIZE[1:0] bits (Memory size)
DMA_CCR7_MSIZE_0	EQU	0x0400	; Bit 0
DMA_CCR7_MSIZE_1	EQU	0x0800	; Bit 1

DMA_CCR7_PL	EQU	0x3000	; PL[1:0] bits (Channel Priority level)
DMA_CCR7_PL_0	EQU	0x1000	; Bit 0
DMA_CCR7_PL_1	EQU	0x2000	; Bit 1

DMA_CCR7_MEM2MEM	EQU	0x4000	; Memory to memory mode enable

; Bit definition for DMA_CNDTR1 register
DMA_CNDTR1_NDT	EQU	0xFFFF	; Number of data to Transfer

; Bit definition for DMA_CNDTR2 register
DMA_CNDTR2_NDT	EQU	0xFFFF	; Number of data to Transfer

; Bit definition for DMA_CNDTR3 register
DMA_CNDTR3_NDT	EQU	0xFFFF	; Number of data to Transfer

; Bit definition for DMA_CNDTR4 register
DMA_CNDTR4_NDT	EQU	0xFFFF	; Number of data to Transfer

; Bit definition for DMA_CNDTR5 register
DMA_CNDTR5_NDT	EQU	0xFFFF	; Number of data to Transfer

; Bit definition for DMA_CNDTR6 register
DMA_CNDTR6_NDT	EQU	0xFFFF	; Number of data to Transfer

; Bit definition for DMA_CNDTR7 register
DMA_CNDTR7_NDT	EQU	0xFFFF	; Number of data to Transfer

; Bit definition for DMA_CPAR1 register
DMA_CPAR1_PA	EQU	0xFFFFFFFF	; Peripheral Address

; Bit definition for DMA_CPAR2 register
DMA_CPAR2_PA	EQU	0xFFFFFFFF	; Peripheral Address

; Bit definition for DMA_CPAR3 register
DMA_CPAR3_PA	EQU	0xFFFFFFFF	; Peripheral Address


; Bit definition for DMA_CPAR4 register
DMA_CPAR4_PA	EQU	0xFFFFFFFF	; Peripheral Address

; Bit definition for DMA_CPAR5 register
DMA_CPAR5_PA	EQU	0xFFFFFFFF	; Peripheral Address

; Bit definition for DMA_CPAR6 register
DMA_CPAR6_PA	EQU	0xFFFFFFFF	; Peripheral Address


; Bit definition for DMA_CPAR7 register
DMA_CPAR7_PA	EQU	0xFFFFFFFF	; Peripheral Address

; Bit definition for DMA_CMAR1 register
DMA_CMAR1_MA	EQU	0xFFFFFFFF	; Memory Address

; Bit definition for DMA_CMAR2 register
DMA_CMAR2_MA	EQU	0xFFFFFFFF	; Memory Address

; Bit definition for DMA_CMAR3 register
DMA_CMAR3_MA	EQU	0xFFFFFFFF	; Memory Address


; Bit definition for DMA_CMAR4 register
DMA_CMAR4_MA	EQU	0xFFFFFFFF	; Memory Address

; Bit definition for DMA_CMAR5 register
DMA_CMAR5_MA	EQU	0xFFFFFFFF	; Memory Address

; Bit definition for DMA_CMAR6 register
DMA_CMAR6_MA	EQU	0xFFFFFFFF	; Memory Address

; Bit definition for DMA_CMAR7 register
DMA_CMAR7_MA	EQU	0xFFFFFFFF	; Memory Address


;
; Analog to Digital Converter
;


; Bit definition for ADC_SR register
ADC_SR_AWD	EQU	0x01	; Analog watchdog flag
ADC_SR_EOC	EQU	0x02	; End of conversion
ADC_SR_JEOC	EQU	0x04	; Injected channel end of conversion
ADC_SR_JSTRT	EQU	0x08	; Injected channel Start flag
ADC_SR_STRT	EQU	0x10	; Regular channel Start flag

; Bit definition for ADC_CR1 register
ADC_CR1_AWDCH	EQU	0x0000001F	; AWDCH[4:0] bits (Analog watchdog channel select bits)
ADC_CR1_AWDCH_0	EQU	0x00000001	; Bit 0
ADC_CR1_AWDCH_1	EQU	0x00000002	; Bit 1
ADC_CR1_AWDCH_2	EQU	0x00000004	; Bit 2
ADC_CR1_AWDCH_3	EQU	0x00000008	; Bit 3
ADC_CR1_AWDCH_4	EQU	0x00000010	; Bit 4

ADC_CR1_EOCIE	EQU	0x00000020	; Interrupt enable for EOC
ADC_CR1_AWDIE	EQU	0x00000040	; AAnalog Watchdog interrupt enable
ADC_CR1_JEOCIE	EQU	0x00000080	; Interrupt enable for injected channels
ADC_CR1_SCAN	EQU	0x00000100	; Scan mode
ADC_CR1_AWDSGL	EQU	0x00000200	; Enable the watchdog on a single channel in scan mode
ADC_CR1_JAUTO	EQU	0x00000400	; Automatic injected group conversion
ADC_CR1_DISCEN	EQU	0x00000800	; Discontinuous mode on regular channels
ADC_CR1_JDISCEN	EQU	0x00001000	; Discontinuous mode on injected channels

ADC_CR1_DISCNUM	EQU	0x0000E000	; DISCNUM[2:0] bits (Discontinuous mode channel count)
ADC_CR1_DISCNUM_0	EQU	0x00002000	; Bit 0
ADC_CR1_DISCNUM_1	EQU	0x00004000	; Bit 1
ADC_CR1_DISCNUM_2	EQU	0x00008000	; Bit 2

ADC_CR1_DUALMOD	EQU	0x000F0000	; DUALMOD[3:0] bits (Dual mode selection)
ADC_CR1_DUALMOD_0	EQU	0x00010000	; Bit 0
ADC_CR1_DUALMOD_1	EQU	0x00020000	; Bit 1
ADC_CR1_DUALMOD_2	EQU	0x00040000	; Bit 2
ADC_CR1_DUALMOD_3	EQU	0x00080000	; Bit 3

ADC_CR1_JAWDEN	EQU	0x00400000	; Analog watchdog enable on injected channels
ADC_CR1_AWDEN	EQU	0x00800000	; Analog watchdog enable on regular channels


; Bit definition for ADC_CR2 register
ADC_CR2_ADON	EQU	0x00000001	; A/D Converter ON / OFF
ADC_CR2_CONT	EQU	0x00000002	; Continuous Conversion
ADC_CR2_CAL	EQU	0x00000004	; A/D Calibration
ADC_CR2_RSTCAL	EQU	0x00000008	; Reset Calibration
ADC_CR2_DMA	EQU	0x00000100	; Direct Memory access mode
ADC_CR2_ALIGN	EQU	0x00000800	; Data Alignment

ADC_CR2_JEXTSEL	EQU	0x00007000	; JEXTSEL[2:0] bits (External event select for injected group)
ADC_CR2_JEXTSEL_0	EQU	0x00001000	; Bit 0
ADC_CR2_JEXTSEL_1	EQU	0x00002000	; Bit 1
ADC_CR2_JEXTSEL_2	EQU	0x00004000	; Bit 2

ADC_CR2_JEXTTRIG	EQU	0x00008000	; External Trigger Conversion mode for injected channels

ADC_CR2_EXTSEL	EQU	0x000E0000	; EXTSEL[2:0] bits (External Event Select for regular group)
ADC_CR2_EXTSEL_0	EQU	0x00020000	; Bit 0
ADC_CR2_EXTSEL_1	EQU	0x00040000	; Bit 1
ADC_CR2_EXTSEL_2	EQU	0x00080000	; Bit 2

ADC_CR2_EXTTRIG	EQU	0x00100000	; External Trigger Conversion mode for regular channels
ADC_CR2_JSWSTART	EQU	0x00200000	; Start Conversion of injected channels
ADC_CR2_SWSTART	EQU	0x00400000	; Start Conversion of regular channels
ADC_CR2_TSVREFE	EQU	0x00800000	; Temperature Sensor and VREFINT Enable

; Bit definition for ADC_SMPR1 register
ADC_SMPR1_SMP10	EQU	0x00000007	; SMP10[2:0] bits (Channel 10 Sample time selection)
ADC_SMPR1_SMP10_0	EQU	0x00000001	; Bit 0
ADC_SMPR1_SMP10_1	EQU	0x00000002	; Bit 1
ADC_SMPR1_SMP10_2	EQU	0x00000004	; Bit 2

ADC_SMPR1_SMP11	EQU	0x00000038	; SMP11[2:0] bits (Channel 11 Sample time selection)
ADC_SMPR1_SMP11_0	EQU	0x00000008	; Bit 0
ADC_SMPR1_SMP11_1	EQU	0x00000010	; Bit 1
ADC_SMPR1_SMP11_2	EQU	0x00000020	; Bit 2

ADC_SMPR1_SMP12	EQU	0x000001C0	; SMP12[2:0] bits (Channel 12 Sample time selection)
ADC_SMPR1_SMP12_0	EQU	0x00000040	; Bit 0
ADC_SMPR1_SMP12_1	EQU	0x00000080	; Bit 1
ADC_SMPR1_SMP12_2	EQU	0x00000100	; Bit 2

ADC_SMPR1_SMP13	EQU	0x00000E00	; SMP13[2:0] bits (Channel 13 Sample time selection)
ADC_SMPR1_SMP13_0	EQU	0x00000200	; Bit 0
ADC_SMPR1_SMP13_1	EQU	0x00000400	; Bit 1
ADC_SMPR1_SMP13_2	EQU	0x00000800	; Bit 2

ADC_SMPR1_SMP14	EQU	0x00007000	; SMP14[2:0] bits (Channel 14 Sample time selection)
ADC_SMPR1_SMP14_0	EQU	0x00001000	; Bit 0
ADC_SMPR1_SMP14_1	EQU	0x00002000	; Bit 1
ADC_SMPR1_SMP14_2	EQU	0x00004000	; Bit 2

ADC_SMPR1_SMP15	EQU	0x00038000	; SMP15[2:0] bits (Channel 15 Sample time selection)
ADC_SMPR1_SMP15_0	EQU	0x00008000	; Bit 0
ADC_SMPR1_SMP15_1	EQU	0x00010000	; Bit 1
ADC_SMPR1_SMP15_2	EQU	0x00020000	; Bit 2

ADC_SMPR1_SMP16	EQU	0x001C0000	; SMP16[2:0] bits (Channel 16 Sample time selection)
ADC_SMPR1_SMP16_0	EQU	0x00040000	; Bit 0
ADC_SMPR1_SMP16_1	EQU	0x00080000	; Bit 1
ADC_SMPR1_SMP16_2	EQU	0x00100000	; Bit 2

ADC_SMPR1_SMP17	EQU	0x00E00000	; SMP17[2:0] bits (Channel 17 Sample time selection)
ADC_SMPR1_SMP17_0	EQU	0x00200000	; Bit 0
ADC_SMPR1_SMP17_1	EQU	0x00400000	; Bit 1
ADC_SMPR1_SMP17_2	EQU	0x00800000	; Bit 2

; Bit definition for ADC_SMPR2 register
ADC_SMPR2_SMP0	EQU	0x00000007	; SMP0[2:0] bits (Channel 0 Sample time selection)
ADC_SMPR2_SMP0_0	EQU	0x00000001	; Bit 0
ADC_SMPR2_SMP0_1	EQU	0x00000002	; Bit 1
ADC_SMPR2_SMP0_2	EQU	0x00000004	; Bit 2

ADC_SMPR2_SMP1	EQU	0x00000038	; SMP1[2:0] bits (Channel 1 Sample time selection)
ADC_SMPR2_SMP1_0	EQU	0x00000008	; Bit 0
ADC_SMPR2_SMP1_1	EQU	0x00000010	; Bit 1
ADC_SMPR2_SMP1_2	EQU	0x00000020	; Bit 2

ADC_SMPR2_SMP2	EQU	0x000001C0	; SMP2[2:0] bits (Channel 2 Sample time selection)
ADC_SMPR2_SMP2_0	EQU	0x00000040	; Bit 0
ADC_SMPR2_SMP2_1	EQU	0x00000080	; Bit 1
ADC_SMPR2_SMP2_2	EQU	0x00000100	; Bit 2

ADC_SMPR2_SMP3	EQU	0x00000E00	; SMP3[2:0] bits (Channel 3 Sample time selection)
ADC_SMPR2_SMP3_0	EQU	0x00000200	; Bit 0
ADC_SMPR2_SMP3_1	EQU	0x00000400	; Bit 1
ADC_SMPR2_SMP3_2	EQU	0x00000800	; Bit 2

ADC_SMPR2_SMP4	EQU	0x00007000	; SMP4[2:0] bits (Channel 4 Sample time selection)
ADC_SMPR2_SMP4_0	EQU	0x00001000	; Bit 0
ADC_SMPR2_SMP4_1	EQU	0x00002000	; Bit 1
ADC_SMPR2_SMP4_2	EQU	0x00004000	; Bit 2

ADC_SMPR2_SMP5	EQU	0x00038000	; SMP5[2:0] bits (Channel 5 Sample time selection)
ADC_SMPR2_SMP5_0	EQU	0x00008000	; Bit 0
ADC_SMPR2_SMP5_1	EQU	0x00010000	; Bit 1
ADC_SMPR2_SMP5_2	EQU	0x00020000	; Bit 2

ADC_SMPR2_SMP6	EQU	0x001C0000	; SMP6[2:0] bits (Channel 6 Sample time selection)
ADC_SMPR2_SMP6_0	EQU	0x00040000	; Bit 0
ADC_SMPR2_SMP6_1	EQU	0x00080000	; Bit 1
ADC_SMPR2_SMP6_2	EQU	0x00100000	; Bit 2

ADC_SMPR2_SMP7	EQU	0x00E00000	; SMP7[2:0] bits (Channel 7 Sample time selection)
ADC_SMPR2_SMP7_0	EQU	0x00200000	; Bit 0
ADC_SMPR2_SMP7_1	EQU	0x00400000	; Bit 1
ADC_SMPR2_SMP7_2	EQU	0x00800000	; Bit 2

ADC_SMPR2_SMP8	EQU	0x07000000	; SMP8[2:0] bits (Channel 8 Sample time selection)
ADC_SMPR2_SMP8_0	EQU	0x01000000	; Bit 0
ADC_SMPR2_SMP8_1	EQU	0x02000000	; Bit 1
ADC_SMPR2_SMP8_2	EQU	0x04000000	; Bit 2

ADC_SMPR2_SMP9	EQU	0x38000000	; SMP9[2:0] bits (Channel 9 Sample time selection)
ADC_SMPR2_SMP9_0	EQU	0x08000000	; Bit 0
ADC_SMPR2_SMP9_1	EQU	0x10000000	; Bit 1
ADC_SMPR2_SMP9_2	EQU	0x20000000	; Bit 2

; Bit definition for ADC_JOFR1 register
ADC_JOFR1_JOFFSET1	EQU	0x0FFF	; Data offset for injected channel 1

; Bit definition for ADC_JOFR2 register
ADC_JOFR2_JOFFSET2	EQU	0x0FFF	; Data offset for injected channel 2

; Bit definition for ADC_JOFR3 register
ADC_JOFR3_JOFFSET3	EQU	0x0FFF	; Data offset for injected channel 3

; Bit definition for ADC_JOFR4 register
ADC_JOFR4_JOFFSET4	EQU	0x0FFF	; Data offset for injected channel 4

; Bit definition for ADC_HTR register
ADC_HTR_HT	EQU	0x0FFF	; Analog watchdog high threshold

; Bit definition for ADC_LTR register
ADC_LTR_LT	EQU	0x0FFF	; Analog watchdog low threshold

; Bit definition for ADC_SQR1 register
ADC_SQR1_SQ13	EQU	0x0000001F	; SQ13[4:0] bits (13th conversion in regular sequence)
ADC_SQR1_SQ13_0	EQU	0x00000001	; Bit 0
ADC_SQR1_SQ13_1	EQU	0x00000002	; Bit 1
ADC_SQR1_SQ13_2	EQU	0x00000004	; Bit 2
ADC_SQR1_SQ13_3	EQU	0x00000008	; Bit 3
ADC_SQR1_SQ13_4	EQU	0x00000010	; Bit 4

ADC_SQR1_SQ14	EQU	0x000003E0	; SQ14[4:0] bits (14th conversion in regular sequence)
ADC_SQR1_SQ14_0	EQU	0x00000020	; Bit 0
ADC_SQR1_SQ14_1	EQU	0x00000040	; Bit 1
ADC_SQR1_SQ14_2	EQU	0x00000080	; Bit 2
ADC_SQR1_SQ14_3	EQU	0x00000100	; Bit 3
ADC_SQR1_SQ14_4	EQU	0x00000200	; Bit 4

ADC_SQR1_SQ15	EQU	0x00007C00	; SQ15[4:0] bits (15th conversion in regular sequence)
ADC_SQR1_SQ15_0	EQU	0x00000400	; Bit 0
ADC_SQR1_SQ15_1	EQU	0x00000800	; Bit 1
ADC_SQR1_SQ15_2	EQU	0x00001000	; Bit 2
ADC_SQR1_SQ15_3	EQU	0x00002000	; Bit 3
ADC_SQR1_SQ15_4	EQU	0x00004000	; Bit 4

ADC_SQR1_SQ16	EQU	0x000F8000	; SQ16[4:0] bits (16th conversion in regular sequence)
ADC_SQR1_SQ16_0	EQU	0x00008000	; Bit 0
ADC_SQR1_SQ16_1	EQU	0x00010000	; Bit 1
ADC_SQR1_SQ16_2	EQU	0x00020000	; Bit 2
ADC_SQR1_SQ16_3	EQU	0x00040000	; Bit 3
ADC_SQR1_SQ16_4	EQU	0x00080000	; Bit 4

ADC_SQR1_L	EQU	0x00F00000	; L[3:0] bits (Regular channel sequence length)
ADC_SQR1_L_0	EQU	0x00100000	; Bit 0
ADC_SQR1_L_1	EQU	0x00200000	; Bit 1
ADC_SQR1_L_2	EQU	0x00400000	; Bit 2
ADC_SQR1_L_3	EQU	0x00800000	; Bit 3

; Bit definition for ADC_SQR2 register
ADC_SQR2_SQ7	EQU	0x0000001F	; SQ7[4:0] bits (7th conversion in regular sequence)
ADC_SQR2_SQ7_0	EQU	0x00000001	; Bit 0
ADC_SQR2_SQ7_1	EQU	0x00000002	; Bit 1
ADC_SQR2_SQ7_2	EQU	0x00000004	; Bit 2
ADC_SQR2_SQ7_3	EQU	0x00000008	; Bit 3
ADC_SQR2_SQ7_4	EQU	0x00000010	; Bit 4

ADC_SQR2_SQ8	EQU	0x000003E0	; SQ8[4:0] bits (8th conversion in regular sequence)
ADC_SQR2_SQ8_0	EQU	0x00000020	; Bit 0
ADC_SQR2_SQ8_1	EQU	0x00000040	; Bit 1
ADC_SQR2_SQ8_2	EQU	0x00000080	; Bit 2
ADC_SQR2_SQ8_3	EQU	0x00000100	; Bit 3
ADC_SQR2_SQ8_4	EQU	0x00000200	; Bit 4

ADC_SQR2_SQ9	EQU	0x00007C00	; SQ9[4:0] bits (9th conversion in regular sequence)
ADC_SQR2_SQ9_0	EQU	0x00000400	; Bit 0
ADC_SQR2_SQ9_1	EQU	0x00000800	; Bit 1
ADC_SQR2_SQ9_2	EQU	0x00001000	; Bit 2
ADC_SQR2_SQ9_3	EQU	0x00002000	; Bit 3
ADC_SQR2_SQ9_4	EQU	0x00004000	; Bit 4

ADC_SQR2_SQ10	EQU	0x000F8000	; SQ10[4:0] bits (10th conversion in regular sequence)
ADC_SQR2_SQ10_0	EQU	0x00008000	; Bit 0
ADC_SQR2_SQ10_1	EQU	0x00010000	; Bit 1
ADC_SQR2_SQ10_2	EQU	0x00020000	; Bit 2
ADC_SQR2_SQ10_3	EQU	0x00040000	; Bit 3
ADC_SQR2_SQ10_4	EQU	0x00080000	; Bit 4

ADC_SQR2_SQ11	EQU	0x01F00000	; SQ11[4:0] bits (11th conversion in regular sequence)
ADC_SQR2_SQ11_0	EQU	0x00100000	; Bit 0
ADC_SQR2_SQ11_1	EQU	0x00200000	; Bit 1
ADC_SQR2_SQ11_2	EQU	0x00400000	; Bit 2
ADC_SQR2_SQ11_3	EQU	0x00800000	; Bit 3
ADC_SQR2_SQ11_4	EQU	0x01000000	; Bit 4

ADC_SQR2_SQ12	EQU	0x3E000000	; SQ12[4:0] bits (12th conversion in regular sequence)
ADC_SQR2_SQ12_0	EQU	0x02000000	; Bit 0
ADC_SQR2_SQ12_1	EQU	0x04000000	; Bit 1
ADC_SQR2_SQ12_2	EQU	0x08000000	; Bit 2
ADC_SQR2_SQ12_3	EQU	0x10000000	; Bit 3
ADC_SQR2_SQ12_4	EQU	0x20000000	; Bit 4

; Bit definition for ADC_SQR3 register
ADC_SQR3_SQ1	EQU	0x0000001F	; SQ1[4:0] bits (1st conversion in regular sequence)
ADC_SQR3_SQ1_0	EQU	0x00000001	; Bit 0
ADC_SQR3_SQ1_1	EQU	0x00000002	; Bit 1
ADC_SQR3_SQ1_2	EQU	0x00000004	; Bit 2
ADC_SQR3_SQ1_3	EQU	0x00000008	; Bit 3
ADC_SQR3_SQ1_4	EQU	0x00000010	; Bit 4

ADC_SQR3_SQ2	EQU	0x000003E0	; SQ2[4:0] bits (2nd conversion in regular sequence)
ADC_SQR3_SQ2_0	EQU	0x00000020	; Bit 0
ADC_SQR3_SQ2_1	EQU	0x00000040	; Bit 1
ADC_SQR3_SQ2_2	EQU	0x00000080	; Bit 2
ADC_SQR3_SQ2_3	EQU	0x00000100	; Bit 3
ADC_SQR3_SQ2_4	EQU	0x00000200	; Bit 4

ADC_SQR3_SQ3	EQU	0x00007C00	; SQ3[4:0] bits (3rd conversion in regular sequence)
ADC_SQR3_SQ3_0	EQU	0x00000400	; Bit 0
ADC_SQR3_SQ3_1	EQU	0x00000800	; Bit 1
ADC_SQR3_SQ3_2	EQU	0x00001000	; Bit 2
ADC_SQR3_SQ3_3	EQU	0x00002000	; Bit 3
ADC_SQR3_SQ3_4	EQU	0x00004000	; Bit 4

ADC_SQR3_SQ4	EQU	0x000F8000	; SQ4[4:0] bits (4th conversion in regular sequence)
ADC_SQR3_SQ4_0	EQU	0x00008000	; Bit 0
ADC_SQR3_SQ4_1	EQU	0x00010000	; Bit 1
ADC_SQR3_SQ4_2	EQU	0x00020000	; Bit 2
ADC_SQR3_SQ4_3	EQU	0x00040000	; Bit 3
ADC_SQR3_SQ4_4	EQU	0x00080000	; Bit 4

ADC_SQR3_SQ5	EQU	0x01F00000	; SQ5[4:0] bits (5th conversion in regular sequence)
ADC_SQR3_SQ5_0	EQU	0x00100000	; Bit 0
ADC_SQR3_SQ5_1	EQU	0x00200000	; Bit 1
ADC_SQR3_SQ5_2	EQU	0x00400000	; Bit 2
ADC_SQR3_SQ5_3	EQU	0x00800000	; Bit 3
ADC_SQR3_SQ5_4	EQU	0x01000000	; Bit 4

ADC_SQR3_SQ6	EQU	0x3E000000	; SQ6[4:0] bits (6th conversion in regular sequence)
ADC_SQR3_SQ6_0	EQU	0x02000000	; Bit 0
ADC_SQR3_SQ6_1	EQU	0x04000000	; Bit 1
ADC_SQR3_SQ6_2	EQU	0x08000000	; Bit 2
ADC_SQR3_SQ6_3	EQU	0x10000000	; Bit 3
ADC_SQR3_SQ6_4	EQU	0x20000000	; Bit 4

; Bit definition for ADC_JSQR register
ADC_JSQR_JSQ1	EQU	0x0000001F	; JSQ1[4:0] bits (1st conversion in injected sequence)
ADC_JSQR_JSQ1_0	EQU	0x00000001	; Bit 0
ADC_JSQR_JSQ1_1	EQU	0x00000002	; Bit 1
ADC_JSQR_JSQ1_2	EQU	0x00000004	; Bit 2
ADC_JSQR_JSQ1_3	EQU	0x00000008	; Bit 3
ADC_JSQR_JSQ1_4	EQU	0x00000010	; Bit 4

ADC_JSQR_JSQ2	EQU	0x000003E0	; JSQ2[4:0] bits (2nd conversion in injected sequence)
ADC_JSQR_JSQ2_0	EQU	0x00000020	; Bit 0
ADC_JSQR_JSQ2_1	EQU	0x00000040	; Bit 1
ADC_JSQR_JSQ2_2	EQU	0x00000080	; Bit 2
ADC_JSQR_JSQ2_3	EQU	0x00000100	; Bit 3
ADC_JSQR_JSQ2_4	EQU	0x00000200	; Bit 4

ADC_JSQR_JSQ3	EQU	0x00007C00	; JSQ3[4:0] bits (3rd conversion in injected sequence)
ADC_JSQR_JSQ3_0	EQU	0x00000400	; Bit 0
ADC_JSQR_JSQ3_1	EQU	0x00000800	; Bit 1
ADC_JSQR_JSQ3_2	EQU	0x00001000	; Bit 2
ADC_JSQR_JSQ3_3	EQU	0x00002000	; Bit 3
ADC_JSQR_JSQ3_4	EQU	0x00004000	; Bit 4

ADC_JSQR_JSQ4	EQU	0x000F8000	; JSQ4[4:0] bits (4th conversion in injected sequence)
ADC_JSQR_JSQ4_0	EQU	0x00008000	; Bit 0
ADC_JSQR_JSQ4_1	EQU	0x00010000	; Bit 1
ADC_JSQR_JSQ4_2	EQU	0x00020000	; Bit 2
ADC_JSQR_JSQ4_3	EQU	0x00040000	; Bit 3
ADC_JSQR_JSQ4_4	EQU	0x00080000	; Bit 4

ADC_JSQR_JL	EQU	0x00300000	; JL[1:0] bits (Injected Sequence length)
ADC_JSQR_JL_0	EQU	0x00100000	; Bit 0
ADC_JSQR_JL_1	EQU	0x00200000	; Bit 1

; Bit definition for ADC_JDR1 register
ADC_JDR1_JDATA	EQU	0xFFFF	; Injected data

; Bit definition for ADC_JDR2 register
ADC_JDR2_JDATA	EQU	0xFFFF	; Injected data

; Bit definition for ADC_JDR3 register
ADC_JDR3_JDATA	EQU	0xFFFF	; Injected data

; Bit definition for ADC_JDR4 register
ADC_JDR4_JDATA	EQU	0xFFFF	; Injected data

; Bit definition for ADC_DR register
ADC_DR_DATA	EQU	0x0000FFFF	; Regular data
ADC_DR_ADC2DATA	EQU	0xFFFF0000	; ADC2 data


;
; Digital to Analog Converter
;


; Bit definition for DAC_CR register
DAC_CR_EN1	EQU	0x00000001	; DAC channel1 enable
DAC_CR_BOFF1	EQU	0x00000002	; DAC channel1 output buffer disable
DAC_CR_TEN1	EQU	0x00000004	; DAC channel1 Trigger enable

DAC_CR_TSEL1	EQU	0x00000038	; TSEL1[2:0] (DAC channel1 Trigger selection)
DAC_CR_TSEL1_0	EQU	0x00000008	; Bit 0
DAC_CR_TSEL1_1	EQU	0x00000010	; Bit 1
DAC_CR_TSEL1_2	EQU	0x00000020	; Bit 2

DAC_CR_WAVE1	EQU	0x000000C0	; WAVE1[1:0] (DAC channel1 noise/triangle wave generation enable)
DAC_CR_WAVE1_0	EQU	0x00000040	; Bit 0
DAC_CR_WAVE1_1	EQU	0x00000080	; Bit 1

DAC_CR_MAMP1	EQU	0x00000F00	; MAMP1[3:0] (DAC channel1 Mask/Amplitude selector)
DAC_CR_MAMP1_0	EQU	0x00000100	; Bit 0
DAC_CR_MAMP1_1	EQU	0x00000200	; Bit 1
DAC_CR_MAMP1_2	EQU	0x00000400	; Bit 2
DAC_CR_MAMP1_3	EQU	0x00000800	; Bit 3

DAC_CR_DMAEN1	EQU	0x00001000	; DAC channel1 DMA enable
DAC_CR_EN2	EQU	0x00010000	; DAC channel2 enable
DAC_CR_BOFF2	EQU	0x00020000	; DAC channel2 output buffer disable
DAC_CR_TEN2	EQU	0x00040000	; DAC channel2 Trigger enable

DAC_CR_TSEL2	EQU	0x00380000	; TSEL2[2:0] (DAC channel2 Trigger selection)
DAC_CR_TSEL2_0	EQU	0x00080000	; Bit 0
DAC_CR_TSEL2_1	EQU	0x00100000	; Bit 1
DAC_CR_TSEL2_2	EQU	0x00200000	; Bit 2

DAC_CR_WAVE2	EQU	0x00C00000	; WAVE2[1:0] (DAC channel2 noise/triangle wave generation enable)
DAC_CR_WAVE2_0	EQU	0x00400000	; Bit 0
DAC_CR_WAVE2_1	EQU	0x00800000	; Bit 1

DAC_CR_MAMP2	EQU	0x0F000000	; MAMP2[3:0] (DAC channel2 Mask/Amplitude selector)
DAC_CR_MAMP2_0	EQU	0x01000000	; Bit 0
DAC_CR_MAMP2_1	EQU	0x02000000	; Bit 1
DAC_CR_MAMP2_2	EQU	0x04000000	; Bit 2
DAC_CR_MAMP2_3	EQU	0x08000000	; Bit 3

DAC_CR_DMAEN2	EQU	0x10000000	; DAC channel2 DMA enabled

; Bit definition for DAC_SWTRIGR register
DAC_SWTRIGR_SWTRIG1	EQU	0x01	; DAC channel1 software trigger
DAC_SWTRIGR_SWTRIG2	EQU	0x02	; DAC channel2 software trigger

; Bit definition for DAC_DHR12R1 register
DAC_DHR12R1_DACC1DHR	EQU	0x0FFF	; DAC channel1 12-bit Right aligned data

; Bit definition for DAC_DHR12L1 register
DAC_DHR12L1_DACC1DHR	EQU	0xFFF0	; DAC channel1 12-bit Left aligned data

; Bit definition for DAC_DHR8R1 register
DAC_DHR8R1_DACC1DHR	EQU	0xFF	; DAC channel1 8-bit Right aligned data

; Bit definition for DAC_DHR12R2 register
DAC_DHR12R2_DACC2DHR	EQU	0x0FFF	; DAC channel2 12-bit Right aligned data

; Bit definition for DAC_DHR12L2 register
DAC_DHR12L2_DACC2DHR	EQU	0xFFF0	; DAC channel2 12-bit Left aligned data

; Bit definition for DAC_DHR8R2 register
DAC_DHR8R2_DACC2DHR	EQU	0xFF	; DAC channel2 8-bit Right aligned data

; Bit definition for DAC_DHR12RD register
DAC_DHR12RD_DACC1DHR	EQU	0x00000FFF	; DAC channel1 12-bit Right aligned data
DAC_DHR12RD_DACC2DHR	EQU	0x0FFF0000	; DAC channel2 12-bit Right aligned data

; Bit definition for DAC_DHR12LD register
DAC_DHR12LD_DACC1DHR	EQU	0x0000FFF0	; DAC channel1 12-bit Left aligned data
DAC_DHR12LD_DACC2DHR	EQU	0xFFF00000	; DAC channel2 12-bit Left aligned data

; Bit definition for DAC_DHR8RD register
DAC_DHR8RD_DACC1DHR	EQU	0x00FF	; DAC channel1 8-bit Right aligned data
DAC_DHR8RD_DACC2DHR	EQU	0xFF00	; DAC channel2 8-bit Right aligned data

; Bit definition for DAC_DOR1 register
DAC_DOR1_DACC1DOR	EQU	0x0FFF	; DAC channel1 data output

; Bit definition for DAC_DOR2 register
DAC_DOR2_DACC2DOR	EQU	0x0FFF	; DAC channel2 data output


;
; TIM
;


; Bit definition for TIM_CR1 register
TIM_CR1_CEN	EQU	0x0001	; Counter enable
TIM_CR1_UDIS	EQU	0x0002	; Update disable
TIM_CR1_URS	EQU	0x0004	; Update request source
TIM_CR1_OPM	EQU	0x0008	; One pulse mode
TIM_CR1_DIR	EQU	0x0010	; Direction

TIM_CR1_CMS	EQU	0x0060	; CMS[1:0] bits (Center-aligned mode selection)
TIM_CR1_CMS_0	EQU	0x0020	; Bit 0
TIM_CR1_CMS_1	EQU	0x0040	; Bit 1

TIM_CR1_ARPE	EQU	0x0080	; Auto-reload preload enable

TIM_CR1_CKD	EQU	0x0300	; CKD[1:0] bits (clock division)
TIM_CR1_CKD_0	EQU	0x0100	; Bit 0
TIM_CR1_CKD_1	EQU	0x0200	; Bit 1

; Bit definition for TIM_CR2 register
TIM_CR2_CCPC	EQU	0x0001	; Capture/Compare Preloaded Control
TIM_CR2_CCUS	EQU	0x0004	; Capture/Compare Control Update Selection
TIM_CR2_CCDS	EQU	0x0008	; Capture/Compare DMA Selection

TIM_CR2_MMS	EQU	0x0070	; MMS[2:0] bits (Master Mode Selection)
TIM_CR2_MMS_0	EQU	0x0010	; Bit 0
TIM_CR2_MMS_1	EQU	0x0020	; Bit 1
TIM_CR2_MMS_2	EQU	0x0040	; Bit 2

TIM_CR2_TI1S	EQU	0x0080	; TI1 Selection
TIM_CR2_OIS1	EQU	0x0100	; Output Idle state 1 (OC1 output)
TIM_CR2_OIS1N	EQU	0x0200	; Output Idle state 1 (OC1N output)
TIM_CR2_OIS2	EQU	0x0400	; Output Idle state 2 (OC2 output)
TIM_CR2_OIS2N	EQU	0x0800	; Output Idle state 2 (OC2N output)
TIM_CR2_OIS3	EQU	0x1000	; Output Idle state 3 (OC3 output)
TIM_CR2_OIS3N	EQU	0x2000	; Output Idle state 3 (OC3N output)
TIM_CR2_OIS4	EQU	0x4000	; Output Idle state 4 (OC4 output)

; Bit definition for TIM_SMCR register
TIM_SMCR_SMS	EQU	0x0007	; SMS[2:0] bits (Slave mode selection)
TIM_SMCR_SMS_0	EQU	0x0001	; Bit 0
TIM_SMCR_SMS_1	EQU	0x0002	; Bit 1
TIM_SMCR_SMS_2	EQU	0x0004	; Bit 2

TIM_SMCR_TS	EQU	0x0070	; TS[2:0] bits (Trigger selection)
TIM_SMCR_TS_0	EQU	0x0010	; Bit 0
TIM_SMCR_TS_1	EQU	0x0020	; Bit 1
TIM_SMCR_TS_2	EQU	0x0040	; Bit 2

TIM_SMCR_MSM	EQU	0x0080	; Master/slave mode

TIM_SMCR_ETF	EQU	0x0F00	; ETF[3:0] bits (External trigger filter)
TIM_SMCR_ETF_0	EQU	0x0100	; Bit 0
TIM_SMCR_ETF_1	EQU	0x0200	; Bit 1
TIM_SMCR_ETF_2	EQU	0x0400	; Bit 2
TIM_SMCR_ETF_3	EQU	0x0800	; Bit 3

TIM_SMCR_ETPS	EQU	0x3000	; ETPS[1:0] bits (External trigger prescaler)
TIM_SMCR_ETPS_0	EQU	0x1000	; Bit 0
TIM_SMCR_ETPS_1	EQU	0x2000	; Bit 1

TIM_SMCR_ECE	EQU	0x4000	; External clock enable
TIM_SMCR_ETP	EQU	0x8000	; External trigger polarity

; Bit definition for TIM_DIER register
TIM_DIER_UIE	EQU	0x0001	; Update interrupt enable
TIM_DIER_CC1IE	EQU	0x0002	; Capture/Compare 1 interrupt enable
TIM_DIER_CC2IE	EQU	0x0004	; Capture/Compare 2 interrupt enable
TIM_DIER_CC3IE	EQU	0x0008	; Capture/Compare 3 interrupt enable
TIM_DIER_CC4IE	EQU	0x0010	; Capture/Compare 4 interrupt enable
TIM_DIER_COMIE	EQU	0x0020	; COM interrupt enable
TIM_DIER_TIE	EQU	0x0040	; Trigger interrupt enable
TIM_DIER_BIE	EQU	0x0080	; Break interrupt enable
TIM_DIER_UDE	EQU	0x0100	; Update DMA request enable
TIM_DIER_CC1DE	EQU	0x0200	; Capture/Compare 1 DMA request enable
TIM_DIER_CC2DE	EQU	0x0400	; Capture/Compare 2 DMA request enable
TIM_DIER_CC3DE	EQU	0x0800	; Capture/Compare 3 DMA request enable
TIM_DIER_CC4DE	EQU	0x1000	; Capture/Compare 4 DMA request enable
TIM_DIER_COMDE	EQU	0x2000	; COM DMA request enable
TIM_DIER_TDE	EQU	0x4000	; Trigger DMA request enable

; Bit definition for TIM_SR register
TIM_SR_UIF	EQU	0x0001	; Update interrupt Flag
TIM_SR_CC1IF	EQU	0x0002	; Capture/Compare 1 interrupt Flag
TIM_SR_CC2IF	EQU	0x0004	; Capture/Compare 2 interrupt Flag
TIM_SR_CC3IF	EQU	0x0008	; Capture/Compare 3 interrupt Flag
TIM_SR_CC4IF	EQU	0x0010	; Capture/Compare 4 interrupt Flag
TIM_SR_COMIF	EQU	0x0020	; COM interrupt Flag
TIM_SR_TIF	EQU	0x0040	; Trigger interrupt Flag
TIM_SR_BIF	EQU	0x0080	; Break interrupt Flag
TIM_SR_CC1OF	EQU	0x0200	; Capture/Compare 1 Overcapture Flag
TIM_SR_CC2OF	EQU	0x0400	; Capture/Compare 2 Overcapture Flag
TIM_SR_CC3OF	EQU	0x0800	; Capture/Compare 3 Overcapture Flag
TIM_SR_CC4OF	EQU	0x1000	; Capture/Compare 4 Overcapture Flag

; Bit definition for TIM_EGR register
TIM_EGR_UG	EQU	0x01	; Update Generation
TIM_EGR_CC1G	EQU	0x02	; Capture/Compare 1 Generation
TIM_EGR_CC2G	EQU	0x04	; Capture/Compare 2 Generation
TIM_EGR_CC3G	EQU	0x08	; Capture/Compare 3 Generation
TIM_EGR_CC4G	EQU	0x10	; Capture/Compare 4 Generation
TIM_EGR_COMG	EQU	0x20	; Capture/Compare Control Update Generation
TIM_EGR_TG	EQU	0x40	; Trigger Generation
TIM_EGR_BG	EQU	0x80	; Break Generation

; Bit definition for TIM_CCMR1 register
TIM_CCMR1_CC1S	EQU	0x0003	; CC1S[1:0] bits (Capture/Compare 1 Selection)
TIM_CCMR1_CC1S_0	EQU	0x0001	; Bit 0
TIM_CCMR1_CC1S_1	EQU	0x0002	; Bit 1

TIM_CCMR1_OC1FE	EQU	0x0004	; Output Compare 1 Fast enable
TIM_CCMR1_OC1PE	EQU	0x0008	; Output Compare 1 Preload enable

TIM_CCMR1_OC1M	EQU	0x0070	; OC1M[2:0] bits (Output Compare 1 Mode)
TIM_CCMR1_OC1M_0	EQU	0x0010	; Bit 0
TIM_CCMR1_OC1M_1	EQU	0x0020	; Bit 1
TIM_CCMR1_OC1M_2	EQU	0x0040	; Bit 2

TIM_CCMR1_OC1CE	EQU	0x0080	; Output Compare 1Clear Enable

TIM_CCMR1_CC2S	EQU	0x0300	; CC2S[1:0] bits (Capture/Compare 2 Selection)
TIM_CCMR1_CC2S_0	EQU	0x0100	; Bit 0
TIM_CCMR1_CC2S_1	EQU	0x0200	; Bit 1

TIM_CCMR1_OC2FE	EQU	0x0400	; Output Compare 2 Fast enable
TIM_CCMR1_OC2PE	EQU	0x0800	; Output Compare 2 Preload enable

TIM_CCMR1_OC2M	EQU	0x7000	; OC2M[2:0] bits (Output Compare 2 Mode)
TIM_CCMR1_OC2M_0	EQU	0x1000	; Bit 0
TIM_CCMR1_OC2M_1	EQU	0x2000	; Bit 1
TIM_CCMR1_OC2M_2	EQU	0x4000	; Bit 2

TIM_CCMR1_OC2CE	EQU	0x8000	; Output Compare 2 Clear Enable

;----------------------------------------------------------------------------

TIM_CCMR1_IC1PSC	EQU	0x000C	; IC1PSC[1:0] bits (Input Capture 1 Prescaler)
TIM_CCMR1_IC1PSC_0	EQU	0x0004	; Bit 0
TIM_CCMR1_IC1PSC_1	EQU	0x0008	; Bit 1

TIM_CCMR1_IC1F	EQU	0x00F0	; IC1F[3:0] bits (Input Capture 1 Filter)
TIM_CCMR1_IC1F_0	EQU	0x0010	; Bit 0
TIM_CCMR1_IC1F_1	EQU	0x0020	; Bit 1
TIM_CCMR1_IC1F_2	EQU	0x0040	; Bit 2
TIM_CCMR1_IC1F_3	EQU	0x0080	; Bit 3

TIM_CCMR1_IC2PSC	EQU	0x0C00	; IC2PSC[1:0] bits (Input Capture 2 Prescaler)
TIM_CCMR1_IC2PSC_0	EQU	0x0400	; Bit 0
TIM_CCMR1_IC2PSC_1	EQU	0x0800	; Bit 1

TIM_CCMR1_IC2F	EQU	0xF000	; IC2F[3:0] bits (Input Capture 2 Filter)
TIM_CCMR1_IC2F_0	EQU	0x1000	; Bit 0
TIM_CCMR1_IC2F_1	EQU	0x2000	; Bit 1
TIM_CCMR1_IC2F_2	EQU	0x4000	; Bit 2
TIM_CCMR1_IC2F_3	EQU	0x8000	; Bit 3

; Bit definition for TIM_CCMR2 register
TIM_CCMR2_CC3S	EQU	0x0003	; CC3S[1:0] bits (Capture/Compare 3 Selection)
TIM_CCMR2_CC3S_0	EQU	0x0001	; Bit 0
TIM_CCMR2_CC3S_1	EQU	0x0002	; Bit 1

TIM_CCMR2_OC3FE	EQU	0x0004	; Output Compare 3 Fast enable
TIM_CCMR2_OC3PE	EQU	0x0008	; Output Compare 3 Preload enable

TIM_CCMR2_OC3M	EQU	0x0070	; OC3M[2:0] bits (Output Compare 3 Mode)
TIM_CCMR2_OC3M_0	EQU	0x0010	; Bit 0
TIM_CCMR2_OC3M_1	EQU	0x0020	; Bit 1
TIM_CCMR2_OC3M_2	EQU	0x0040	; Bit 2

TIM_CCMR2_OC3CE	EQU	0x0080	; Output Compare 3 Clear Enable

TIM_CCMR2_CC4S	EQU	0x0300	; CC4S[1:0] bits (Capture/Compare 4 Selection)
TIM_CCMR2_CC4S_0	EQU	0x0100	; Bit 0
TIM_CCMR2_CC4S_1	EQU	0x0200	; Bit 1

TIM_CCMR2_OC4FE	EQU	0x0400	; Output Compare 4 Fast enable
TIM_CCMR2_OC4PE	EQU	0x0800	; Output Compare 4 Preload enable

TIM_CCMR2_OC4M	EQU	0x7000	; OC4M[2:0] bits (Output Compare 4 Mode)
TIM_CCMR2_OC4M_0	EQU	0x1000	; Bit 0
TIM_CCMR2_OC4M_1	EQU	0x2000	; Bit 1
TIM_CCMR2_OC4M_2	EQU	0x4000	; Bit 2

TIM_CCMR2_OC4CE	EQU	0x8000	; Output Compare 4 Clear Enable

;----------------------------------------------------------------------------

TIM_CCMR2_IC3PSC	EQU	0x000C	; IC3PSC[1:0] bits (Input Capture 3 Prescaler)
TIM_CCMR2_IC3PSC_0	EQU	0x0004	; Bit 0
TIM_CCMR2_IC3PSC_1	EQU	0x0008	; Bit 1

TIM_CCMR2_IC3F	EQU	0x00F0	; IC3F[3:0] bits (Input Capture 3 Filter)
TIM_CCMR2_IC3F_0	EQU	0x0010	; Bit 0
TIM_CCMR2_IC3F_1	EQU	0x0020	; Bit 1
TIM_CCMR2_IC3F_2	EQU	0x0040	; Bit 2
TIM_CCMR2_IC3F_3	EQU	0x0080	; Bit 3

TIM_CCMR2_IC4PSC	EQU	0x0C00	; IC4PSC[1:0] bits (Input Capture 4 Prescaler)
TIM_CCMR2_IC4PSC_0	EQU	0x0400	; Bit 0
TIM_CCMR2_IC4PSC_1	EQU	0x0800	; Bit 1

TIM_CCMR2_IC4F	EQU	0xF000	; IC4F[3:0] bits (Input Capture 4 Filter)
TIM_CCMR2_IC4F_0	EQU	0x1000	; Bit 0
TIM_CCMR2_IC4F_1	EQU	0x2000	; Bit 1
TIM_CCMR2_IC4F_2	EQU	0x4000	; Bit 2
TIM_CCMR2_IC4F_3	EQU	0x8000	; Bit 3

; Bit definition for TIM_CCER register
TIM_CCER_CC1E	EQU	0x0001	; Capture/Compare 1 output enable
TIM_CCER_CC1P	EQU	0x0002	; Capture/Compare 1 output Polarity
TIM_CCER_CC1NE	EQU	0x0004	; Capture/Compare 1 Complementary output enable
TIM_CCER_CC1NP	EQU	0x0008	; Capture/Compare 1 Complementary output Polarity
TIM_CCER_CC2E	EQU	0x0010	; Capture/Compare 2 output enable
TIM_CCER_CC2P	EQU	0x0020	; Capture/Compare 2 output Polarity
TIM_CCER_CC2NE	EQU	0x0040	; Capture/Compare 2 Complementary output enable
TIM_CCER_CC2NP	EQU	0x0080	; Capture/Compare 2 Complementary output Polarity
TIM_CCER_CC3E	EQU	0x0100	; Capture/Compare 3 output enable
TIM_CCER_CC3P	EQU	0x0200	; Capture/Compare 3 output Polarity
TIM_CCER_CC3NE	EQU	0x0400	; Capture/Compare 3 Complementary output enable
TIM_CCER_CC3NP	EQU	0x0800	; Capture/Compare 3 Complementary output Polarity
TIM_CCER_CC4E	EQU	0x1000	; Capture/Compare 4 output enable
TIM_CCER_CC4P	EQU	0x2000	; Capture/Compare 4 output Polarity

; Bit definition for TIM_CNT register
TIM_CNT_CNT	EQU	0xFFFF	; Counter Value

; Bit definition for TIM_PSC register
TIM_PSC_PSC	EQU	0xFFFF	; Prescaler Value

; Bit definition for TIM_ARR register
TIM_ARR_ARR	EQU	0xFFFF	; actual auto-reload Value

; Bit definition for TIM_RCR register
TIM_RCR_REP	EQU	0xFF	; Repetition Counter Value

; Bit definition for TIM_CCR1 register
TIM_CCR1_CCR1	EQU	0xFFFF	; Capture/Compare 1 Value

; Bit definition for TIM_CCR2 register
TIM_CCR2_CCR2	EQU	0xFFFF	; Capture/Compare 2 Value

; Bit definition for TIM_CCR3 register
TIM_CCR3_CCR3	EQU	0xFFFF	; Capture/Compare 3 Value

; Bit definition for TIM_CCR4 register
TIM_CCR4_CCR4	EQU	0xFFFF	; Capture/Compare 4 Value

; Bit definition for TIM_BDTR register
TIM_BDTR_DTG	EQU	0x00FF	; DTG[0:7] bits (Dead-Time Generator set-up)
TIM_BDTR_DTG_0	EQU	0x0001	; Bit 0
TIM_BDTR_DTG_1	EQU	0x0002	; Bit 1
TIM_BDTR_DTG_2	EQU	0x0004	; Bit 2
TIM_BDTR_DTG_3	EQU	0x0008	; Bit 3
TIM_BDTR_DTG_4	EQU	0x0010	; Bit 4
TIM_BDTR_DTG_5	EQU	0x0020	; Bit 5
TIM_BDTR_DTG_6	EQU	0x0040	; Bit 6
TIM_BDTR_DTG_7	EQU	0x0080	; Bit 7

TIM_BDTR_LOCK	EQU	0x0300	; LOCK[1:0] bits (Lock Configuration)
TIM_BDTR_LOCK_0	EQU	0x0100	; Bit 0
TIM_BDTR_LOCK_1	EQU	0x0200	; Bit 1

TIM_BDTR_OSSI	EQU	0x0400	; Off-State Selection for Idle mode
TIM_BDTR_OSSR	EQU	0x0800	; Off-State Selection for Run mode
TIM_BDTR_BKE	EQU	0x1000	; Break enable
TIM_BDTR_BKP	EQU	0x2000	; Break Polarity
TIM_BDTR_AOE	EQU	0x4000	; Automatic Output enable
TIM_BDTR_MOE	EQU	0x8000	; Main Output enable

; Bit definition for TIM_DCR register
TIM_DCR_DBA	EQU	0x001F	; DBA[4:0] bits (DMA Base Address)
TIM_DCR_DBA_0	EQU	0x0001	; Bit 0
TIM_DCR_DBA_1	EQU	0x0002	; Bit 1
TIM_DCR_DBA_2	EQU	0x0004	; Bit 2
TIM_DCR_DBA_3	EQU	0x0008	; Bit 3
TIM_DCR_DBA_4	EQU	0x0010	; Bit 4

TIM_DCR_DBL	EQU	0x1F00	; DBL[4:0] bits (DMA Burst Length)
TIM_DCR_DBL_0	EQU	0x0100	; Bit 0
TIM_DCR_DBL_1	EQU	0x0200	; Bit 1
TIM_DCR_DBL_2	EQU	0x0400	; Bit 2
TIM_DCR_DBL_3	EQU	0x0800	; Bit 3
TIM_DCR_DBL_4	EQU	0x1000	; Bit 4

; Bit definition for TIM_DMAR register
TIM_DMAR_DMAB	EQU	0xFFFF	; DMA register for burst accesses


;
; Real-Time Clock
;


; Bit definition for RTC_CRH register
RTC_CRH_SECIE	EQU	0x01	; Second Interrupt Enable
RTC_CRH_ALRIE	EQU	0x02	; Alarm Interrupt Enable
RTC_CRH_OWIE	EQU	0x04	; OverfloW Interrupt Enable

; Bit definition for RTC_CRL register
RTC_CRL_SECF	EQU	0x01	; Second Flag
RTC_CRL_ALRF	EQU	0x02	; Alarm Flag
RTC_CRL_OWF	EQU	0x04	; OverfloW Flag
RTC_CRL_RSF	EQU	0x08	; Registers Synchronized Flag
RTC_CRL_CNF	EQU	0x10	; Configuration Flag
RTC_CRL_RTOFF	EQU	0x20	; RTC operation OFF

; Bit definition for RTC_PRLH register
RTC_PRLH_PRL	EQU	0x000F	; RTC Prescaler Reload Value High

; Bit definition for RTC_PRLL register
RTC_PRLL_PRL	EQU	0xFFFF	; RTC Prescaler Reload Value Low

; Bit definition for RTC_DIVH register
RTC_DIVH_RTC_DIV	EQU	0x000F	; RTC Clock Divider High

; Bit definition for RTC_DIVL register
RTC_DIVL_RTC_DIV	EQU	0xFFFF	; RTC Clock Divider Low

; Bit definition for RTC_CNTH register
RTC_CNTH_RTC_CNT	EQU	0xFFFF	; RTC Counter High

; Bit definition for RTC_CNTL register
RTC_CNTL_RTC_CNT	EQU	0xFFFF	; RTC Counter Low

; Bit definition for RTC_ALRH register
RTC_ALRH_RTC_ALR	EQU	0xFFFF	; RTC Alarm High

; Bit definition for RTC_ALRL register
RTC_ALRL_RTC_ALR	EQU	0xFFFF	; RTC Alarm Low


;
; Independent WATCHDOG
;


; Bit definition for IWDG_KR register
IWDG_KR_KEY	EQU	0xFFFF	; Key value (write only, read 0000h)

; Bit definition for IWDG_PR register
IWDG_PR_PR	EQU	0x07	; PR[2:0] (Prescaler divider)
IWDG_PR_PR_0	EQU	0x01	; Bit 0
IWDG_PR_PR_1	EQU	0x02	; Bit 1
IWDG_PR_PR_2	EQU	0x04	; Bit 2

; Bit definition for IWDG_RLR register
IWDG_RLR_RL	EQU	0x0FFF	; Watchdog counter reload value

; Bit definition for IWDG_SR register
IWDG_SR_PVU	EQU	0x01	; Watchdog prescaler value update
IWDG_SR_RVU	EQU	0x02	; Watchdog counter reload value update


;
; Window WATCHDOG
;


; Bit definition for WWDG_CR register
WWDG_CR_T	EQU	0x7F	; T[6:0] bits (7-Bit counter (MSB to LSB))
WWDG_CR_T0	EQU	0x01	; Bit 0
WWDG_CR_T1	EQU	0x02	; Bit 1
WWDG_CR_T2	EQU	0x04	; Bit 2
WWDG_CR_T3	EQU	0x08	; Bit 3
WWDG_CR_T4	EQU	0x10	; Bit 4
WWDG_CR_T5	EQU	0x20	; Bit 5
WWDG_CR_T6	EQU	0x40	; Bit 6

WWDG_CR_WDGA	EQU	0x80	; Activation bit

; Bit definition for WWDG_CFR register
WWDG_CFR_W	EQU	0x007F	; W[6:0] bits (7-bit window value)
WWDG_CFR_W0	EQU	0x0001	; Bit 0
WWDG_CFR_W1	EQU	0x0002	; Bit 1
WWDG_CFR_W2	EQU	0x0004	; Bit 2
WWDG_CFR_W3	EQU	0x0008	; Bit 3
WWDG_CFR_W4	EQU	0x0010	; Bit 4
WWDG_CFR_W5	EQU	0x0020	; Bit 5
WWDG_CFR_W6	EQU	0x0040	; Bit 6

WWDG_CFR_WDGTB	EQU	0x0180	; WDGTB[1:0] bits (Timer Base)
WWDG_CFR_WDGTB0	EQU	0x0080	; Bit 0
WWDG_CFR_WDGTB1	EQU	0x0100	; Bit 1

WWDG_CFR_EWI	EQU	0x0200	; Early Wakeup Interrupt

; Bit definition for WWDG_SR register
WWDG_SR_EWIF	EQU	0x01	; Early Wakeup Interrupt Flag


;
; Flexible Static Memory Controller
;


; Bit definition for FSMC_BCR1 register
FSMC_BCR1_MBKEN	EQU	0x00000001	; Memory bank enable bit
FSMC_BCR1_MUXEN	EQU	0x00000002	; Address/data multiplexing enable bit

FSMC_BCR1_MTYP	EQU	0x0000000C	; MTYP[1:0] bits (Memory type)
FSMC_BCR1_MTYP_0	EQU	0x00000004	; Bit 0
FSMC_BCR1_MTYP_1	EQU	0x00000008	; Bit 1

FSMC_BCR1_MWID	EQU	0x00000030	; MWID[1:0] bits (Memory data bus width)
FSMC_BCR1_MWID_0	EQU	0x00000010	; Bit 0
FSMC_BCR1_MWID_1	EQU	0x00000020	; Bit 1

FSMC_BCR1_FACCEN	EQU	0x00000040	; Flash access enable
FSMC_BCR1_BURSTEN	EQU	0x00000100	; Burst enable bit
FSMC_BCR1_WAITPOL	EQU	0x00000200	; Wait signal polarity bit
FSMC_BCR1_WRAPMOD	EQU	0x00000400	; Wrapped burst mode support
FSMC_BCR1_WAITCFG	EQU	0x00000800	; Wait timing configuration
FSMC_BCR1_WREN	EQU	0x00001000	; Write enable bit
FSMC_BCR1_WAITEN	EQU	0x00002000	; Wait enable bit
FSMC_BCR1_EXTMOD	EQU	0x00004000	; Extended mode enable
FSMC_BCR1_CBURSTRW	EQU	0x00080000	; Write burst enable

; Bit definition for FSMC_BCR2 register
FSMC_BCR2_MBKEN	EQU	0x00000001	; Memory bank enable bit
FSMC_BCR2_MUXEN	EQU	0x00000002	; Address/data multiplexing enable bit

FSMC_BCR2_MTYP	EQU	0x0000000C	; MTYP[1:0] bits (Memory type)
FSMC_BCR2_MTYP_0	EQU	0x00000004	; Bit 0
FSMC_BCR2_MTYP_1	EQU	0x00000008	; Bit 1

FSMC_BCR2_MWID	EQU	0x00000030	; MWID[1:0] bits (Memory data bus width)
FSMC_BCR2_MWID_0	EQU	0x00000010	; Bit 0
FSMC_BCR2_MWID_1	EQU	0x00000020	; Bit 1

FSMC_BCR2_FACCEN	EQU	0x00000040	; Flash access enable
FSMC_BCR2_BURSTEN	EQU	0x00000100	; Burst enable bit
FSMC_BCR2_WAITPOL	EQU	0x00000200	; Wait signal polarity bit
FSMC_BCR2_WRAPMOD	EQU	0x00000400	; Wrapped burst mode support
FSMC_BCR2_WAITCFG	EQU	0x00000800	; Wait timing configuration
FSMC_BCR2_WREN	EQU	0x00001000	; Write enable bit
FSMC_BCR2_WAITEN	EQU	0x00002000	; Wait enable bit
FSMC_BCR2_EXTMOD	EQU	0x00004000	; Extended mode enable
FSMC_BCR2_CBURSTRW	EQU	0x00080000	; Write burst enable

; Bit definition for FSMC_BCR3 register
FSMC_BCR3_MBKEN	EQU	0x00000001	; Memory bank enable bit
FSMC_BCR3_MUXEN	EQU	0x00000002	; Address/data multiplexing enable bit

FSMC_BCR3_MTYP	EQU	0x0000000C	; MTYP[1:0] bits (Memory type)
FSMC_BCR3_MTYP_0	EQU	0x00000004	; Bit 0
FSMC_BCR3_MTYP_1	EQU	0x00000008	; Bit 1

FSMC_BCR3_MWID	EQU	0x00000030	; MWID[1:0] bits (Memory data bus width)
FSMC_BCR3_MWID_0	EQU	0x00000010	; Bit 0
FSMC_BCR3_MWID_1	EQU	0x00000020	; Bit 1

FSMC_BCR3_FACCEN	EQU	0x00000040	; Flash access enable
FSMC_BCR3_BURSTEN	EQU	0x00000100	; Burst enable bit
FSMC_BCR3_WAITPOL	EQU	0x00000200	; Wait signal polarity bit.
FSMC_BCR3_WRAPMOD	EQU	0x00000400	; Wrapped burst mode support
FSMC_BCR3_WAITCFG	EQU	0x00000800	; Wait timing configuration
FSMC_BCR3_WREN	EQU	0x00001000	; Write enable bit
FSMC_BCR3_WAITEN	EQU	0x00002000	; Wait enable bit
FSMC_BCR3_EXTMOD	EQU	0x00004000	; Extended mode enable
FSMC_BCR3_CBURSTRW	EQU	0x00080000	; Write burst enable

; Bit definition for FSMC_BCR4 register
FSMC_BCR4_MBKEN	EQU	0x00000001	; Memory bank enable bit
FSMC_BCR4_MUXEN	EQU	0x00000002	; Address/data multiplexing enable bit

FSMC_BCR4_MTYP	EQU	0x0000000C	; MTYP[1:0] bits (Memory type)
FSMC_BCR4_MTYP_0	EQU	0x00000004	; Bit 0
FSMC_BCR4_MTYP_1	EQU	0x00000008	; Bit 1

FSMC_BCR4_MWID	EQU	0x00000030	; MWID[1:0] bits (Memory data bus width)
FSMC_BCR4_MWID_0	EQU	0x00000010	; Bit 0
FSMC_BCR4_MWID_1	EQU	0x00000020	; Bit 1

FSMC_BCR4_FACCEN	EQU	0x00000040	; Flash access enable
FSMC_BCR4_BURSTEN	EQU	0x00000100	; Burst enable bit
FSMC_BCR4_WAITPOL	EQU	0x00000200	; Wait signal polarity bit
FSMC_BCR4_WRAPMOD	EQU	0x00000400	; Wrapped burst mode support
FSMC_BCR4_WAITCFG	EQU	0x00000800	; Wait timing configuration
FSMC_BCR4_WREN	EQU	0x00001000	; Write enable bit
FSMC_BCR4_WAITEN	EQU	0x00002000	; Wait enable bit
FSMC_BCR4_EXTMOD	EQU	0x00004000	; Extended mode enable
FSMC_BCR4_CBURSTRW	EQU	0x00080000	; Write burst enable

; Bit definition for FSMC_BTR1 register
FSMC_BTR1_ADDSET	EQU	0x0000000F	; ADDSET[3:0] bits (Address setup phase duration)
FSMC_BTR1_ADDSET_0	EQU	0x00000001	; Bit 0
FSMC_BTR1_ADDSET_1	EQU	0x00000002	; Bit 1
FSMC_BTR1_ADDSET_2	EQU	0x00000004	; Bit 2
FSMC_BTR1_ADDSET_3	EQU	0x00000008	; Bit 3

FSMC_BTR1_ADDHLD	EQU	0x000000F0	; ADDHLD[3:0] bits (Address-hold phase duration)
FSMC_BTR1_ADDHLD_0	EQU	0x00000010	; Bit 0
FSMC_BTR1_ADDHLD_1	EQU	0x00000020	; Bit 1
FSMC_BTR1_ADDHLD_2	EQU	0x00000040	; Bit 2
FSMC_BTR1_ADDHLD_3	EQU	0x00000080	; Bit 3

FSMC_BTR1_DATAST	EQU	0x0000FF00	; DATAST [3:0] bits (Data-phase duration)
FSMC_BTR1_DATAST_0	EQU	0x00000100	; Bit 0
FSMC_BTR1_DATAST_1	EQU	0x00000200	; Bit 1
FSMC_BTR1_DATAST_2	EQU	0x00000400	; Bit 2
FSMC_BTR1_DATAST_3	EQU	0x00000800	; Bit 3

FSMC_BTR1_BUSTURN	EQU	0x000F0000	; BUSTURN[3:0] bits (Bus turnaround phase duration)
FSMC_BTR1_BUSTURN_0	EQU	0x00010000	; Bit 0
FSMC_BTR1_BUSTURN_1	EQU	0x00020000	; Bit 1
FSMC_BTR1_BUSTURN_2	EQU	0x00040000	; Bit 2
FSMC_BTR1_BUSTURN_3	EQU	0x00080000	; Bit 3

FSMC_BTR1_CLKDIV	EQU	0x00F00000	; CLKDIV[3:0] bits (Clock divide ratio)
FSMC_BTR1_CLKDIV_0	EQU	0x00100000	; Bit 0
FSMC_BTR1_CLKDIV_1	EQU	0x00200000	; Bit 1
FSMC_BTR1_CLKDIV_2	EQU	0x00400000	; Bit 2
FSMC_BTR1_CLKDIV_3	EQU	0x00800000	; Bit 3

FSMC_BTR1_DATLAT	EQU	0x0F000000	; DATLA[3:0] bits (Data latency)
FSMC_BTR1_DATLAT_0	EQU	0x01000000	; Bit 0
FSMC_BTR1_DATLAT_1	EQU	0x02000000	; Bit 1
FSMC_BTR1_DATLAT_2	EQU	0x04000000	; Bit 2
FSMC_BTR1_DATLAT_3	EQU	0x08000000	; Bit 3

FSMC_BTR1_ACCMOD	EQU	0x30000000	; ACCMOD[1:0] bits (Access mode)
FSMC_BTR1_ACCMOD_0	EQU	0x10000000	; Bit 0
FSMC_BTR1_ACCMOD_1	EQU	0x20000000	; Bit 1

; Bit definition for FSMC_BTR2 register
FSMC_BTR2_ADDSET	EQU	0x0000000F	; ADDSET[3:0] bits (Address setup phase duration)
FSMC_BTR2_ADDSET_0	EQU	0x00000001	; Bit 0
FSMC_BTR2_ADDSET_1	EQU	0x00000002	; Bit 1
FSMC_BTR2_ADDSET_2	EQU	0x00000004	; Bit 2
FSMC_BTR2_ADDSET_3	EQU	0x00000008	; Bit 3

FSMC_BTR2_ADDHLD	EQU	0x000000F0	; ADDHLD[3:0] bits (Address-hold phase duration)
FSMC_BTR2_ADDHLD_0	EQU	0x00000010	; Bit 0
FSMC_BTR2_ADDHLD_1	EQU	0x00000020	; Bit 1
FSMC_BTR2_ADDHLD_2	EQU	0x00000040	; Bit 2
FSMC_BTR2_ADDHLD_3	EQU	0x00000080	; Bit 3

FSMC_BTR2_DATAST	EQU	0x0000FF00	; DATAST [3:0] bits (Data-phase duration)
FSMC_BTR2_DATAST_0	EQU	0x00000100	; Bit 0
FSMC_BTR2_DATAST_1	EQU	0x00000200	; Bit 1
FSMC_BTR2_DATAST_2	EQU	0x00000400	; Bit 2
FSMC_BTR2_DATAST_3	EQU	0x00000800	; Bit 3

FSMC_BTR2_BUSTURN	EQU	0x000F0000	; BUSTURN[3:0] bits (Bus turnaround phase duration)
FSMC_BTR2_BUSTURN_0	EQU	0x00010000	; Bit 0
FSMC_BTR2_BUSTURN_1	EQU	0x00020000	; Bit 1
FSMC_BTR2_BUSTURN_2	EQU	0x00040000	; Bit 2
FSMC_BTR2_BUSTURN_3	EQU	0x00080000	; Bit 3

FSMC_BTR2_CLKDIV	EQU	0x00F00000	; CLKDIV[3:0] bits (Clock divide ratio)
FSMC_BTR2_CLKDIV_0	EQU	0x00100000	; Bit 0
FSMC_BTR2_CLKDIV_1	EQU	0x00200000	; Bit 1
FSMC_BTR2_CLKDIV_2	EQU	0x00400000	; Bit 2
FSMC_BTR2_CLKDIV_3	EQU	0x00800000	; Bit 3

FSMC_BTR2_DATLAT	EQU	0x0F000000	; DATLA[3:0] bits (Data latency)
FSMC_BTR2_DATLAT_0	EQU	0x01000000	; Bit 0
FSMC_BTR2_DATLAT_1	EQU	0x02000000	; Bit 1
FSMC_BTR2_DATLAT_2	EQU	0x04000000	; Bit 2
FSMC_BTR2_DATLAT_3	EQU	0x08000000	; Bit 3

FSMC_BTR2_ACCMOD	EQU	0x30000000	; ACCMOD[1:0] bits (Access mode)
FSMC_BTR2_ACCMOD_0	EQU	0x10000000	; Bit 0
FSMC_BTR2_ACCMOD_1	EQU	0x20000000	; Bit 1

; Bit definition for FSMC_BTR3 register
FSMC_BTR3_ADDSET	EQU	0x0000000F	; ADDSET[3:0] bits (Address setup phase duration)
FSMC_BTR3_ADDSET_0	EQU	0x00000001	; Bit 0
FSMC_BTR3_ADDSET_1	EQU	0x00000002	; Bit 1
FSMC_BTR3_ADDSET_2	EQU	0x00000004	; Bit 2
FSMC_BTR3_ADDSET_3	EQU	0x00000008	; Bit 3

FSMC_BTR3_ADDHLD	EQU	0x000000F0	; ADDHLD[3:0] bits (Address-hold phase duration)
FSMC_BTR3_ADDHLD_0	EQU	0x00000010	; Bit 0
FSMC_BTR3_ADDHLD_1	EQU	0x00000020	; Bit 1
FSMC_BTR3_ADDHLD_2	EQU	0x00000040	; Bit 2
FSMC_BTR3_ADDHLD_3	EQU	0x00000080	; Bit 3

FSMC_BTR3_DATAST	EQU	0x0000FF00	; DATAST [3:0] bits (Data-phase duration)
FSMC_BTR3_DATAST_0	EQU	0x00000100	; Bit 0
FSMC_BTR3_DATAST_1	EQU	0x00000200	; Bit 1
FSMC_BTR3_DATAST_2	EQU	0x00000400	; Bit 2
FSMC_BTR3_DATAST_3	EQU	0x00000800	; Bit 3

FSMC_BTR3_BUSTURN	EQU	0x000F0000	; BUSTURN[3:0] bits (Bus turnaround phase duration)
FSMC_BTR3_BUSTURN_0	EQU	0x00010000	; Bit 0
FSMC_BTR3_BUSTURN_1	EQU	0x00020000	; Bit 1
FSMC_BTR3_BUSTURN_2	EQU	0x00040000	; Bit 2
FSMC_BTR3_BUSTURN_3	EQU	0x00080000	; Bit 3

FSMC_BTR3_CLKDIV	EQU	0x00F00000	; CLKDIV[3:0] bits (Clock divide ratio)
FSMC_BTR3_CLKDIV_0	EQU	0x00100000	; Bit 0
FSMC_BTR3_CLKDIV_1	EQU	0x00200000	; Bit 1
FSMC_BTR3_CLKDIV_2	EQU	0x00400000	; Bit 2
FSMC_BTR3_CLKDIV_3	EQU	0x00800000	; Bit 3

FSMC_BTR3_DATLAT	EQU	0x0F000000	; DATLA[3:0] bits (Data latency)
FSMC_BTR3_DATLAT_0	EQU	0x01000000	; Bit 0
FSMC_BTR3_DATLAT_1	EQU	0x02000000	; Bit 1
FSMC_BTR3_DATLAT_2	EQU	0x04000000	; Bit 2
FSMC_BTR3_DATLAT_3	EQU	0x08000000	; Bit 3

FSMC_BTR3_ACCMOD	EQU	0x30000000	; ACCMOD[1:0] bits (Access mode)
FSMC_BTR3_ACCMOD_0	EQU	0x10000000	; Bit 0
FSMC_BTR3_ACCMOD_1	EQU	0x20000000	; Bit 1

; Bit definition for FSMC_BTR4 register
FSMC_BTR4_ADDSET	EQU	0x0000000F	; ADDSET[3:0] bits (Address setup phase duration)
FSMC_BTR4_ADDSET_0	EQU	0x00000001	; Bit 0
FSMC_BTR4_ADDSET_1	EQU	0x00000002	; Bit 1
FSMC_BTR4_ADDSET_2	EQU	0x00000004	; Bit 2
FSMC_BTR4_ADDSET_3	EQU	0x00000008	; Bit 3

FSMC_BTR4_ADDHLD	EQU	0x000000F0	; ADDHLD[3:0] bits (Address-hold phase duration)
FSMC_BTR4_ADDHLD_0	EQU	0x00000010	; Bit 0
FSMC_BTR4_ADDHLD_1	EQU	0x00000020	; Bit 1
FSMC_BTR4_ADDHLD_2	EQU	0x00000040	; Bit 2
FSMC_BTR4_ADDHLD_3	EQU	0x00000080	; Bit 3

FSMC_BTR4_DATAST	EQU	0x0000FF00	; DATAST [3:0] bits (Data-phase duration)
FSMC_BTR4_DATAST_0	EQU	0x00000100	; Bit 0
FSMC_BTR4_DATAST_1	EQU	0x00000200	; Bit 1
FSMC_BTR4_DATAST_2	EQU	0x00000400	; Bit 2
FSMC_BTR4_DATAST_3	EQU	0x00000800	; Bit 3

FSMC_BTR4_BUSTURN	EQU	0x000F0000	; BUSTURN[3:0] bits (Bus turnaround phase duration)
FSMC_BTR4_BUSTURN_0	EQU	0x00010000	; Bit 0
FSMC_BTR4_BUSTURN_1	EQU	0x00020000	; Bit 1
FSMC_BTR4_BUSTURN_2	EQU	0x00040000	; Bit 2
FSMC_BTR4_BUSTURN_3	EQU	0x00080000	; Bit 3

FSMC_BTR4_CLKDIV	EQU	0x00F00000	; CLKDIV[3:0] bits (Clock divide ratio)
FSMC_BTR4_CLKDIV_0	EQU	0x00100000	; Bit 0
FSMC_BTR4_CLKDIV_1	EQU	0x00200000	; Bit 1
FSMC_BTR4_CLKDIV_2	EQU	0x00400000	; Bit 2
FSMC_BTR4_CLKDIV_3	EQU	0x00800000	; Bit 3

FSMC_BTR4_DATLAT	EQU	0x0F000000	; DATLA[3:0] bits (Data latency)
FSMC_BTR4_DATLAT_0	EQU	0x01000000	; Bit 0
FSMC_BTR4_DATLAT_1	EQU	0x02000000	; Bit 1
FSMC_BTR4_DATLAT_2	EQU	0x04000000	; Bit 2
FSMC_BTR4_DATLAT_3	EQU	0x08000000	; Bit 3

FSMC_BTR4_ACCMOD	EQU	0x30000000	; ACCMOD[1:0] bits (Access mode)
FSMC_BTR4_ACCMOD_0	EQU	0x10000000	; Bit 0
FSMC_BTR4_ACCMOD_1	EQU	0x20000000	; Bit 1

; Bit definition for FSMC_BWTR1 register
FSMC_BWTR1_ADDSET	EQU	0x0000000F	; ADDSET[3:0] bits (Address setup phase duration)
FSMC_BWTR1_ADDSET_0	EQU	0x00000001	; Bit 0
FSMC_BWTR1_ADDSET_1	EQU	0x00000002	; Bit 1
FSMC_BWTR1_ADDSET_2	EQU	0x00000004	; Bit 2
FSMC_BWTR1_ADDSET_3	EQU	0x00000008	; Bit 3

FSMC_BWTR1_ADDHLD	EQU	0x000000F0	; ADDHLD[3:0] bits (Address-hold phase duration)
FSMC_BWTR1_ADDHLD_0	EQU	0x00000010	; Bit 0
FSMC_BWTR1_ADDHLD_1	EQU	0x00000020	; Bit 1
FSMC_BWTR1_ADDHLD_2	EQU	0x00000040	; Bit 2
FSMC_BWTR1_ADDHLD_3	EQU	0x00000080	; Bit 3

FSMC_BWTR1_DATAST	EQU	0x0000FF00	; DATAST [3:0] bits (Data-phase duration)
FSMC_BWTR1_DATAST_0	EQU	0x00000100	; Bit 0
FSMC_BWTR1_DATAST_1	EQU	0x00000200	; Bit 1
FSMC_BWTR1_DATAST_2	EQU	0x00000400	; Bit 2
FSMC_BWTR1_DATAST_3	EQU	0x00000800	; Bit 3

FSMC_BWTR1_CLKDIV	EQU	0x00F00000	; CLKDIV[3:0] bits (Clock divide ratio)
FSMC_BWTR1_CLKDIV_0	EQU	0x00100000	; Bit 0
FSMC_BWTR1_CLKDIV_1	EQU	0x00200000	; Bit 1
FSMC_BWTR1_CLKDIV_2	EQU	0x00400000	; Bit 2
FSMC_BWTR1_CLKDIV_3	EQU	0x00800000	; Bit 3

FSMC_BWTR1_DATLAT	EQU	0x0F000000	; DATLA[3:0] bits (Data latency)
FSMC_BWTR1_DATLAT_0	EQU	0x01000000	; Bit 0
FSMC_BWTR1_DATLAT_1	EQU	0x02000000	; Bit 1
FSMC_BWTR1_DATLAT_2	EQU	0x04000000	; Bit 2
FSMC_BWTR1_DATLAT_3	EQU	0x08000000	; Bit 3

FSMC_BWTR1_ACCMOD	EQU	0x30000000	; ACCMOD[1:0] bits (Access mode)
FSMC_BWTR1_ACCMOD_0	EQU	0x10000000	; Bit 0
FSMC_BWTR1_ACCMOD_1	EQU	0x20000000	; Bit 1

; Bit definition for FSMC_BWTR2 register
FSMC_BWTR2_ADDSET	EQU	0x0000000F	; ADDSET[3:0] bits (Address setup phase duration)
FSMC_BWTR2_ADDSET_0	EQU	0x00000001	; Bit 0
FSMC_BWTR2_ADDSET_1	EQU	0x00000002	; Bit 1
FSMC_BWTR2_ADDSET_2	EQU	0x00000004	; Bit 2
FSMC_BWTR2_ADDSET_3	EQU	0x00000008	; Bit 3

FSMC_BWTR2_ADDHLD	EQU	0x000000F0	; ADDHLD[3:0] bits (Address-hold phase duration)
FSMC_BWTR2_ADDHLD_0	EQU	0x00000010	; Bit 0
FSMC_BWTR2_ADDHLD_1	EQU	0x00000020	; Bit 1
FSMC_BWTR2_ADDHLD_2	EQU	0x00000040	; Bit 2
FSMC_BWTR2_ADDHLD_3	EQU	0x00000080	; Bit 3

FSMC_BWTR2_DATAST	EQU	0x0000FF00	; DATAST [3:0] bits (Data-phase duration)
FSMC_BWTR2_DATAST_0	EQU	0x00000100	; Bit 0
FSMC_BWTR2_DATAST_1	EQU	0x00000200	; Bit 1
FSMC_BWTR2_DATAST_2	EQU	0x00000400	; Bit 2
FSMC_BWTR2_DATAST_3	EQU	0x00000800	; Bit 3

FSMC_BWTR2_CLKDIV	EQU	0x00F00000	; CLKDIV[3:0] bits (Clock divide ratio)
FSMC_BWTR2_CLKDIV_0	EQU	0x00100000	; Bit 0
FSMC_BWTR2_CLKDIV_1	EQU	0x00200000	;Bit 1
FSMC_BWTR2_CLKDIV_2	EQU	0x00400000	; Bit 2
FSMC_BWTR2_CLKDIV_3	EQU	0x00800000	; Bit 3

FSMC_BWTR2_DATLAT	EQU	0x0F000000	; DATLA[3:0] bits (Data latency)
FSMC_BWTR2_DATLAT_0	EQU	0x01000000	; Bit 0
FSMC_BWTR2_DATLAT_1	EQU	0x02000000	; Bit 1
FSMC_BWTR2_DATLAT_2	EQU	0x04000000	; Bit 2
FSMC_BWTR2_DATLAT_3	EQU	0x08000000	; Bit 3

FSMC_BWTR2_ACCMOD	EQU	0x30000000	; ACCMOD[1:0] bits (Access mode)
FSMC_BWTR2_ACCMOD_0	EQU	0x10000000	; Bit 0
FSMC_BWTR2_ACCMOD_1	EQU	0x20000000	; Bit 1

; Bit definition for FSMC_BWTR3 register
FSMC_BWTR3_ADDSET	EQU	0x0000000F	; ADDSET[3:0] bits (Address setup phase duration)
FSMC_BWTR3_ADDSET_0	EQU	0x00000001	; Bit 0
FSMC_BWTR3_ADDSET_1	EQU	0x00000002	; Bit 1
FSMC_BWTR3_ADDSET_2	EQU	0x00000004	; Bit 2
FSMC_BWTR3_ADDSET_3	EQU	0x00000008	; Bit 3

FSMC_BWTR3_ADDHLD	EQU	0x000000F0	; ADDHLD[3:0] bits (Address-hold phase duration)
FSMC_BWTR3_ADDHLD_0	EQU	0x00000010	; Bit 0
FSMC_BWTR3_ADDHLD_1	EQU	0x00000020	; Bit 1
FSMC_BWTR3_ADDHLD_2	EQU	0x00000040	; Bit 2
FSMC_BWTR3_ADDHLD_3	EQU	0x00000080	; Bit 3

FSMC_BWTR3_DATAST	EQU	0x0000FF00	; DATAST [3:0] bits (Data-phase duration)
FSMC_BWTR3_DATAST_0	EQU	0x00000100	; Bit 0
FSMC_BWTR3_DATAST_1	EQU	0x00000200	; Bit 1
FSMC_BWTR3_DATAST_2	EQU	0x00000400	; Bit 2
FSMC_BWTR3_DATAST_3	EQU	0x00000800	; Bit 3

FSMC_BWTR3_CLKDIV	EQU	0x00F00000	; CLKDIV[3:0] bits (Clock divide ratio)
FSMC_BWTR3_CLKDIV_0	EQU	0x00100000	; Bit 0
FSMC_BWTR3_CLKDIV_1	EQU	0x00200000	; Bit 1
FSMC_BWTR3_CLKDIV_2	EQU	0x00400000	; Bit 2
FSMC_BWTR3_CLKDIV_3	EQU	0x00800000	; Bit 3

FSMC_BWTR3_DATLAT	EQU	0x0F000000	; DATLA[3:0] bits (Data latency)
FSMC_BWTR3_DATLAT_0	EQU	0x01000000	; Bit 0
FSMC_BWTR3_DATLAT_1	EQU	0x02000000	; Bit 1
FSMC_BWTR3_DATLAT_2	EQU	0x04000000	; Bit 2
FSMC_BWTR3_DATLAT_3	EQU	0x08000000	; Bit 3

FSMC_BWTR3_ACCMOD	EQU	0x30000000	; ACCMOD[1:0] bits (Access mode)
FSMC_BWTR3_ACCMOD_0	EQU	0x10000000	; Bit 0
FSMC_BWTR3_ACCMOD_1	EQU	0x20000000	; Bit 1

; Bit definition for FSMC_BWTR4 register
FSMC_BWTR4_ADDSET	EQU	0x0000000F	; ADDSET[3:0] bits (Address setup phase duration)
FSMC_BWTR4_ADDSET_0	EQU	0x00000001	; Bit 0
FSMC_BWTR4_ADDSET_1	EQU	0x00000002	; Bit 1
FSMC_BWTR4_ADDSET_2	EQU	0x00000004	; Bit 2
FSMC_BWTR4_ADDSET_3	EQU	0x00000008	; Bit 3

FSMC_BWTR4_ADDHLD	EQU	0x000000F0	; ADDHLD[3:0] bits (Address-hold phase duration)
FSMC_BWTR4_ADDHLD_0	EQU	0x00000010	; Bit 0
FSMC_BWTR4_ADDHLD_1	EQU	0x00000020	; Bit 1
FSMC_BWTR4_ADDHLD_2	EQU	0x00000040	; Bit 2
FSMC_BWTR4_ADDHLD_3	EQU	0x00000080	; Bit 3

FSMC_BWTR4_DATAST	EQU	0x0000FF00	; DATAST [3:0] bits (Data-phase duration)
FSMC_BWTR4_DATAST_0	EQU	0x00000100	; Bit 0
FSMC_BWTR4_DATAST_1	EQU	0x00000200	; Bit 1
FSMC_BWTR4_DATAST_2	EQU	0x00000400	; Bit 2
FSMC_BWTR4_DATAST_3	EQU	0x00000800	; Bit 3

FSMC_BWTR4_CLKDIV	EQU	0x00F00000	; CLKDIV[3:0] bits (Clock divide ratio)
FSMC_BWTR4_CLKDIV_0	EQU	0x00100000	; Bit 0
FSMC_BWTR4_CLKDIV_1	EQU	0x00200000	; Bit 1
FSMC_BWTR4_CLKDIV_2	EQU	0x00400000	; Bit 2
FSMC_BWTR4_CLKDIV_3	EQU	0x00800000	; Bit 3

FSMC_BWTR4_DATLAT	EQU	0x0F000000	; DATLA[3:0] bits (Data latency)
FSMC_BWTR4_DATLAT_0	EQU	0x01000000	; Bit 0
FSMC_BWTR4_DATLAT_1	EQU	0x02000000	; Bit 1
FSMC_BWTR4_DATLAT_2	EQU	0x04000000	; Bit 2
FSMC_BWTR4_DATLAT_3	EQU	0x08000000	; Bit 3

FSMC_BWTR4_ACCMOD	EQU	0x30000000	; ACCMOD[1:0] bits (Access mode)
FSMC_BWTR4_ACCMOD_0	EQU	0x10000000	; Bit 0
FSMC_BWTR4_ACCMOD_1	EQU	0x20000000	; Bit 1

; Bit definition for FSMC_PCR2 register
FSMC_PCR2_PWAITEN	EQU	0x00000002	; Wait feature enable bit
FSMC_PCR2_PBKEN	EQU	0x00000004	; PC Card/NAND Flash memory bank enable bit
FSMC_PCR2_PTYP	EQU	0x00000008	; Memory type

FSMC_PCR2_PWID	EQU	0x00000030	; PWID[1:0] bits (NAND Flash databus width)
FSMC_PCR2_PWID_0	EQU	0x00000010	; Bit 0
FSMC_PCR2_PWID_1	EQU	0x00000020	; Bit 1

FSMC_PCR2_ECCEN	EQU	0x00000040	; ECC computation logic enable bit

FSMC_PCR2_TCLR	EQU	0x00001E00	; TCLR[3:0] bits (CLE to RE delay)
FSMC_PCR2_TCLR_0	EQU	0x00000200	; Bit 0
FSMC_PCR2_TCLR_1	EQU	0x00000400	; Bit 1
FSMC_PCR2_TCLR_2	EQU	0x00000800	; Bit 2
FSMC_PCR2_TCLR_3	EQU	0x00001000	; Bit 3

FSMC_PCR2_TAR	EQU	0x0001E000	; TAR[3:0] bits (ALE to RE delay)
FSMC_PCR2_TAR_0	EQU	0x00002000	; Bit 0
FSMC_PCR2_TAR_1	EQU	0x00004000	; Bit 1
FSMC_PCR2_TAR_2	EQU	0x00008000	; Bit 2
FSMC_PCR2_TAR_3	EQU	0x00010000	; Bit 3

FSMC_PCR2_ECCPS	EQU	0x000E0000	; ECCPS[1:0] bits (ECC page size)
FSMC_PCR2_ECCPS_0	EQU	0x00020000	; Bit 0
FSMC_PCR2_ECCPS_1	EQU	0x00040000	; Bit 1
FSMC_PCR2_ECCPS_2	EQU	0x00080000	; Bit 2

; Bit definition for FSMC_PCR3 register
FSMC_PCR3_PWAITEN	EQU	0x00000002	; Wait feature enable bit
FSMC_PCR3_PBKEN	EQU	0x00000004	; PC Card/NAND Flash memory bank enable bit
FSMC_PCR3_PTYP	EQU	0x00000008	; Memory type

FSMC_PCR3_PWID	EQU	0x00000030	; PWID[1:0] bits (NAND Flash databus width)
FSMC_PCR3_PWID_0	EQU	0x00000010	; Bit 0
FSMC_PCR3_PWID_1	EQU	0x00000020	; Bit 1

FSMC_PCR3_ECCEN	EQU	0x00000040	; ECC computation logic enable bit

FSMC_PCR3_TCLR	EQU	0x00001E00	; TCLR[3:0] bits (CLE to RE delay)
FSMC_PCR3_TCLR_0	EQU	0x00000200	; Bit 0
FSMC_PCR3_TCLR_1	EQU	0x00000400	; Bit 1
FSMC_PCR3_TCLR_2	EQU	0x00000800	; Bit 2
FSMC_PCR3_TCLR_3	EQU	0x00001000	; Bit 3

FSMC_PCR3_TAR	EQU	0x0001E000	; TAR[3:0] bits (ALE to RE delay)
FSMC_PCR3_TAR_0	EQU	0x00002000	; Bit 0
FSMC_PCR3_TAR_1	EQU	0x00004000	; Bit 1
FSMC_PCR3_TAR_2	EQU	0x00008000	; Bit 2
FSMC_PCR3_TAR_3	EQU	0x00010000	; Bit 3

FSMC_PCR3_ECCPS	EQU	0x000E0000	; ECCPS[2:0] bits (ECC page size)
FSMC_PCR3_ECCPS_0	EQU	0x00020000	; Bit 0
FSMC_PCR3_ECCPS_1	EQU	0x00040000	; Bit 1
FSMC_PCR3_ECCPS_2	EQU	0x00080000	; Bit 2

; Bit definition for FSMC_PCR4 register
FSMC_PCR4_PWAITEN	EQU	0x00000002	; Wait feature enable bit
FSMC_PCR4_PBKEN	EQU	0x00000004	; PC Card/NAND Flash memory bank enable bit
FSMC_PCR4_PTYP	EQU	0x00000008	; Memory type

FSMC_PCR4_PWID	EQU	0x00000030	; PWID[1:0] bits (NAND Flash databus width)
FSMC_PCR4_PWID_0	EQU	0x00000010	; Bit 0
FSMC_PCR4_PWID_1	EQU	0x00000020	; Bit 1

FSMC_PCR4_ECCEN	EQU	0x00000040	; ECC computation logic enable bit

FSMC_PCR4_TCLR	EQU	0x00001E00	; TCLR[3:0] bits (CLE to RE delay)
FSMC_PCR4_TCLR_0	EQU	0x00000200	; Bit 0
FSMC_PCR4_TCLR_1	EQU	0x00000400	; Bit 1
FSMC_PCR4_TCLR_2	EQU	0x00000800	; Bit 2
FSMC_PCR4_TCLR_3	EQU	0x00001000	; Bit 3

FSMC_PCR4_TAR	EQU	0x0001E000	; TAR[3:0] bits (ALE to RE delay)
FSMC_PCR4_TAR_0	EQU	0x00002000	; Bit 0
FSMC_PCR4_TAR_1	EQU	0x00004000	; Bit 1
FSMC_PCR4_TAR_2	EQU	0x00008000	; Bit 2
FSMC_PCR4_TAR_3	EQU	0x00010000	; Bit 3

FSMC_PCR4_ECCPS	EQU	0x000E0000	; ECCPS[2:0] bits (ECC page size)
FSMC_PCR4_ECCPS_0	EQU	0x00020000	; Bit 0
FSMC_PCR4_ECCPS_1	EQU	0x00040000	; Bit 1
FSMC_PCR4_ECCPS_2	EQU	0x00080000	; Bit 2

; Bit definition for FSMC_SR2 register
FSMC_SR2_IRS	EQU	0x01	; Interrupt Rising Edge status
FSMC_SR2_ILS	EQU	0x02	; Interrupt Level status
FSMC_SR2_IFS	EQU	0x04	; Interrupt Falling Edge status
FSMC_SR2_IREN	EQU	0x08	; Interrupt Rising Edge detection Enable bit
FSMC_SR2_ILEN	EQU	0x10	; Interrupt Level detection Enable bit
FSMC_SR2_IFEN	EQU	0x20	; Interrupt Falling Edge detection Enable bit
FSMC_SR2_FEMPT	EQU	0x40	; FIFO empty

; Bit definition for FSMC_SR3 register
FSMC_SR3_IRS	EQU	0x01	; Interrupt Rising Edge status
FSMC_SR3_ILS	EQU	0x02	; Interrupt Level status
FSMC_SR3_IFS	EQU	0x04	; Interrupt Falling Edge status
FSMC_SR3_IREN	EQU	0x08	; Interrupt Rising Edge detection Enable bit
FSMC_SR3_ILEN	EQU	0x10	; Interrupt Level detection Enable bit
FSMC_SR3_IFEN	EQU	0x20	; Interrupt Falling Edge detection Enable bit
FSMC_SR3_FEMPT	EQU	0x40	; FIFO empty

; Bit definition for FSMC_SR4 register
FSMC_SR4_IRS	EQU	0x01	; Interrupt Rising Edge status
FSMC_SR4_ILS	EQU	0x02	; Interrupt Level status
FSMC_SR4_IFS	EQU	0x04	; Interrupt Falling Edge status
FSMC_SR4_IREN	EQU	0x08	; Interrupt Rising Edge detection Enable bit
FSMC_SR4_ILEN	EQU	0x10	; Interrupt Level detection Enable bit
FSMC_SR4_IFEN	EQU	0x20	; Interrupt Falling Edge detection Enable bit
FSMC_SR4_FEMPT	EQU	0x40	; FIFO empty

; Bit definition for FSMC_PMEM2 register
FSMC_PMEM2_MEMSET2	EQU	0x000000FF	; MEMSET2[7:0] bits (Common memory 2 setup time)
FSMC_PMEM2_MEMSET2_0	EQU	0x00000001	; Bit 0
FSMC_PMEM2_MEMSET2_1	EQU	0x00000002	; Bit 1
FSMC_PMEM2_MEMSET2_2	EQU	0x00000004	; Bit 2
FSMC_PMEM2_MEMSET2_3	EQU	0x00000008	; Bit 3
FSMC_PMEM2_MEMSET2_4	EQU	0x00000010	; Bit 4
FSMC_PMEM2_MEMSET2_5	EQU	0x00000020	; Bit 5
FSMC_PMEM2_MEMSET2_6	EQU	0x00000040	; Bit 6
FSMC_PMEM2_MEMSET2_7	EQU	0x00000080	; Bit 7

FSMC_PMEM2_MEMWAIT2	EQU	0x0000FF00	; MEMWAIT2[7:0] bits (Common memory 2 wait time)
FSMC_PMEM2_MEMWAIT2_0	EQU	0x00000100	; Bit 0
FSMC_PMEM2_MEMWAIT2_1	EQU	0x00000200	; Bit 1
FSMC_PMEM2_MEMWAIT2_2	EQU	0x00000400	; Bit 2
FSMC_PMEM2_MEMWAIT2_3	EQU	0x00000800	; Bit 3
FSMC_PMEM2_MEMWAIT2_4	EQU	0x00001000	; Bit 4
FSMC_PMEM2_MEMWAIT2_5	EQU	0x00002000	; Bit 5
FSMC_PMEM2_MEMWAIT2_6	EQU	0x00004000	; Bit 6
FSMC_PMEM2_MEMWAIT2_7	EQU	0x00008000	; Bit 7

FSMC_PMEM2_MEMHOLD2	EQU	0x00FF0000	; MEMHOLD2[7:0] bits (Common memory 2 hold time)
FSMC_PMEM2_MEMHOLD2_0	EQU	0x00010000	; Bit 0
FSMC_PMEM2_MEMHOLD2_1	EQU	0x00020000	; Bit 1
FSMC_PMEM2_MEMHOLD2_2	EQU	0x00040000	; Bit 2
FSMC_PMEM2_MEMHOLD2_3	EQU	0x00080000	; Bit 3
FSMC_PMEM2_MEMHOLD2_4	EQU	0x00100000	; Bit 4
FSMC_PMEM2_MEMHOLD2_5	EQU	0x00200000	; Bit 5
FSMC_PMEM2_MEMHOLD2_6	EQU	0x00400000	; Bit 6
FSMC_PMEM2_MEMHOLD2_7	EQU	0x00800000	; Bit 7

FSMC_PMEM2_MEMHIZ2	EQU	0xFF000000	; MEMHIZ2[7:0] bits (Common memory 2 databus HiZ time)
FSMC_PMEM2_MEMHIZ2_0	EQU	0x01000000	; Bit 0
FSMC_PMEM2_MEMHIZ2_1	EQU	0x02000000	; Bit 1
FSMC_PMEM2_MEMHIZ2_2	EQU	0x04000000	; Bit 2
FSMC_PMEM2_MEMHIZ2_3	EQU	0x08000000	; Bit 3
FSMC_PMEM2_MEMHIZ2_4	EQU	0x10000000	; Bit 4
FSMC_PMEM2_MEMHIZ2_5	EQU	0x20000000	; Bit 5
FSMC_PMEM2_MEMHIZ2_6	EQU	0x40000000	; Bit 6
FSMC_PMEM2_MEMHIZ2_7	EQU	0x80000000	; Bit 7

; Bit definition for FSMC_PMEM3 register
FSMC_PMEM3_MEMSET3	EQU	0x000000FF	; MEMSET3[7:0] bits (Common memory 3 setup time)
FSMC_PMEM3_MEMSET3_0	EQU	0x00000001	; Bit 0
FSMC_PMEM3_MEMSET3_1	EQU	0x00000002	; Bit 1
FSMC_PMEM3_MEMSET3_2	EQU	0x00000004	; Bit 2
FSMC_PMEM3_MEMSET3_3	EQU	0x00000008	; Bit 3
FSMC_PMEM3_MEMSET3_4	EQU	0x00000010	; Bit 4
FSMC_PMEM3_MEMSET3_5	EQU	0x00000020	; Bit 5
FSMC_PMEM3_MEMSET3_6	EQU	0x00000040	; Bit 6
FSMC_PMEM3_MEMSET3_7	EQU	0x00000080	; Bit 7

FSMC_PMEM3_MEMWAIT3	EQU	0x0000FF00	; MEMWAIT3[7:0] bits (Common memory 3 wait time)
FSMC_PMEM3_MEMWAIT3_0	EQU	0x00000100	; Bit 0
FSMC_PMEM3_MEMWAIT3_1	EQU	0x00000200	; Bit 1
FSMC_PMEM3_MEMWAIT3_2	EQU	0x00000400	; Bit 2
FSMC_PMEM3_MEMWAIT3_3	EQU	0x00000800	; Bit 3
FSMC_PMEM3_MEMWAIT3_4	EQU	0x00001000	; Bit 4
FSMC_PMEM3_MEMWAIT3_5	EQU	0x00002000	; Bit 5
FSMC_PMEM3_MEMWAIT3_6	EQU	0x00004000	; Bit 6
FSMC_PMEM3_MEMWAIT3_7	EQU	0x00008000	; Bit 7

FSMC_PMEM3_MEMHOLD3	EQU	0x00FF0000	; MEMHOLD3[7:0] bits (Common memory 3 hold time)
FSMC_PMEM3_MEMHOLD3_0	EQU	0x00010000	; Bit 0
FSMC_PMEM3_MEMHOLD3_1	EQU	0x00020000	; Bit 1
FSMC_PMEM3_MEMHOLD3_2	EQU	0x00040000	; Bit 2
FSMC_PMEM3_MEMHOLD3_3	EQU	0x00080000	; Bit 3
FSMC_PMEM3_MEMHOLD3_4	EQU	0x00100000	; Bit 4
FSMC_PMEM3_MEMHOLD3_5	EQU	0x00200000	; Bit 5
FSMC_PMEM3_MEMHOLD3_6	EQU	0x00400000	; Bit 6
FSMC_PMEM3_MEMHOLD3_7	EQU	0x00800000	; Bit 7

FSMC_PMEM3_MEMHIZ3	EQU	0xFF000000	; MEMHIZ3[7:0] bits (Common memory 3 databus HiZ time)
FSMC_PMEM3_MEMHIZ3_0	EQU	0x01000000	; Bit 0
FSMC_PMEM3_MEMHIZ3_1	EQU	0x02000000	; Bit 1
FSMC_PMEM3_MEMHIZ3_2	EQU	0x04000000	; Bit 2
FSMC_PMEM3_MEMHIZ3_3	EQU	0x08000000	; Bit 3
FSMC_PMEM3_MEMHIZ3_4	EQU	0x10000000	; Bit 4
FSMC_PMEM3_MEMHIZ3_5	EQU	0x20000000	; Bit 5
FSMC_PMEM3_MEMHIZ3_6	EQU	0x40000000	; Bit 6
FSMC_PMEM3_MEMHIZ3_7	EQU	0x80000000	; Bit 7

; Bit definition for FSMC_PMEM4 register
FSMC_PMEM4_MEMSET4	EQU	0x000000FF	; MEMSET4[7:0] bits (Common memory 4 setup time)
FSMC_PMEM4_MEMSET4_0	EQU	0x00000001	; Bit 0
FSMC_PMEM4_MEMSET4_1	EQU	0x00000002	; Bit 1
FSMC_PMEM4_MEMSET4_2	EQU	0x00000004	; Bit 2
FSMC_PMEM4_MEMSET4_3	EQU	0x00000008	; Bit 3
FSMC_PMEM4_MEMSET4_4	EQU	0x00000010	; Bit 4
FSMC_PMEM4_MEMSET4_5	EQU	0x00000020	; Bit 5
FSMC_PMEM4_MEMSET4_6	EQU	0x00000040	; Bit 6
FSMC_PMEM4_MEMSET4_7	EQU	0x00000080	; Bit 7

FSMC_PMEM4_MEMWAIT4	EQU	0x0000FF00	; MEMWAIT4[7:0] bits (Common memory 4 wait time)
FSMC_PMEM4_MEMWAIT4_0	EQU	0x00000100	; Bit 0
FSMC_PMEM4_MEMWAIT4_1	EQU	0x00000200	; Bit 1
FSMC_PMEM4_MEMWAIT4_2	EQU	0x00000400	; Bit 2
FSMC_PMEM4_MEMWAIT4_3	EQU	0x00000800	; Bit 3
FSMC_PMEM4_MEMWAIT4_4	EQU	0x00001000	; Bit 4
FSMC_PMEM4_MEMWAIT4_5	EQU	0x00002000	; Bit 5
FSMC_PMEM4_MEMWAIT4_6	EQU	0x00004000	; Bit 6
FSMC_PMEM4_MEMWAIT4_7	EQU	0x00008000	; Bit 7

FSMC_PMEM4_MEMHOLD4	EQU	0x00FF0000	; MEMHOLD4[7:0] bits (Common memory 4 hold time)
FSMC_PMEM4_MEMHOLD4_0	EQU	0x00010000	; Bit 0
FSMC_PMEM4_MEMHOLD4_1	EQU	0x00020000	; Bit 1
FSMC_PMEM4_MEMHOLD4_2	EQU	0x00040000	; Bit 2
FSMC_PMEM4_MEMHOLD4_3	EQU	0x00080000	; Bit 3
FSMC_PMEM4_MEMHOLD4_4	EQU	0x00100000	; Bit 4
FSMC_PMEM4_MEMHOLD4_5	EQU	0x00200000	; Bit 5
FSMC_PMEM4_MEMHOLD4_6	EQU	0x00400000	; Bit 6
FSMC_PMEM4_MEMHOLD4_7	EQU	0x00800000	; Bit 7

FSMC_PMEM4_MEMHIZ4	EQU	0xFF000000	; MEMHIZ4[7:0] bits (Common memory 4 databus HiZ time)
FSMC_PMEM4_MEMHIZ4_0	EQU	0x01000000	; Bit 0
FSMC_PMEM4_MEMHIZ4_1	EQU	0x02000000	; Bit 1
FSMC_PMEM4_MEMHIZ4_2	EQU	0x04000000	; Bit 2
FSMC_PMEM4_MEMHIZ4_3	EQU	0x08000000	; Bit 3
FSMC_PMEM4_MEMHIZ4_4	EQU	0x10000000	; Bit 4
FSMC_PMEM4_MEMHIZ4_5	EQU	0x20000000	; Bit 5
FSMC_PMEM4_MEMHIZ4_6	EQU	0x40000000	; Bit 6
FSMC_PMEM4_MEMHIZ4_7	EQU	0x80000000	; Bit 7

; Bit definition for FSMC_PATT2 register
FSMC_PATT2_ATTSET2	EQU	0x000000FF	; ATTSET2[7:0] bits (Attribute memory 2 setup time)
FSMC_PATT2_ATTSET2_0	EQU	0x00000001	; Bit 0
FSMC_PATT2_ATTSET2_1	EQU	0x00000002	; Bit 1
FSMC_PATT2_ATTSET2_2	EQU	0x00000004	; Bit 2
FSMC_PATT2_ATTSET2_3	EQU	0x00000008	; Bit 3
FSMC_PATT2_ATTSET2_4	EQU	0x00000010	; Bit 4
FSMC_PATT2_ATTSET2_5	EQU	0x00000020	; Bit 5
FSMC_PATT2_ATTSET2_6	EQU	0x00000040	; Bit 6
FSMC_PATT2_ATTSET2_7	EQU	0x00000080	; Bit 7

FSMC_PATT2_ATTWAIT2	EQU	0x0000FF00	; ATTWAIT2[7:0] bits (Attribute memory 2 wait time)
FSMC_PATT2_ATTWAIT2_0	EQU	0x00000100	; Bit 0
FSMC_PATT2_ATTWAIT2_1	EQU	0x00000200	; Bit 1
FSMC_PATT2_ATTWAIT2_2	EQU	0x00000400	; Bit 2
FSMC_PATT2_ATTWAIT2_3	EQU	0x00000800	; Bit 3
FSMC_PATT2_ATTWAIT2_4	EQU	0x00001000	; Bit 4
FSMC_PATT2_ATTWAIT2_5	EQU	0x00002000	; Bit 5
FSMC_PATT2_ATTWAIT2_6	EQU	0x00004000	; Bit 6
FSMC_PATT2_ATTWAIT2_7	EQU	0x00008000	; Bit 7

FSMC_PATT2_ATTHOLD2	EQU	0x00FF0000	; ATTHOLD2[7:0] bits (Attribute memory 2 hold time)
FSMC_PATT2_ATTHOLD2_0	EQU	0x00010000	; Bit 0
FSMC_PATT2_ATTHOLD2_1	EQU	0x00020000	; Bit 1
FSMC_PATT2_ATTHOLD2_2	EQU	0x00040000	; Bit 2
FSMC_PATT2_ATTHOLD2_3	EQU	0x00080000	; Bit 3
FSMC_PATT2_ATTHOLD2_4	EQU	0x00100000	; Bit 4
FSMC_PATT2_ATTHOLD2_5	EQU	0x00200000	; Bit 5
FSMC_PATT2_ATTHOLD2_6	EQU	0x00400000	; Bit 6
FSMC_PATT2_ATTHOLD2_7	EQU	0x00800000	; Bit 7

FSMC_PATT2_ATTHIZ2	EQU	0xFF000000	; ATTHIZ2[7:0] bits (Attribute memory 2 databus HiZ time)
FSMC_PATT2_ATTHIZ2_0	EQU	0x01000000	; Bit 0
FSMC_PATT2_ATTHIZ2_1	EQU	0x02000000	; Bit 1
FSMC_PATT2_ATTHIZ2_2	EQU	0x04000000	; Bit 2
FSMC_PATT2_ATTHIZ2_3	EQU	0x08000000	; Bit 3
FSMC_PATT2_ATTHIZ2_4	EQU	0x10000000	; Bit 4
FSMC_PATT2_ATTHIZ2_5	EQU	0x20000000	; Bit 5
FSMC_PATT2_ATTHIZ2_6	EQU	0x40000000	; Bit 6
FSMC_PATT2_ATTHIZ2_7	EQU	0x80000000	; Bit 7

; Bit definition for FSMC_PATT3 register
FSMC_PATT3_ATTSET3	EQU	0x000000FF	; ATTSET3[7:0] bits (Attribute memory 3 setup time)
FSMC_PATT3_ATTSET3_0	EQU	0x00000001	; Bit 0
FSMC_PATT3_ATTSET3_1	EQU	0x00000002	; Bit 1
FSMC_PATT3_ATTSET3_2	EQU	0x00000004	; Bit 2
FSMC_PATT3_ATTSET3_3	EQU	0x00000008	; Bit 3
FSMC_PATT3_ATTSET3_4	EQU	0x00000010	; Bit 4
FSMC_PATT3_ATTSET3_5	EQU	0x00000020	; Bit 5
FSMC_PATT3_ATTSET3_6	EQU	0x00000040	; Bit 6
FSMC_PATT3_ATTSET3_7	EQU	0x00000080	; Bit 7

FSMC_PATT3_ATTWAIT3	EQU	0x0000FF00	; ATTWAIT3[7:0] bits (Attribute memory 3 wait time)
FSMC_PATT3_ATTWAIT3_0	EQU	0x00000100	; Bit 0
FSMC_PATT3_ATTWAIT3_1	EQU	0x00000200	; Bit 1
FSMC_PATT3_ATTWAIT3_2	EQU	0x00000400	; Bit 2
FSMC_PATT3_ATTWAIT3_3	EQU	0x00000800	; Bit 3
FSMC_PATT3_ATTWAIT3_4	EQU	0x00001000	; Bit 4
FSMC_PATT3_ATTWAIT3_5	EQU	0x00002000	; Bit 5
FSMC_PATT3_ATTWAIT3_6	EQU	0x00004000	; Bit 6
FSMC_PATT3_ATTWAIT3_7	EQU	0x00008000	; Bit 7

FSMC_PATT3_ATTHOLD3	EQU	0x00FF0000	; ATTHOLD3[7:0] bits (Attribute memory 3 hold time)
FSMC_PATT3_ATTHOLD3_0	EQU	0x00010000	; Bit 0
FSMC_PATT3_ATTHOLD3_1	EQU	0x00020000	; Bit 1
FSMC_PATT3_ATTHOLD3_2	EQU	0x00040000	; Bit 2
FSMC_PATT3_ATTHOLD3_3	EQU	0x00080000	; Bit 3
FSMC_PATT3_ATTHOLD3_4	EQU	0x00100000	; Bit 4
FSMC_PATT3_ATTHOLD3_5	EQU	0x00200000	; Bit 5
FSMC_PATT3_ATTHOLD3_6	EQU	0x00400000	; Bit 6
FSMC_PATT3_ATTHOLD3_7	EQU	0x00800000	; Bit 7

FSMC_PATT3_ATTHIZ3	EQU	0xFF000000	; ATTHIZ3[7:0] bits (Attribute memory 3 databus HiZ time)
FSMC_PATT3_ATTHIZ3_0	EQU	0x01000000	; Bit 0
FSMC_PATT3_ATTHIZ3_1	EQU	0x02000000	; Bit 1
FSMC_PATT3_ATTHIZ3_2	EQU	0x04000000	; Bit 2
FSMC_PATT3_ATTHIZ3_3	EQU	0x08000000	; Bit 3
FSMC_PATT3_ATTHIZ3_4	EQU	0x10000000	; Bit 4
FSMC_PATT3_ATTHIZ3_5	EQU	0x20000000	; Bit 5
FSMC_PATT3_ATTHIZ3_6	EQU	0x40000000	; Bit 6
FSMC_PATT3_ATTHIZ3_7	EQU	0x80000000	; Bit 7

; Bit definition for FSMC_PATT4 register
FSMC_PATT4_ATTSET4	EQU	0x000000FF	; ATTSET4[7:0] bits (Attribute memory 4 setup time)
FSMC_PATT4_ATTSET4_0	EQU	0x00000001	; Bit 0
FSMC_PATT4_ATTSET4_1	EQU	0x00000002	; Bit 1
FSMC_PATT4_ATTSET4_2	EQU	0x00000004	; Bit 2
FSMC_PATT4_ATTSET4_3	EQU	0x00000008	; Bit 3
FSMC_PATT4_ATTSET4_4	EQU	0x00000010	; Bit 4
FSMC_PATT4_ATTSET4_5	EQU	0x00000020	; Bit 5
FSMC_PATT4_ATTSET4_6	EQU	0x00000040	; Bit 6
FSMC_PATT4_ATTSET4_7	EQU	0x00000080	; Bit 7

FSMC_PATT4_ATTWAIT4	EQU	0x0000FF00	; ATTWAIT4[7:0] bits (Attribute memory 4 wait time)
FSMC_PATT4_ATTWAIT4_0	EQU	0x00000100	; Bit 0
FSMC_PATT4_ATTWAIT4_1	EQU	0x00000200	; Bit 1
FSMC_PATT4_ATTWAIT4_2	EQU	0x00000400	; Bit 2
FSMC_PATT4_ATTWAIT4_3	EQU	0x00000800	; Bit 3
FSMC_PATT4_ATTWAIT4_4	EQU	0x00001000	; Bit 4
FSMC_PATT4_ATTWAIT4_5	EQU	0x00002000	; Bit 5
FSMC_PATT4_ATTWAIT4_6	EQU	0x00004000	; Bit 6
FSMC_PATT4_ATTWAIT4_7	EQU	0x00008000	; Bit 7

FSMC_PATT4_ATTHOLD4	EQU	0x00FF0000	; ATTHOLD4[7:0] bits (Attribute memory 4 hold time)
FSMC_PATT4_ATTHOLD4_0	EQU	0x00010000	; Bit 0
FSMC_PATT4_ATTHOLD4_1	EQU	0x00020000	; Bit 1
FSMC_PATT4_ATTHOLD4_2	EQU	0x00040000	; Bit 2
FSMC_PATT4_ATTHOLD4_3	EQU	0x00080000	; Bit 3
FSMC_PATT4_ATTHOLD4_4	EQU	0x00100000	; Bit 4
FSMC_PATT4_ATTHOLD4_5	EQU	0x00200000	; Bit 5
FSMC_PATT4_ATTHOLD4_6	EQU	0x00400000	; Bit 6
FSMC_PATT4_ATTHOLD4_7	EQU	0x00800000	; Bit 7

FSMC_PATT4_ATTHIZ4	EQU	0xFF000000	; ATTHIZ4[7:0] bits (Attribute memory 4 databus HiZ time)
FSMC_PATT4_ATTHIZ4_0	EQU	0x01000000	; Bit 0
FSMC_PATT4_ATTHIZ4_1	EQU	0x02000000	; Bit 1
FSMC_PATT4_ATTHIZ4_2	EQU	0x04000000	; Bit 2
FSMC_PATT4_ATTHIZ4_3	EQU	0x08000000	; Bit 3
FSMC_PATT4_ATTHIZ4_4	EQU	0x10000000	; Bit 4
FSMC_PATT4_ATTHIZ4_5	EQU	0x20000000	; Bit 5
FSMC_PATT4_ATTHIZ4_6	EQU	0x40000000	; Bit 6
FSMC_PATT4_ATTHIZ4_7	EQU	0x80000000	; Bit 7

; Bit definition for FSMC_PIO4 register
FSMC_PIO4_IOSET4	EQU	0x000000FF	; IOSET4[7:0] bits (I/O 4 setup time)
FSMC_PIO4_IOSET4_0	EQU	0x00000001	; Bit 0
FSMC_PIO4_IOSET4_1	EQU	0x00000002	; Bit 1
FSMC_PIO4_IOSET4_2	EQU	0x00000004	; Bit 2
FSMC_PIO4_IOSET4_3	EQU	0x00000008	; Bit 3
FSMC_PIO4_IOSET4_4	EQU	0x00000010	; Bit 4
FSMC_PIO4_IOSET4_5	EQU	0x00000020	; Bit 5
FSMC_PIO4_IOSET4_6	EQU	0x00000040	; Bit 6
FSMC_PIO4_IOSET4_7	EQU	0x00000080	; Bit 7

FSMC_PIO4_IOWAIT4	EQU	0x0000FF00	; IOWAIT4[7:0] bits (I/O 4 wait time)
FSMC_PIO4_IOWAIT4_0	EQU	0x00000100	; Bit 0
FSMC_PIO4_IOWAIT4_1	EQU	0x00000200	; Bit 1
FSMC_PIO4_IOWAIT4_2	EQU	0x00000400	; Bit 2
FSMC_PIO4_IOWAIT4_3	EQU	0x00000800	; Bit 3
FSMC_PIO4_IOWAIT4_4	EQU	0x00001000	; Bit 4
FSMC_PIO4_IOWAIT4_5	EQU	0x00002000	; Bit 5
FSMC_PIO4_IOWAIT4_6	EQU	0x00004000	; Bit 6
FSMC_PIO4_IOWAIT4_7	EQU	0x00008000	; Bit 7

FSMC_PIO4_IOHOLD4	EQU	0x00FF0000	; IOHOLD4[7:0] bits (I/O 4 hold time)
FSMC_PIO4_IOHOLD4_0	EQU	0x00010000	; Bit 0
FSMC_PIO4_IOHOLD4_1	EQU	0x00020000	; Bit 1
FSMC_PIO4_IOHOLD4_2	EQU	0x00040000	; Bit 2
FSMC_PIO4_IOHOLD4_3	EQU	0x00080000	; Bit 3
FSMC_PIO4_IOHOLD4_4	EQU	0x00100000	; Bit 4
FSMC_PIO4_IOHOLD4_5	EQU	0x00200000	; Bit 5
FSMC_PIO4_IOHOLD4_6	EQU	0x00400000	; Bit 6
FSMC_PIO4_IOHOLD4_7	EQU	0x00800000	; Bit 7

FSMC_PIO4_IOHIZ4	EQU	0xFF000000	; IOHIZ4[7:0] bits (I/O 4 databus HiZ time)
FSMC_PIO4_IOHIZ4_0	EQU	0x01000000	; Bit 0
FSMC_PIO4_IOHIZ4_1	EQU	0x02000000	; Bit 1
FSMC_PIO4_IOHIZ4_2	EQU	0x04000000	; Bit 2
FSMC_PIO4_IOHIZ4_3	EQU	0x08000000	; Bit 3
FSMC_PIO4_IOHIZ4_4	EQU	0x10000000	; Bit 4
FSMC_PIO4_IOHIZ4_5	EQU	0x20000000	; Bit 5
FSMC_PIO4_IOHIZ4_6	EQU	0x40000000	; Bit 6
FSMC_PIO4_IOHIZ4_7	EQU	0x80000000	; Bit 7

; Bit definition for FSMC_ECCR2 register
FSMC_ECCR2_ECC2	EQU	0xFFFFFFFF	; ECC result

; Bit definition for FSMC_ECCR3 register
FSMC_ECCR3_ECC3	EQU	0xFFFFFFFF	; ECC result


;
; SD host Interface
;


; Bit definition for SDIO_POWER register
SDIO_POWER_PWRCTRL	EQU	0x03	; PWRCTRL[1:0] bits (Power supply control bits)
SDIO_POWER_PWRCTRL_0	EQU	0x01	; Bit 0
SDIO_POWER_PWRCTRL_1	EQU	0x02	; Bit 1

; Bit definition for SDIO_CLKCR register
SDIO_CLKCR_CLKDIV	EQU	0x00FF	; Clock divide factor
SDIO_CLKCR_CLKEN	EQU	0x0100	; Clock enable bit
SDIO_CLKCR_PWRSAV	EQU	0x0200	; Power saving configuration bit
SDIO_CLKCR_BYPASS	EQU	0x0400	; Clock divider bypass enable bit

SDIO_CLKCR_WIDBUS	EQU	0x1800	; WIDBUS[1:0] bits (Wide bus mode enable bit)
SDIO_CLKCR_WIDBUS_0	EQU	0x0800	; Bit 0
SDIO_CLKCR_WIDBUS_1	EQU	0x1000	; Bit 1

SDIO_CLKCR_NEGEDGE	EQU	0x2000	; SDIO_CK dephasing selection bit
SDIO_CLKCR_HWFC_EN	EQU	0x4000	; HW Flow Control enable

; Bit definition for SDIO_ARG register
SDIO_ARG_CMDARG	EQU	0xFFFFFFFF	; Command argument

; Bit definition for SDIO_CMD register
SDIO_CMD_CMDINDEX	EQU	0x003F	; Command Index

SDIO_CMD_WAITRESP	EQU	0x00C0	; WAITRESP[1:0] bits (Wait for response bits)
SDIO_CMD_WAITRESP_0	EQU	0x0040	; Bit 0
SDIO_CMD_WAITRESP_1	EQU	0x0080	; Bit 1

SDIO_CMD_WAITINT	EQU	0x0100	; CPSM Waits for Interrupt Request
SDIO_CMD_WAITPEND	EQU	0x0200	; CPSM Waits for ends of data transfer (CmdPend internal signal)
SDIO_CMD_CPSMEN	EQU	0x0400	; Command path state machine (CPSM) Enable bit
SDIO_CMD_SDIOSUSPEND	EQU	0x0800	; SD I/O suspend command
SDIO_CMD_ENCMDCOMPL	EQU	0x1000	; Enable CMD completion
SDIO_CMD_NIEN	EQU	0x2000	; Not Interrupt Enable
SDIO_CMD_CEATACMD	EQU	0x4000	; CE-ATA command

; Bit definition for SDIO_RESPCMD register
SDIO_RESPCMD_RESPCMD	EQU	0x3F	; Response command index

; Bit definition for SDIO_RESP0 register
SDIO_RESP0_CARDSTATUS0	EQU	0xFFFFFFFF	; Card Status

; Bit definition for SDIO_RESP1 register
SDIO_RESP1_CARDSTATUS1	EQU	0xFFFFFFFF	; Card Status

; Bit definition for SDIO_RESP2 register
SDIO_RESP2_CARDSTATUS2	EQU	0xFFFFFFFF	; Card Status

; Bit definition for SDIO_RESP3 register
SDIO_RESP3_CARDSTATUS3	EQU	0xFFFFFFFF	; Card Status

; Bit definition for SDIO_RESP4 register
SDIO_RESP4_CARDSTATUS4	EQU	0xFFFFFFFF	; Card Status

; Bit definition for SDIO_DTIMER register
SDIO_DTIMER_DATATIME	EQU	0xFFFFFFFF	; Data timeout period.

; Bit definition for SDIO_DLEN register
SDIO_DLEN_DATALENGTH	EQU	0x01FFFFFF	; Data length value

; Bit definition for SDIO_DCTRL register
SDIO_DCTRL_DTEN	EQU	0x0001	; Data transfer enabled bit
SDIO_DCTRL_DTDIR	EQU	0x0002	; Data transfer direction selection
SDIO_DCTRL_DTMODE	EQU	0x0004	; Data transfer mode selection
SDIO_DCTRL_DMAEN	EQU	0x0008	; DMA enabled bit

SDIO_DCTRL_DBLOCKSIZE	EQU	0x00F0	; DBLOCKSIZE[3:0] bits (Data block size)
SDIO_DCTRL_DBLOCKSIZE_0	EQU	0x0010	; Bit 0
SDIO_DCTRL_DBLOCKSIZE_1	EQU	0x0020	; Bit 1
SDIO_DCTRL_DBLOCKSIZE_2	EQU	0x0040	; Bit 2
SDIO_DCTRL_DBLOCKSIZE_3	EQU	0x0080	; Bit 3

SDIO_DCTRL_RWSTART	EQU	0x0100	; Read wait start
SDIO_DCTRL_RWSTOP	EQU	0x0200	; Read wait stop
SDIO_DCTRL_RWMOD	EQU	0x0400	; Read wait mode
SDIO_DCTRL_SDIOEN	EQU	0x0800	; SD I/O enable functions

; Bit definition for SDIO_DCOUNT register
SDIO_DCOUNT_DATACOUNT	EQU	0x01FFFFFF	; Data count value

; Bit definition for SDIO_STA register
SDIO_STA_CCRCFAIL	EQU	0x00000001	; Command response received (CRC check failed)
SDIO_STA_DCRCFAIL	EQU	0x00000002	; Data block sent/received (CRC check failed)
SDIO_STA_CTIMEOUT	EQU	0x00000004	; Command response timeout
SDIO_STA_DTIMEOUT	EQU	0x00000008	; Data timeout
SDIO_STA_TXUNDERR	EQU	0x00000010	; Transmit FIFO underrun error
SDIO_STA_RXOVERR	EQU	0x00000020	; Received FIFO overrun error
SDIO_STA_CMDREND	EQU	0x00000040	; Command response received (CRC check passed)
SDIO_STA_CMDSENT	EQU	0x00000080	; Command sent (no response required)
SDIO_STA_DATAEND	EQU	0x00000100	; Data end (data counter, SDIDCOUNT, is zero)
SDIO_STA_STBITERR	EQU	0x00000200	; Start bit not detected on all data signals in wide bus mode
SDIO_STA_DBCKEND	EQU	0x00000400	; Data block sent/received (CRC check passed)
SDIO_STA_CMDACT	EQU	0x00000800	; Command transfer in progress
SDIO_STA_TXACT	EQU	0x00001000	; Data transmit in progress
SDIO_STA_RXACT	EQU	0x00002000	; Data receive in progress
SDIO_STA_TXFIFOHE	EQU	0x00004000	; Transmit FIFO Half Empty: at least 8 words can be written into the FIFO
SDIO_STA_RXFIFOHF	EQU	0x00008000	; Receive FIFO Half Full: there are at least 8 words in the FIFO
SDIO_STA_TXFIFOF	EQU	0x00010000	; Transmit FIFO full
SDIO_STA_RXFIFOF	EQU	0x00020000	; Receive FIFO full
SDIO_STA_TXFIFOE	EQU	0x00040000	; Transmit FIFO empty
SDIO_STA_RXFIFOE	EQU	0x00080000	; Receive FIFO empty
SDIO_STA_TXDAVL	EQU	0x00100000	; Data available in transmit FIFO
SDIO_STA_RXDAVL	EQU	0x00200000	; Data available in receive FIFO
SDIO_STA_SDIOIT	EQU	0x00400000	; SDIO interrupt received
SDIO_STA_CEATAEND	EQU	0x00800000	; CE-ATA command completion signal received for CMD61

; Bit definition for SDIO_ICR register
SDIO_ICR_CCRCFAILC	EQU	0x00000001	; CCRCFAIL flag clear bit
SDIO_ICR_DCRCFAILC	EQU	0x00000002	; DCRCFAIL flag clear bit
SDIO_ICR_CTIMEOUTC	EQU	0x00000004	; CTIMEOUT flag clear bit
SDIO_ICR_DTIMEOUTC	EQU	0x00000008	; DTIMEOUT flag clear bit
SDIO_ICR_TXUNDERRC	EQU	0x00000010	; TXUNDERR flag clear bit
SDIO_ICR_RXOVERRC	EQU	0x00000020	; RXOVERR flag clear bit
SDIO_ICR_CMDRENDC	EQU	0x00000040	; CMDREND flag clear bit
SDIO_ICR_CMDSENTC	EQU	0x00000080	; CMDSENT flag clear bit
SDIO_ICR_DATAENDC	EQU	0x00000100	; DATAEND flag clear bit
SDIO_ICR_STBITERRC	EQU	0x00000200	; STBITERR flag clear bit
SDIO_ICR_DBCKENDC	EQU	0x00000400	; DBCKEND flag clear bit
SDIO_ICR_SDIOITC	EQU	0x00400000	; SDIOIT flag clear bit
SDIO_ICR_CEATAENDC	EQU	0x00800000	; CEATAEND flag clear bit

; Bit definition for SDIO_MASK register
SDIO_MASK_CCRCFAILIE	EQU	0x00000001	; Command CRC Fail Interrupt Enable
SDIO_MASK_DCRCFAILIE	EQU	0x00000002	; Data CRC Fail Interrupt Enable
SDIO_MASK_CTIMEOUTIE	EQU	0x00000004	; Command TimeOut Interrupt Enable
SDIO_MASK_DTIMEOUTIE	EQU	0x00000008	; Data TimeOut Interrupt Enable
SDIO_MASK_TXUNDERRIE	EQU	0x00000010	; Tx FIFO UnderRun Error Interrupt Enable
SDIO_MASK_RXOVERRIE	EQU	0x00000020	; Rx FIFO OverRun Error Interrupt Enable
SDIO_MASK_CMDRENDIE	EQU	0x00000040	; Command Response Received Interrupt Enable
SDIO_MASK_CMDSENTIE	EQU	0x00000080	; Command Sent Interrupt Enable
SDIO_MASK_DATAENDIE	EQU	0x00000100	; Data End Interrupt Enable
SDIO_MASK_STBITERRIE	EQU	0x00000200	; Start Bit Error Interrupt Enable
SDIO_MASK_DBCKENDIE	EQU	0x00000400	; Data Block End Interrupt Enable
SDIO_MASK_CMDACTIE	EQU	0x00000800	; CCommand Acting Interrupt Enable
SDIO_MASK_TXACTIE	EQU	0x00001000	; Data Transmit Acting Interrupt Enable
SDIO_MASK_RXACTIE	EQU	0x00002000	; Data receive acting interrupt enabled
SDIO_MASK_TXFIFOHEIE	EQU	0x00004000	; Tx FIFO Half Empty interrupt Enable
SDIO_MASK_RXFIFOHFIE	EQU	0x00008000	; Rx FIFO Half Full interrupt Enable
SDIO_MASK_TXFIFOFIE	EQU	0x00010000	; Tx FIFO Full interrupt Enable
SDIO_MASK_RXFIFOFIE	EQU	0x00020000	; Rx FIFO Full interrupt Enable
SDIO_MASK_TXFIFOEIE	EQU	0x00040000	; Tx FIFO Empty interrupt Enable
SDIO_MASK_RXFIFOEIE	EQU	0x00080000	; Rx FIFO Empty interrupt Enable
SDIO_MASK_TXDAVLIE	EQU	0x00100000	; Data available in Tx FIFO interrupt Enable
SDIO_MASK_RXDAVLIE	EQU	0x00200000	; Data available in Rx FIFO interrupt Enable
SDIO_MASK_SDIOITIE	EQU	0x00400000	; SDIO Mode Interrupt Received interrupt Enable
SDIO_MASK_CEATAENDIE	EQU	0x00800000	; CE-ATA command completion signal received Interrupt Enable

; Bit definition for SDIO_FIFOCNT register
SDIO_FIFOCNT_FIFOCOUNT	EQU	0x00FFFFFF	; Remaining number of words to be written to or read from the FIFO

; Bit definition for SDIO_FIFO register
SDIO_FIFO_FIFODATA	EQU	0xFFFFFFFF	; Receive and transmit FIFO data


;
; USB Device FS
;


; Endpoint-specific registers
; Bit definition for USB_EP0R register
USB_EP0R_EA	EQU	0x000F	; Endpoint Address

USB_EP0R_STAT_TX	EQU	0x0030	; STAT_TX[1:0] bits (Status bits, for transmission transfers)
USB_EP0R_STAT_TX_0	EQU	0x0010	; Bit 0
USB_EP0R_STAT_TX_1	EQU	0x0020	; Bit 1

USB_EP0R_DTOG_TX	EQU	0x0040	; Data Toggle, for transmission transfers
USB_EP0R_CTR_TX	EQU	0x0080	; Correct Transfer for transmission
USB_EP0R_EP_KIND	EQU	0x0100	; Endpoint Kind

USB_EP0R_EP_TYPE	EQU	0x0600	; EP_TYPE[1:0] bits (Endpoint type)
USB_EP0R_EP_TYPE_0	EQU	0x0200	; Bit 0
USB_EP0R_EP_TYPE_1	EQU	0x0400	; Bit 1

USB_EP0R_SETUP	EQU	0x0800	; Setup transaction completed

USB_EP0R_STAT_RX	EQU	0x3000	; STAT_RX[1:0] bits (Status bits, for reception transfers)
USB_EP0R_STAT_RX_0	EQU	0x1000	; Bit 0
USB_EP0R_STAT_RX_1	EQU	0x2000	; Bit 1

USB_EP0R_DTOG_RX	EQU	0x4000	; Data Toggle, for reception transfers
USB_EP0R_CTR_RX	EQU	0x8000	; Correct Transfer for reception

; Bit definition for USB_EP1R register
USB_EP1R_EA	EQU	0x000F	; Endpoint Address

USB_EP1R_STAT_TX	EQU	0x0030	; STAT_TX[1:0] bits (Status bits, for transmission transfers)
USB_EP1R_STAT_TX_0	EQU	0x0010	; Bit 0
USB_EP1R_STAT_TX_1	EQU	0x0020	; Bit 1

USB_EP1R_DTOG_TX	EQU	0x0040	; Data Toggle, for transmission transfers
USB_EP1R_CTR_TX	EQU	0x0080	; Correct Transfer for transmission
USB_EP1R_EP_KIND	EQU	0x0100	; Endpoint Kind

USB_EP1R_EP_TYPE	EQU	0x0600	; EP_TYPE[1:0] bits (Endpoint type)
USB_EP1R_EP_TYPE_0	EQU	0x0200	; Bit 0
USB_EP1R_EP_TYPE_1	EQU	0x0400	; Bit 1

USB_EP1R_SETUP	EQU	0x0800	; Setup transaction completed

USB_EP1R_STAT_RX	EQU	0x3000	; STAT_RX[1:0] bits (Status bits, for reception transfers)
USB_EP1R_STAT_RX_0	EQU	0x1000	; Bit 0
USB_EP1R_STAT_RX_1	EQU	0x2000	; Bit 1

USB_EP1R_DTOG_RX	EQU	0x4000	; Data Toggle, for reception transfers
USB_EP1R_CTR_RX	EQU	0x8000	; Correct Transfer for reception

; Bit definition for USB_EP2R register
USB_EP2R_EA	EQU	0x000F	; Endpoint Address

USB_EP2R_STAT_TX	EQU	0x0030	; STAT_TX[1:0] bits (Status bits, for transmission transfers)
USB_EP2R_STAT_TX_0	EQU	0x0010	; Bit 0
USB_EP2R_STAT_TX_1	EQU	0x0020	; Bit 1

USB_EP2R_DTOG_TX	EQU	0x0040	; Data Toggle, for transmission transfers
USB_EP2R_CTR_TX	EQU	0x0080	; Correct Transfer for transmission
USB_EP2R_EP_KIND	EQU	0x0100	; Endpoint Kind

USB_EP2R_EP_TYPE	EQU	0x0600	; EP_TYPE[1:0] bits (Endpoint type)
USB_EP2R_EP_TYPE_0	EQU	0x0200	; Bit 0
USB_EP2R_EP_TYPE_1	EQU	0x0400	; Bit 1

USB_EP2R_SETUP	EQU	0x0800	; Setup transaction completed

USB_EP2R_STAT_RX	EQU	0x3000	; STAT_RX[1:0] bits (Status bits, for reception transfers)
USB_EP2R_STAT_RX_0	EQU	0x1000	; Bit 0
USB_EP2R_STAT_RX_1	EQU	0x2000	; Bit 1

USB_EP2R_DTOG_RX	EQU	0x4000	; Data Toggle, for reception transfers
USB_EP2R_CTR_RX	EQU	0x8000	; Correct Transfer for reception

; Bit definition for USB_EP3R register
USB_EP3R_EA	EQU	0x000F	; Endpoint Address

USB_EP3R_STAT_TX	EQU	0x0030	; STAT_TX[1:0] bits (Status bits, for transmission transfers)
USB_EP3R_STAT_TX_0	EQU	0x0010	; Bit 0
USB_EP3R_STAT_TX_1	EQU	0x0020	; Bit 1

USB_EP3R_DTOG_TX	EQU	0x0040	; Data Toggle, for transmission transfers
USB_EP3R_CTR_TX	EQU	0x0080	; Correct Transfer for transmission
USB_EP3R_EP_KIND	EQU	0x0100	; Endpoint Kind

USB_EP3R_EP_TYPE	EQU	0x0600	; EP_TYPE[1:0] bits (Endpoint type)
USB_EP3R_EP_TYPE_0	EQU	0x0200	; Bit 0
USB_EP3R_EP_TYPE_1	EQU	0x0400	; Bit 1

USB_EP3R_SETUP	EQU	0x0800	; Setup transaction completed

USB_EP3R_STAT_RX	EQU	0x3000	; STAT_RX[1:0] bits (Status bits, for reception transfers)
USB_EP3R_STAT_RX_0	EQU	0x1000	; Bit 0
USB_EP3R_STAT_RX_1	EQU	0x2000	; Bit 1

USB_EP3R_DTOG_RX	EQU	0x4000	; Data Toggle, for reception transfers
USB_EP3R_CTR_RX	EQU	0x8000	; Correct Transfer for reception

; Bit definition for USB_EP4R register
USB_EP4R_EA	EQU	0x000F	; Endpoint Address

USB_EP4R_STAT_TX	EQU	0x0030	; STAT_TX[1:0] bits (Status bits, for transmission transfers)
USB_EP4R_STAT_TX_0	EQU	0x0010	; Bit 0
USB_EP4R_STAT_TX_1	EQU	0x0020	; Bit 1

USB_EP4R_DTOG_TX	EQU	0x0040	; Data Toggle, for transmission transfers
USB_EP4R_CTR_TX	EQU	0x0080	; Correct Transfer for transmission
USB_EP4R_EP_KIND	EQU	0x0100	; Endpoint Kind

USB_EP4R_EP_TYPE	EQU	0x0600	; EP_TYPE[1:0] bits (Endpoint type)
USB_EP4R_EP_TYPE_0	EQU	0x0200	; Bit 0
USB_EP4R_EP_TYPE_1	EQU	0x0400	; Bit 1

USB_EP4R_SETUP	EQU	0x0800	; Setup transaction completed

USB_EP4R_STAT_RX	EQU	0x3000	; STAT_RX[1:0] bits (Status bits, for reception transfers)
USB_EP4R_STAT_RX_0	EQU	0x1000	; Bit 0
USB_EP4R_STAT_RX_1	EQU	0x2000	; Bit 1

USB_EP4R_DTOG_RX	EQU	0x4000	; Data Toggle, for reception transfers
USB_EP4R_CTR_RX	EQU	0x8000	; Correct Transfer for reception

; Bit definition for USB_EP5R register
USB_EP5R_EA	EQU	0x000F	; Endpoint Address

USB_EP5R_STAT_TX	EQU	0x0030	; STAT_TX[1:0] bits (Status bits, for transmission transfers)
USB_EP5R_STAT_TX_0	EQU	0x0010	; Bit 0
USB_EP5R_STAT_TX_1	EQU	0x0020	; Bit 1

USB_EP5R_DTOG_TX	EQU	0x0040	; Data Toggle, for transmission transfers
USB_EP5R_CTR_TX	EQU	0x0080	; Correct Transfer for transmission
USB_EP5R_EP_KIND	EQU	0x0100	; Endpoint Kind

USB_EP5R_EP_TYPE	EQU	0x0600	; EP_TYPE[1:0] bits (Endpoint type)
USB_EP5R_EP_TYPE_0	EQU	0x0200	; Bit 0
USB_EP5R_EP_TYPE_1	EQU	0x0400	; Bit 1

USB_EP5R_SETUP	EQU	0x0800	; Setup transaction completed

USB_EP5R_STAT_RX	EQU	0x3000	; STAT_RX[1:0] bits (Status bits, for reception transfers)
USB_EP5R_STAT_RX_0	EQU	0x1000	; Bit 0
USB_EP5R_STAT_RX_1	EQU	0x2000	; Bit 1

USB_EP5R_DTOG_RX	EQU	0x4000	; Data Toggle, for reception transfers
USB_EP5R_CTR_RX	EQU	0x8000	; Correct Transfer for reception

; Bit definition for USB_EP6R register
USB_EP6R_EA	EQU	0x000F	; Endpoint Address

USB_EP6R_STAT_TX	EQU	0x0030	; STAT_TX[1:0] bits (Status bits, for transmission transfers)
USB_EP6R_STAT_TX_0	EQU	0x0010	; Bit 0
USB_EP6R_STAT_TX_1	EQU	0x0020	; Bit 1

USB_EP6R_DTOG_TX	EQU	0x0040	; Data Toggle, for transmission transfers
USB_EP6R_CTR_TX	EQU	0x0080	; Correct Transfer for transmission
USB_EP6R_EP_KIND	EQU	0x0100	; Endpoint Kind

USB_EP6R_EP_TYPE	EQU	0x0600	; EP_TYPE[1:0] bits (Endpoint type)
USB_EP6R_EP_TYPE_0	EQU	0x0200	; Bit 0
USB_EP6R_EP_TYPE_1	EQU	0x0400	; Bit 1

USB_EP6R_SETUP	EQU	0x0800	; Setup transaction completed

USB_EP6R_STAT_RX	EQU	0x3000	; STAT_RX[1:0] bits (Status bits, for reception transfers)
USB_EP6R_STAT_RX_0	EQU	0x1000	; Bit 0
USB_EP6R_STAT_RX_1	EQU	0x2000	; Bit 1

USB_EP6R_DTOG_RX	EQU	0x4000	; Data Toggle, for reception transfers
USB_EP6R_CTR_RX	EQU	0x8000	; Correct Transfer for reception

; Bit definition for USB_EP7R register
USB_EP7R_EA	EQU	0x000F	; Endpoint Address

USB_EP7R_STAT_TX	EQU	0x0030	; STAT_TX[1:0] bits (Status bits, for transmission transfers)
USB_EP7R_STAT_TX_0	EQU	0x0010	; Bit 0
USB_EP7R_STAT_TX_1	EQU	0x0020	; Bit 1

USB_EP7R_DTOG_TX	EQU	0x0040	; Data Toggle, for transmission transfers
USB_EP7R_CTR_TX	EQU	0x0080	; Correct Transfer for transmission
USB_EP7R_EP_KIND	EQU	0x0100	; Endpoint Kind

USB_EP7R_EP_TYPE	EQU	0x0600	; EP_TYPE[1:0] bits (Endpoint type)
USB_EP7R_EP_TYPE_0	EQU	0x0200	; Bit 0
USB_EP7R_EP_TYPE_1	EQU	0x0400	; Bit 1

USB_EP7R_SETUP	EQU	0x0800	; Setup transaction completed

USB_EP7R_STAT_RX	EQU	0x3000	; STAT_RX[1:0] bits (Status bits, for reception transfers)
USB_EP7R_STAT_RX_0	EQU	0x1000	; Bit 0
USB_EP7R_STAT_RX_1	EQU	0x2000	; Bit 1

USB_EP7R_DTOG_RX	EQU	0x4000	; Data Toggle, for reception transfers
USB_EP7R_CTR_RX	EQU	0x8000	; Correct Transfer for reception

; Common registers
; Bit definition for USB_CNTR register
USB_CNTR_FRES	EQU	0x0001	; Force USB Reset
USB_CNTR_PDWN	EQU	0x0002	; Power down
USB_CNTR_LP_MODE	EQU	0x0004	; Low-power mode
USB_CNTR_FSUSP	EQU	0x0008	; Force suspend
USB_CNTR_RESUME	EQU	0x0010	; Resume request
USB_CNTR_ESOFM	EQU	0x0100	; Expected Start Of Frame Interrupt Mask
USB_CNTR_SOFM	EQU	0x0200	; Start Of Frame Interrupt Mask
USB_CNTR_RESETM	EQU	0x0400	; RESET Interrupt Mask
USB_CNTR_SUSPM	EQU	0x0800	; Suspend mode Interrupt Mask
USB_CNTR_WKUPM	EQU	0x1000	; Wakeup Interrupt Mask
USB_CNTR_ERRM	EQU	0x2000	; Error Interrupt Mask
USB_CNTR_PMAOVRM	EQU	0x4000	; Packet Memory Area Over / Underrun Interrupt Mask
USB_CNTR_CTRM	EQU	0x8000	; Correct Transfer Interrupt Mask

; Bit definition for USB_ISTR register
USB_ISTR_EP_ID	EQU	0x000F	; Endpoint Identifier
USB_ISTR_DIR	EQU	0x0010	; Direction of transaction
USB_ISTR_ESOF	EQU	0x0100	; Expected Start Of Frame
USB_ISTR_SOF	EQU	0x0200	; Start Of Frame
USB_ISTR_RESET	EQU	0x0400	; USB RESET request
USB_ISTR_SUSP	EQU	0x0800	; Suspend mode request
USB_ISTR_WKUP	EQU	0x1000	; Wake up
USB_ISTR_ERR	EQU	0x2000	; Error
USB_ISTR_PMAOVR	EQU	0x4000	; Packet Memory Area Over / Underrun
USB_ISTR_CTR	EQU	0x8000	; Correct Transfer

; Bit definition for USB_FNR register
USB_FNR_FN	EQU	0x07FF	; Frame Number
USB_FNR_LSOF	EQU	0x1800	; Lost SOF
USB_FNR_LCK	EQU	0x2000	; Locked
USB_FNR_RXDM	EQU	0x4000	; Receive Data - Line Status
USB_FNR_RXDP	EQU	0x8000	; Receive Data + Line Status

; Bit definition for USB_DADDR register
USB_DADDR_ADD	EQU	0x7F	; ADD[6:0] bits (Device Address)
USB_DADDR_ADD0	EQU	0x01	; Bit 0
USB_DADDR_ADD1	EQU	0x02	; Bit 1
USB_DADDR_ADD2	EQU	0x04	; Bit 2
USB_DADDR_ADD3	EQU	0x08	; Bit 3
USB_DADDR_ADD4	EQU	0x10	; Bit 4
USB_DADDR_ADD5	EQU	0x20	; Bit 5
USB_DADDR_ADD6	EQU	0x40	; Bit 6

USB_DADDR_EF	EQU	0x80	; Enable Function

; Bit definition for USB_BTABLE register
USB_BTABLE_BTABLE	EQU	0xFFF8	; Buffer Table

; Buffer descriptor table
; Bit definition for USB_ADDR0_TX register
USB_ADDR0_TX_ADDR0_TX	EQU	0xFFFE	; Transmission Buffer Address 0

; Bit definition for USB_ADDR1_TX register
USB_ADDR1_TX_ADDR1_TX	EQU	0xFFFE	; Transmission Buffer Address 1

; Bit definition for USB_ADDR2_TX register
USB_ADDR2_TX_ADDR2_TX	EQU	0xFFFE	; Transmission Buffer Address 2

; Bit definition for USB_ADDR3_TX register
USB_ADDR3_TX_ADDR3_TX	EQU	0xFFFE	; Transmission Buffer Address 3

; Bit definition for USB_ADDR4_TX register
USB_ADDR4_TX_ADDR4_TX	EQU	0xFFFE	; Transmission Buffer Address 4

; Bit definition for USB_ADDR5_TX register
USB_ADDR5_TX_ADDR5_TX	EQU	0xFFFE	; Transmission Buffer Address 5

; Bit definition for USB_ADDR6_TX register
USB_ADDR6_TX_ADDR6_TX	EQU	0xFFFE	; Transmission Buffer Address 6

; Bit definition for USB_ADDR7_TX register
USB_ADDR7_TX_ADDR7_TX	EQU	0xFFFE	; Transmission Buffer Address 7

;----------------------------------------------------------------------------

; Bit definition for USB_COUNT0_TX register
USB_COUNT0_TX_COUNT0_TX	EQU	0x03FF	; Transmission Byte Count 0

; Bit definition for USB_COUNT1_TX register
USB_COUNT1_TX_COUNT1_TX	EQU	0x03FF	; Transmission Byte Count 1

; Bit definition for USB_COUNT2_TX register
USB_COUNT2_TX_COUNT2_TX	EQU	0x03FF	; Transmission Byte Count 2

; Bit definition for USB_COUNT3_TX register
USB_COUNT3_TX_COUNT3_TX	EQU	0x03FF	; Transmission Byte Count 3

; Bit definition for USB_COUNT4_TX register
USB_COUNT4_TX_COUNT4_TX	EQU	0x03FF	; Transmission Byte Count 4

; Bit definition for USB_COUNT5_TX register
USB_COUNT5_TX_COUNT5_TX	EQU	0x03FF	; Transmission Byte Count 5

; Bit definition for USB_COUNT6_TX register
USB_COUNT6_TX_COUNT6_TX	EQU	0x03FF	; Transmission Byte Count 6

; Bit definition for USB_COUNT7_TX register
USB_COUNT7_TX_COUNT7_TX	EQU	0x03FF	; Transmission Byte Count 7

;----------------------------------------------------------------------------

; Bit definition for USB_COUNT0_TX_0 register
USB_COUNT0_TX_0_COUNT0_TX_0	EQU	0x000003FF	; Transmission Byte Count 0 (low)

; Bit definition for USB_COUNT0_TX_1 register
USB_COUNT0_TX_1_COUNT0_TX_1	EQU	0x03FF0000	; Transmission Byte Count 0 (high)

; Bit definition for USB_COUNT1_TX_0 register
USB_COUNT1_TX_0_COUNT1_TX_0	EQU	0x000003FF	; Transmission Byte Count 1 (low)

; Bit definition for USB_COUNT1_TX_1 register
USB_COUNT1_TX_1_COUNT1_TX_1	EQU	0x03FF0000	; Transmission Byte Count 1 (high)

; Bit definition for USB_COUNT2_TX_0 register
USB_COUNT2_TX_0_COUNT2_TX_0	EQU	0x000003FF	; Transmission Byte Count 2 (low)

; Bit definition for USB_COUNT2_TX_1 register
USB_COUNT2_TX_1_COUNT2_TX_1	EQU	0x03FF0000	; Transmission Byte Count 2 (high)

; Bit definition for USB_COUNT3_TX_0 register
USB_COUNT3_TX_0_COUNT3_TX_0	EQU	0x000003FF	; Transmission Byte Count 3 (low)

; Bit definition for USB_COUNT3_TX_1 register
USB_COUNT3_TX_1_COUNT3_TX_1	EQU	0x03FF0000	; Transmission Byte Count 3 (high)

; Bit definition for USB_COUNT4_TX_0 register
USB_COUNT4_TX_0_COUNT4_TX_0	EQU	0x000003FF	; Transmission Byte Count 4 (low)

; Bit definition for USB_COUNT4_TX_1 register
USB_COUNT4_TX_1_COUNT4_TX_1	EQU	0x03FF0000	; Transmission Byte Count 4 (high)

; Bit definition for USB_COUNT5_TX_0 register
USB_COUNT5_TX_0_COUNT5_TX_0	EQU	0x000003FF	; Transmission Byte Count 5 (low)

; Bit definition for USB_COUNT5_TX_1 register
USB_COUNT5_TX_1_COUNT5_TX_1	EQU	0x03FF0000	; Transmission Byte Count 5 (high)

; Bit definition for USB_COUNT6_TX_0 register
USB_COUNT6_TX_0_COUNT6_TX_0	EQU	0x000003FF	; Transmission Byte Count 6 (low)

; Bit definition for USB_COUNT6_TX_1 register
USB_COUNT6_TX_1_COUNT6_TX_1	EQU	0x03FF0000	; Transmission Byte Count 6 (high)

; Bit definition for USB_COUNT7_TX_0 register
USB_COUNT7_TX_0_COUNT7_TX_0	EQU	0x000003FF	; Transmission Byte Count 7 (low)

; Bit definition for USB_COUNT7_TX_1 register
USB_COUNT7_TX_1_COUNT7_TX_1	EQU	0x03FF0000	; Transmission Byte Count 7 (high)

;----------------------------------------------------------------------------

; Bit definition for USB_ADDR0_RX register
USB_ADDR0_RX_ADDR0_RX	EQU	0xFFFE	; Reception Buffer Address 0

; Bit definition for USB_ADDR1_RX register
USB_ADDR1_RX_ADDR1_RX	EQU	0xFFFE	; Reception Buffer Address 1

; Bit definition for USB_ADDR2_RX register
USB_ADDR2_RX_ADDR2_RX	EQU	0xFFFE	; Reception Buffer Address 2

; Bit definition for USB_ADDR3_RX register
USB_ADDR3_RX_ADDR3_RX	EQU	0xFFFE	; Reception Buffer Address 3

; Bit definition for USB_ADDR4_RX register
USB_ADDR4_RX_ADDR4_RX	EQU	0xFFFE	; Reception Buffer Address 4

; Bit definition for USB_ADDR5_RX register
USB_ADDR5_RX_ADDR5_RX	EQU	0xFFFE	; Reception Buffer Address 5

; Bit definition for USB_ADDR6_RX register
USB_ADDR6_RX_ADDR6_RX	EQU	0xFFFE	; Reception Buffer Address 6

; Bit definition for USB_ADDR7_RX register
USB_ADDR7_RX_ADDR7_RX	EQU	0xFFFE	; Reception Buffer Address 7

;----------------------------------------------------------------------------

; Bit definition for USB_COUNT0_RX register
USB_COUNT0_RX_COUNT0_RX	EQU	0x03FF	; Reception Byte Count

USB_COUNT0_RX_NUM_BLOCK	EQU	0x7C00	; NUM_BLOCK[4:0] bits (Number of blocks)
USB_COUNT0_RX_NUM_BLOCK_0	EQU	0x0400	; Bit 0
USB_COUNT0_RX_NUM_BLOCK_1	EQU	0x0800	; Bit 1
USB_COUNT0_RX_NUM_BLOCK_2	EQU	0x1000	; Bit 2
USB_COUNT0_RX_NUM_BLOCK_3	EQU	0x2000	; Bit 3
USB_COUNT0_RX_NUM_BLOCK_4	EQU	0x4000	; Bit 4

USB_COUNT0_RX_BLSIZE	EQU	0x8000	; BLock SIZE

; Bit definition for USB_COUNT1_RX register
USB_COUNT1_RX_COUNT1_RX	EQU	0x03FF	; Reception Byte Count

USB_COUNT1_RX_NUM_BLOCK	EQU	0x7C00	; NUM_BLOCK[4:0] bits (Number of blocks)
USB_COUNT1_RX_NUM_BLOCK_0	EQU	0x0400	; Bit 0
USB_COUNT1_RX_NUM_BLOCK_1	EQU	0x0800	; Bit 1
USB_COUNT1_RX_NUM_BLOCK_2	EQU	0x1000	; Bit 2
USB_COUNT1_RX_NUM_BLOCK_3	EQU	0x2000	; Bit 3
USB_COUNT1_RX_NUM_BLOCK_4	EQU	0x4000	; Bit 4

USB_COUNT1_RX_BLSIZE	EQU	0x8000	; BLock SIZE

; Bit definition for USB_COUNT2_RX register
USB_COUNT2_RX_COUNT2_RX	EQU	0x03FF	; Reception Byte Count

USB_COUNT2_RX_NUM_BLOCK	EQU	0x7C00	; NUM_BLOCK[4:0] bits (Number of blocks)
USB_COUNT2_RX_NUM_BLOCK_0	EQU	0x0400	; Bit 0
USB_COUNT2_RX_NUM_BLOCK_1	EQU	0x0800	; Bit 1
USB_COUNT2_RX_NUM_BLOCK_2	EQU	0x1000	; Bit 2
USB_COUNT2_RX_NUM_BLOCK_3	EQU	0x2000	; Bit 3
USB_COUNT2_RX_NUM_BLOCK_4	EQU	0x4000	; Bit 4

USB_COUNT2_RX_BLSIZE	EQU	0x8000	; BLock SIZE

; Bit definition for USB_COUNT3_RX register
USB_COUNT3_RX_COUNT3_RX	EQU	0x03FF	; Reception Byte Count

USB_COUNT3_RX_NUM_BLOCK	EQU	0x7C00	; NUM_BLOCK[4:0] bits (Number of blocks)
USB_COUNT3_RX_NUM_BLOCK_0	EQU	0x0400	; Bit 0
USB_COUNT3_RX_NUM_BLOCK_1	EQU	0x0800	; Bit 1
USB_COUNT3_RX_NUM_BLOCK_2	EQU	0x1000	; Bit 2
USB_COUNT3_RX_NUM_BLOCK_3	EQU	0x2000	; Bit 3
USB_COUNT3_RX_NUM_BLOCK_4	EQU	0x4000	; Bit 4

USB_COUNT3_RX_BLSIZE	EQU	0x8000	; BLock SIZE

; Bit definition for USB_COUNT4_RX register
USB_COUNT4_RX_COUNT4_RX	EQU	0x03FF	; Reception Byte Count

USB_COUNT4_RX_NUM_BLOCK	EQU	0x7C00	; NUM_BLOCK[4:0] bits (Number of blocks)
USB_COUNT4_RX_NUM_BLOCK_0	EQU	0x0400	; Bit 0
USB_COUNT4_RX_NUM_BLOCK_1	EQU	0x0800	; Bit 1
USB_COUNT4_RX_NUM_BLOCK_2	EQU	0x1000	; Bit 2
USB_COUNT4_RX_NUM_BLOCK_3	EQU	0x2000	; Bit 3
USB_COUNT4_RX_NUM_BLOCK_4	EQU	0x4000	; Bit 4

USB_COUNT4_RX_BLSIZE	EQU	0x8000	; BLock SIZE

; Bit definition for USB_COUNT5_RX register
USB_COUNT5_RX_COUNT5_RX	EQU	0x03FF	; Reception Byte Count

USB_COUNT5_RX_NUM_BLOCK	EQU	0x7C00	; NUM_BLOCK[4:0] bits (Number of blocks)
USB_COUNT5_RX_NUM_BLOCK_0	EQU	0x0400	; Bit 0
USB_COUNT5_RX_NUM_BLOCK_1	EQU	0x0800	; Bit 1
USB_COUNT5_RX_NUM_BLOCK_2	EQU	0x1000	; Bit 2
USB_COUNT5_RX_NUM_BLOCK_3	EQU	0x2000	; Bit 3
USB_COUNT5_RX_NUM_BLOCK_4	EQU	0x4000	; Bit 4

USB_COUNT5_RX_BLSIZE	EQU	0x8000	; BLock SIZE

; Bit definition for USB_COUNT6_RX register
USB_COUNT6_RX_COUNT6_RX	EQU	0x03FF	; Reception Byte Count

USB_COUNT6_RX_NUM_BLOCK	EQU	0x7C00	; NUM_BLOCK[4:0] bits (Number of blocks)
USB_COUNT6_RX_NUM_BLOCK_0	EQU	0x0400	; Bit 0
USB_COUNT6_RX_NUM_BLOCK_1	EQU	0x0800	; Bit 1
USB_COUNT6_RX_NUM_BLOCK_2	EQU	0x1000	; Bit 2
USB_COUNT6_RX_NUM_BLOCK_3	EQU	0x2000	; Bit 3
USB_COUNT6_RX_NUM_BLOCK_4	EQU	0x4000	; Bit 4

USB_COUNT6_RX_BLSIZE	EQU	0x8000	; BLock SIZE

; Bit definition for USB_COUNT7_RX register
USB_COUNT7_RX_COUNT7_RX	EQU	0x03FF	; Reception Byte Count

USB_COUNT7_RX_NUM_BLOCK	EQU	0x7C00	; NUM_BLOCK[4:0] bits (Number of blocks)
USB_COUNT7_RX_NUM_BLOCK_0	EQU	0x0400	; Bit 0
USB_COUNT7_RX_NUM_BLOCK_1	EQU	0x0800	; Bit 1
USB_COUNT7_RX_NUM_BLOCK_2	EQU	0x1000	; Bit 2
USB_COUNT7_RX_NUM_BLOCK_3	EQU	0x2000	; Bit 3
USB_COUNT7_RX_NUM_BLOCK_4	EQU	0x4000	; Bit 4

USB_COUNT7_RX_BLSIZE	EQU	0x8000	; BLock SIZE

;----------------------------------------------------------------------------

; Bit definition for USB_COUNT0_RX_0 register
USB_COUNT0_RX_0_COUNT0_RX_0	EQU	0x000003FF	; Reception Byte Count (low)

USB_COUNT0_RX_0_NUM_BLOCK_0	EQU	0x00007C00	; NUM_BLOCK_0[4:0] bits (Number of blocks) (low)
USB_COUNT0_RX_0_NUM_BLOCK_0_0	EQU	0x00000400	; Bit 0
USB_COUNT0_RX_0_NUM_BLOCK_0_1	EQU	0x00000800	; Bit 1
USB_COUNT0_RX_0_NUM_BLOCK_0_2	EQU	0x00001000	; Bit 2
USB_COUNT0_RX_0_NUM_BLOCK_0_3	EQU	0x00002000	; Bit 3
USB_COUNT0_RX_0_NUM_BLOCK_0_4	EQU	0x00004000	; Bit 4

USB_COUNT0_RX_0_BLSIZE_0	EQU	0x00008000	; BLock SIZE (low)

; Bit definition for USB_COUNT0_RX_1 register
USB_COUNT0_RX_1_COUNT0_RX_1	EQU	0x03FF0000	; Reception Byte Count (high)

USB_COUNT0_RX_1_NUM_BLOCK_1	EQU	0x7C000000	; NUM_BLOCK_1[4:0] bits (Number of blocks) (high)
USB_COUNT0_RX_1_NUM_BLOCK_1_0	EQU	0x04000000	; Bit 1
USB_COUNT0_RX_1_NUM_BLOCK_1_1	EQU	0x08000000	; Bit 1
USB_COUNT0_RX_1_NUM_BLOCK_1_2	EQU	0x10000000	; Bit 2
USB_COUNT0_RX_1_NUM_BLOCK_1_3	EQU	0x20000000	; Bit 3
USB_COUNT0_RX_1_NUM_BLOCK_1_4	EQU	0x40000000	; Bit 4

USB_COUNT0_RX_1_BLSIZE_1	EQU	0x80000000	; BLock SIZE (high)

; Bit definition for USB_COUNT1_RX_0 register
USB_COUNT1_RX_0_COUNT1_RX_0	EQU	0x000003FF	; Reception Byte Count (low)

USB_COUNT1_RX_0_NUM_BLOCK_0	EQU	0x00007C00	; NUM_BLOCK_0[4:0] bits (Number of blocks) (low)
USB_COUNT1_RX_0_NUM_BLOCK_0_0	EQU	0x00000400	; Bit 0
USB_COUNT1_RX_0_NUM_BLOCK_0_1	EQU	0x00000800	; Bit 1
USB_COUNT1_RX_0_NUM_BLOCK_0_2	EQU	0x00001000	; Bit 2
USB_COUNT1_RX_0_NUM_BLOCK_0_3	EQU	0x00002000	; Bit 3
USB_COUNT1_RX_0_NUM_BLOCK_0_4	EQU	0x00004000	; Bit 4

USB_COUNT1_RX_0_BLSIZE_0	EQU	0x00008000	; BLock SIZE (low)

; Bit definition for USB_COUNT1_RX_1 register
USB_COUNT1_RX_1_COUNT1_RX_1	EQU	0x03FF0000	; Reception Byte Count (high)

USB_COUNT1_RX_1_NUM_BLOCK_1	EQU	0x7C000000	; NUM_BLOCK_1[4:0] bits (Number of blocks) (high)
USB_COUNT1_RX_1_NUM_BLOCK_1_0	EQU	0x04000000	; Bit 0
USB_COUNT1_RX_1_NUM_BLOCK_1_1	EQU	0x08000000	; Bit 1
USB_COUNT1_RX_1_NUM_BLOCK_1_2	EQU	0x10000000	; Bit 2
USB_COUNT1_RX_1_NUM_BLOCK_1_3	EQU	0x20000000	; Bit 3
USB_COUNT1_RX_1_NUM_BLOCK_1_4	EQU	0x40000000	; Bit 4

USB_COUNT1_RX_1_BLSIZE_1	EQU	0x80000000	; BLock SIZE (high)

; Bit definition for USB_COUNT2_RX_0 register
USB_COUNT2_RX_0_COUNT2_RX_0	EQU	0x000003FF	; Reception Byte Count (low)

USB_COUNT2_RX_0_NUM_BLOCK_0	EQU	0x00007C00	; NUM_BLOCK_0[4:0] bits (Number of blocks) (low)
USB_COUNT2_RX_0_NUM_BLOCK_0_0	EQU	0x00000400	; Bit 0
USB_COUNT2_RX_0_NUM_BLOCK_0_1	EQU	0x00000800	; Bit 1
USB_COUNT2_RX_0_NUM_BLOCK_0_2	EQU	0x00001000	; Bit 2
USB_COUNT2_RX_0_NUM_BLOCK_0_3	EQU	0x00002000	; Bit 3
USB_COUNT2_RX_0_NUM_BLOCK_0_4	EQU	0x00004000	; Bit 4

USB_COUNT2_RX_0_BLSIZE_0	EQU	0x00008000	; BLock SIZE (low)

; Bit definition for USB_COUNT2_RX_1 register
USB_COUNT2_RX_1_COUNT2_RX_1	EQU	0x03FF0000	; Reception Byte Count (high)

USB_COUNT2_RX_1_NUM_BLOCK_1	EQU	0x7C000000	; NUM_BLOCK_1[4:0] bits (Number of blocks) (high)
USB_COUNT2_RX_1_NUM_BLOCK_1_0	EQU	0x04000000	; Bit 0
USB_COUNT2_RX_1_NUM_BLOCK_1_1	EQU	0x08000000	; Bit 1
USB_COUNT2_RX_1_NUM_BLOCK_1_2	EQU	0x10000000	; Bit 2
USB_COUNT2_RX_1_NUM_BLOCK_1_3	EQU	0x20000000	; Bit 3
USB_COUNT2_RX_1_NUM_BLOCK_1_4	EQU	0x40000000	; Bit 4

USB_COUNT2_RX_1_BLSIZE_1	EQU	0x80000000	; BLock SIZE (high)

; Bit definition for USB_COUNT3_RX_0 register
USB_COUNT3_RX_0_COUNT3_RX_0	EQU	0x000003FF	; Reception Byte Count (low)

USB_COUNT3_RX_0_NUM_BLOCK_0	EQU	0x00007C00	; NUM_BLOCK_0[4:0] bits (Number of blocks) (low)
USB_COUNT3_RX_0_NUM_BLOCK_0_0	EQU	0x00000400	; Bit 0
USB_COUNT3_RX_0_NUM_BLOCK_0_1	EQU	0x00000800	; Bit 1
USB_COUNT3_RX_0_NUM_BLOCK_0_2	EQU	0x00001000	; Bit 2
USB_COUNT3_RX_0_NUM_BLOCK_0_3	EQU	0x00002000	; Bit 3
USB_COUNT3_RX_0_NUM_BLOCK_0_4	EQU	0x00004000	; Bit 4

USB_COUNT3_RX_0_BLSIZE_0	EQU	0x00008000	; BLock SIZE (low)

; Bit definition for USB_COUNT3_RX_1 register
USB_COUNT3_RX_1_COUNT3_RX_1	EQU	0x03FF0000	; Reception Byte Count (high)

USB_COUNT3_RX_1_NUM_BLOCK_1	EQU	0x7C000000	; NUM_BLOCK_1[4:0] bits (Number of blocks) (high)
USB_COUNT3_RX_1_NUM_BLOCK_1_0	EQU	0x04000000	; Bit 0
USB_COUNT3_RX_1_NUM_BLOCK_1_1	EQU	0x08000000	; Bit 1
USB_COUNT3_RX_1_NUM_BLOCK_1_2	EQU	0x10000000	; Bit 2
USB_COUNT3_RX_1_NUM_BLOCK_1_3	EQU	0x20000000	; Bit 3
USB_COUNT3_RX_1_NUM_BLOCK_1_4	EQU	0x40000000	; Bit 4

USB_COUNT3_RX_1_BLSIZE_1	EQU	0x80000000	; BLock SIZE (high)

; Bit definition for USB_COUNT4_RX_0 register
USB_COUNT4_RX_0_COUNT4_RX_0	EQU	0x000003FF	; Reception Byte Count (low)

USB_COUNT4_RX_0_NUM_BLOCK_0	EQU	0x00007C00	; NUM_BLOCK_0[4:0] bits (Number of blocks) (low)
USB_COUNT4_RX_0_NUM_BLOCK_0_0	EQU	0x00000400	; Bit 0
USB_COUNT4_RX_0_NUM_BLOCK_0_1	EQU	0x00000800	; Bit 1
USB_COUNT4_RX_0_NUM_BLOCK_0_2	EQU	0x00001000	; Bit 2
USB_COUNT4_RX_0_NUM_BLOCK_0_3	EQU	0x00002000	; Bit 3
USB_COUNT4_RX_0_NUM_BLOCK_0_4	EQU	0x00004000	; Bit 4

USB_COUNT4_RX_0_BLSIZE_0	EQU	0x00008000	; BLock SIZE (low)

; Bit definition for USB_COUNT4_RX_1 register
USB_COUNT4_RX_1_COUNT4_RX_1	EQU	0x03FF0000	; Reception Byte Count (high)

USB_COUNT4_RX_1_NUM_BLOCK_1	EQU	0x7C000000	; NUM_BLOCK_1[4:0] bits (Number of blocks) (high)
USB_COUNT4_RX_1_NUM_BLOCK_1_0	EQU	0x04000000	; Bit 0
USB_COUNT4_RX_1_NUM_BLOCK_1_1	EQU	0x08000000	; Bit 1
USB_COUNT4_RX_1_NUM_BLOCK_1_2	EQU	0x10000000	; Bit 2
USB_COUNT4_RX_1_NUM_BLOCK_1_3	EQU	0x20000000	; Bit 3
USB_COUNT4_RX_1_NUM_BLOCK_1_4	EQU	0x40000000	; Bit 4

USB_COUNT4_RX_1_BLSIZE_1	EQU	0x80000000	; BLock SIZE (high)

; Bit definition for USB_COUNT5_RX_0 register
USB_COUNT5_RX_0_COUNT5_RX_0	EQU	0x000003FF	; Reception Byte Count (low)

USB_COUNT5_RX_0_NUM_BLOCK_0	EQU	0x00007C00	; NUM_BLOCK_0[4:0] bits (Number of blocks) (low)
USB_COUNT5_RX_0_NUM_BLOCK_0_0	EQU	0x00000400	; Bit 0
USB_COUNT5_RX_0_NUM_BLOCK_0_1	EQU	0x00000800	; Bit 1
USB_COUNT5_RX_0_NUM_BLOCK_0_2	EQU	0x00001000	; Bit 2
USB_COUNT5_RX_0_NUM_BLOCK_0_3	EQU	0x00002000	; Bit 3
USB_COUNT5_RX_0_NUM_BLOCK_0_4	EQU	0x00004000	; Bit 4

USB_COUNT5_RX_0_BLSIZE_0	EQU	0x00008000	; BLock SIZE (low)

; Bit definition for USB_COUNT5_RX_1 register
USB_COUNT5_RX_1_COUNT5_RX_1	EQU	0x03FF0000	; Reception Byte Count (high)

USB_COUNT5_RX_1_NUM_BLOCK_1	EQU	0x7C000000	; NUM_BLOCK_1[4:0] bits (Number of blocks) (high)
USB_COUNT5_RX_1_NUM_BLOCK_1_0	EQU	0x04000000	; Bit 0
USB_COUNT5_RX_1_NUM_BLOCK_1_1	EQU	0x08000000	; Bit 1
USB_COUNT5_RX_1_NUM_BLOCK_1_2	EQU	0x10000000	; Bit 2
USB_COUNT5_RX_1_NUM_BLOCK_1_3	EQU	0x20000000	; Bit 3
USB_COUNT5_RX_1_NUM_BLOCK_1_4	EQU	0x40000000	; Bit 4

USB_COUNT5_RX_1_BLSIZE_1	EQU	0x80000000	; BLock SIZE (high)

; Bit definition for USB_COUNT6_RX_0 register
USB_COUNT6_RX_0_COUNT6_RX_0	EQU	0x000003FF	; Reception Byte Count (low)

USB_COUNT6_RX_0_NUM_BLOCK_0	EQU	0x00007C00	; NUM_BLOCK_0[4:0] bits (Number of blocks) (low)
USB_COUNT6_RX_0_NUM_BLOCK_0_0	EQU	0x00000400	; Bit 0
USB_COUNT6_RX_0_NUM_BLOCK_0_1	EQU	0x00000800	; Bit 1
USB_COUNT6_RX_0_NUM_BLOCK_0_2	EQU	0x00001000	; Bit 2
USB_COUNT6_RX_0_NUM_BLOCK_0_3	EQU	0x00002000	; Bit 3
USB_COUNT6_RX_0_NUM_BLOCK_0_4	EQU	0x00004000	; Bit 4

USB_COUNT6_RX_0_BLSIZE_0	EQU	0x00008000	; BLock SIZE (low)

; Bit definition for USB_COUNT6_RX_1 register
USB_COUNT6_RX_1_COUNT6_RX_1	EQU	0x03FF0000	; Reception Byte Count (high)

USB_COUNT6_RX_1_NUM_BLOCK_1	EQU	0x7C000000	; NUM_BLOCK_1[4:0] bits (Number of blocks) (high)
USB_COUNT6_RX_1_NUM_BLOCK_1_0	EQU	0x04000000	; Bit 0
USB_COUNT6_RX_1_NUM_BLOCK_1_1	EQU	0x08000000	; Bit 1
USB_COUNT6_RX_1_NUM_BLOCK_1_2	EQU	0x10000000	; Bit 2
USB_COUNT6_RX_1_NUM_BLOCK_1_3	EQU	0x20000000	; Bit 3
USB_COUNT6_RX_1_NUM_BLOCK_1_4	EQU	0x40000000	; Bit 4

USB_COUNT6_RX_1_BLSIZE_1	EQU	0x80000000	; BLock SIZE (high)

; Bit definition for USB_COUNT7_RX_0 register
USB_COUNT7_RX_0_COUNT7_RX_0	EQU	0x000003FF	; Reception Byte Count (low)

USB_COUNT7_RX_0_NUM_BLOCK_0	EQU	0x00007C00	; NUM_BLOCK_0[4:0] bits (Number of blocks) (low)
USB_COUNT7_RX_0_NUM_BLOCK_0_0	EQU	0x00000400	; Bit 0
USB_COUNT7_RX_0_NUM_BLOCK_0_1	EQU	0x00000800	; Bit 1
USB_COUNT7_RX_0_NUM_BLOCK_0_2	EQU	0x00001000	; Bit 2
USB_COUNT7_RX_0_NUM_BLOCK_0_3	EQU	0x00002000	; Bit 3
USB_COUNT7_RX_0_NUM_BLOCK_0_4	EQU	0x00004000	; Bit 4

USB_COUNT7_RX_0_BLSIZE_0	EQU	0x00008000	; BLock SIZE (low)

; Bit definition for USB_COUNT7_RX_1 register
USB_COUNT7_RX_1_COUNT7_RX_1	EQU	0x03FF0000	; Reception Byte Count (high)

USB_COUNT7_RX_1_NUM_BLOCK_1	EQU	0x7C000000	; NUM_BLOCK_1[4:0] bits (Number of blocks) (high)
USB_COUNT7_RX_1_NUM_BLOCK_1_0	EQU	0x04000000	; Bit 0
USB_COUNT7_RX_1_NUM_BLOCK_1_1	EQU	0x08000000	; Bit 1
USB_COUNT7_RX_1_NUM_BLOCK_1_2	EQU	0x10000000	; Bit 2
USB_COUNT7_RX_1_NUM_BLOCK_1_3	EQU	0x20000000	; Bit 3
USB_COUNT7_RX_1_NUM_BLOCK_1_4	EQU	0x40000000	; Bit 4

USB_COUNT7_RX_1_BLSIZE_1	EQU	0x80000000	; BLock SIZE (high)


;
; Controller Area Network
;


; CAN control and status registers
; Bit definition for CAN_MCR register
CAN_MCR_INRQ	EQU	0x0001	; Initialization Request
CAN_MCR_SLEEP	EQU	0x0002	; Sleep Mode Request
CAN_MCR_TXFP	EQU	0x0004	; Transmit FIFO Priority
CAN_MCR_RFLM	EQU	0x0008	; Receive FIFO Locked Mode
CAN_MCR_NART	EQU	0x0010	; No Automatic Retransmission
CAN_MCR_AWUM	EQU	0x0020	; Automatic Wakeup Mode
CAN_MCR_ABOM	EQU	0x0040	; Automatic Bus-Off Management
CAN_MCR_TTCM	EQU	0x0080	; Time Triggered Communication Mode
CAN_MCR_RESET	EQU	0x8000	; bxCAN software master reset

; Bit definition for CAN_MSR register
CAN_MSR_INAK	EQU	0x0001	; Initialization Acknowledge
CAN_MSR_SLAK	EQU	0x0002	; Sleep Acknowledge
CAN_MSR_ERRI	EQU	0x0004	; Error Interrupt
CAN_MSR_WKUI	EQU	0x0008	; Wakeup Interrupt
CAN_MSR_SLAKI	EQU	0x0010	; Sleep Acknowledge Interrupt
CAN_MSR_TXM	EQU	0x0100	; Transmit Mode
CAN_MSR_RXM	EQU	0x0200	; Receive Mode
CAN_MSR_SAMP	EQU	0x0400	; Last Sample Point
CAN_MSR_RX	EQU	0x0800	; CAN Rx Signal

; Bit definition for CAN_TSR register
CAN_TSR_RQCP0	EQU	0x00000001	; Request Completed Mailbox0
CAN_TSR_TXOK0	EQU	0x00000002	; Transmission OK of Mailbox0
CAN_TSR_ALST0	EQU	0x00000004	; Arbitration Lost for Mailbox0
CAN_TSR_TERR0	EQU	0x00000008	; Transmission Error of Mailbox0
CAN_TSR_ABRQ0	EQU	0x00000080	; Abort Request for Mailbox0
CAN_TSR_RQCP1	EQU	0x00000100	; Request Completed Mailbox1
CAN_TSR_TXOK1	EQU	0x00000200	; Transmission OK of Mailbox1
CAN_TSR_ALST1	EQU	0x00000400	; Arbitration Lost for Mailbox1
CAN_TSR_TERR1	EQU	0x00000800	; Transmission Error of Mailbox1
CAN_TSR_ABRQ1	EQU	0x00008000	; Abort Request for Mailbox 1
CAN_TSR_RQCP2	EQU	0x00010000	; Request Completed Mailbox2
CAN_TSR_TXOK2	EQU	0x00020000	; Transmission OK of Mailbox 2
CAN_TSR_ALST2	EQU	0x00040000	; Arbitration Lost for mailbox 2
CAN_TSR_TERR2	EQU	0x00080000	; Transmission Error of Mailbox 2
CAN_TSR_ABRQ2	EQU	0x00800000	; Abort Request for Mailbox 2
CAN_TSR_CODE	EQU	0x03000000	; Mailbox Code

CAN_TSR_TME	EQU	0x1C000000	; TME[2:0] bits
CAN_TSR_TME0	EQU	0x04000000	; Transmit Mailbox 0 Empty
CAN_TSR_TME1	EQU	0x08000000	; Transmit Mailbox 1 Empty
CAN_TSR_TME2	EQU	0x10000000	; Transmit Mailbox 2 Empty

CAN_TSR_LOW	EQU	0xE0000000	; LOW[2:0] bits
CAN_TSR_LOW0	EQU	0x20000000	; Lowest Priority Flag for Mailbox 0
CAN_TSR_LOW1	EQU	0x40000000	; Lowest Priority Flag for Mailbox 1
CAN_TSR_LOW2	EQU	0x80000000	; Lowest Priority Flag for Mailbox 2

; Bit definition for CAN_RF0R register
CAN_RF0R_FMP0	EQU	0x03	; FIFO 0 Message Pending
CAN_RF0R_FULL0	EQU	0x08	; FIFO 0 Full
CAN_RF0R_FOVR0	EQU	0x10	; FIFO 0 Overrun
CAN_RF0R_RFOM0	EQU	0x20	; Release FIFO 0 Output Mailbox

; Bit definition for CAN_RF1R register
CAN_RF1R_FMP1	EQU	0x03	; FIFO 1 Message Pending
CAN_RF1R_FULL1	EQU	0x08	; FIFO 1 Full
CAN_RF1R_FOVR1	EQU	0x10	; FIFO 1 Overrun
CAN_RF1R_RFOM1	EQU	0x20	; Release FIFO 1 Output Mailbox

; Bit definition for CAN_IER register
CAN_IER_TMEIE	EQU	0x00000001	; Transmit Mailbox Empty Interrupt Enable
CAN_IER_FMPIE0	EQU	0x00000002	; FIFO Message Pending Interrupt Enable
CAN_IER_FFIE0	EQU	0x00000004	; FIFO Full Interrupt Enable
CAN_IER_FOVIE0	EQU	0x00000008	; FIFO Overrun Interrupt Enable
CAN_IER_FMPIE1	EQU	0x00000010	; FIFO Message Pending Interrupt Enable
CAN_IER_FFIE1	EQU	0x00000020	; FIFO Full Interrupt Enable
CAN_IER_FOVIE1	EQU	0x00000040	; FIFO Overrun Interrupt Enable
CAN_IER_EWGIE	EQU	0x00000100	; Error Warning Interrupt Enable
CAN_IER_EPVIE	EQU	0x00000200	; Error Passive Interrupt Enable
CAN_IER_BOFIE	EQU	0x00000400	; Bus-Off Interrupt Enable
CAN_IER_LECIE	EQU	0x00000800	; Last Error Code Interrupt Enable
CAN_IER_ERRIE	EQU	0x00008000	; Error Interrupt Enable
CAN_IER_WKUIE	EQU	0x00010000	; Wakeup Interrupt Enable
CAN_IER_SLKIE	EQU	0x00020000	; Sleep Interrupt Enable

; Bit definition for CAN_ESR register
CAN_ESR_EWGF	EQU	0x00000001	; Error Warning Flag
CAN_ESR_EPVF	EQU	0x00000002	; Error Passive Flag
CAN_ESR_BOFF	EQU	0x00000004	; Bus-Off Flag

CAN_ESR_LEC	EQU	0x00000070	; LEC[2:0] bits (Last Error Code)
CAN_ESR_LEC_0	EQU	0x00000010	; Bit 0
CAN_ESR_LEC_1	EQU	0x00000020	; Bit 1
CAN_ESR_LEC_2	EQU	0x00000040	; Bit 2

CAN_ESR_TEC	EQU	0x00FF0000	; Least significant byte of the 9-bit Transmit Error Counter
CAN_ESR_REC	EQU	0xFF000000	; Receive Error Counter

; Bit definition for CAN_BTR register
CAN_BTR_BRP	EQU	0x000003FF	; Baud Rate Prescaler
CAN_BTR_TS1	EQU	0x000F0000	; Time Segment 1
CAN_BTR_TS2	EQU	0x00700000	; Time Segment 2
CAN_BTR_SJW	EQU	0x03000000	; Resynchronization Jump Width
CAN_BTR_LBKM	EQU	0x40000000	; Loop Back Mode (Debug)
CAN_BTR_SILM	EQU	0x80000000	; Silent Mode

; Mailbox registers
; Bit definition for CAN_TI0R register
CAN_TI0R_TXRQ	EQU	0x00000001	; Transmit Mailbox Request
CAN_TI0R_RTR	EQU	0x00000002	; Remote Transmission Request
CAN_TI0R_IDE	EQU	0x00000004	; Identifier Extension
CAN_TI0R_EXID	EQU	0x001FFFF8	; Extended Identifier
CAN_TI0R_STID	EQU	0xFFE00000	; Standard Identifier or Extended Identifier

; Bit definition for CAN_TDT0R register
CAN_TDT0R_DLC	EQU	0x0000000F	; Data Length Code
CAN_TDT0R_TGT	EQU	0x00000100	; Transmit Global Time
CAN_TDT0R_TIME	EQU	0xFFFF0000	; Message Time Stamp

; Bit definition for CAN_TDL0R register
CAN_TDL0R_DATA0	EQU	0x000000FF	; Data byte 0
CAN_TDL0R_DATA1	EQU	0x0000FF00	; Data byte 1
CAN_TDL0R_DATA2	EQU	0x00FF0000	; Data byte 2
CAN_TDL0R_DATA3	EQU	0xFF000000	; Data byte 3

; Bit definition for CAN_TDH0R register
CAN_TDH0R_DATA4	EQU	0x000000FF	; Data byte 4
CAN_TDH0R_DATA5	EQU	0x0000FF00	; Data byte 5
CAN_TDH0R_DATA6	EQU	0x00FF0000	; Data byte 6
CAN_TDH0R_DATA7	EQU	0xFF000000	; Data byte 7

; Bit definition for CAN_TI1R register
CAN_TI1R_TXRQ	EQU	0x00000001	; Transmit Mailbox Request
CAN_TI1R_RTR	EQU	0x00000002	; Remote Transmission Request
CAN_TI1R_IDE	EQU	0x00000004	; Identifier Extension
CAN_TI1R_EXID	EQU	0x001FFFF8	; Extended Identifier
CAN_TI1R_STID	EQU	0xFFE00000	; Standard Identifier or Extended Identifier

; Bit definition for CAN_TDT1R register
CAN_TDT1R_DLC	EQU	0x0000000F	; Data Length Code
CAN_TDT1R_TGT	EQU	0x00000100	; Transmit Global Time
CAN_TDT1R_TIME	EQU	0xFFFF0000	; Message Time Stamp

; Bit definition for CAN_TDL1R register
CAN_TDL1R_DATA0	EQU	0x000000FF	; Data byte 0
CAN_TDL1R_DATA1	EQU	0x0000FF00	; Data byte 1
CAN_TDL1R_DATA2	EQU	0x00FF0000	; Data byte 2
CAN_TDL1R_DATA3	EQU	0xFF000000	; Data byte 3

; Bit definition for CAN_TDH1R register
CAN_TDH1R_DATA4	EQU	0x000000FF	; Data byte 4
CAN_TDH1R_DATA5	EQU	0x0000FF00	; Data byte 5
CAN_TDH1R_DATA6	EQU	0x00FF0000	; Data byte 6
CAN_TDH1R_DATA7	EQU	0xFF000000	; Data byte 7

; Bit definition for CAN_TI2R register
CAN_TI2R_TXRQ	EQU	0x00000001	; Transmit Mailbox Request
CAN_TI2R_RTR	EQU	0x00000002	; Remote Transmission Request
CAN_TI2R_IDE	EQU	0x00000004	; Identifier Extension
CAN_TI2R_EXID	EQU	0x001FFFF8	; Extended identifier
CAN_TI2R_STID	EQU	0xFFE00000	; Standard Identifier or Extended Identifier

; Bit definition for CAN_TDT2R register
CAN_TDT2R_DLC	EQU	0x0000000F	; Data Length Code
CAN_TDT2R_TGT	EQU	0x00000100	; Transmit Global Time
CAN_TDT2R_TIME	EQU	0xFFFF0000	; Message Time Stamp

; Bit definition for CAN_TDL2R register
CAN_TDL2R_DATA0	EQU	0x000000FF	; Data byte 0
CAN_TDL2R_DATA1	EQU	0x0000FF00	; Data byte 1
CAN_TDL2R_DATA2	EQU	0x00FF0000	; Data byte 2
CAN_TDL2R_DATA3	EQU	0xFF000000	; Data byte 3

; Bit definition for CAN_TDH2R register
CAN_TDH2R_DATA4	EQU	0x000000FF	; Data byte 4
CAN_TDH2R_DATA5	EQU	0x0000FF00	; Data byte 5
CAN_TDH2R_DATA6	EQU	0x00FF0000	; Data byte 6
CAN_TDH2R_DATA7	EQU	0xFF000000	; Data byte 7

; Bit definition for CAN_RI0R register
CAN_RI0R_RTR	EQU	0x00000002	; Remote Transmission Request
CAN_RI0R_IDE	EQU	0x00000004	; Identifier Extension
CAN_RI0R_EXID	EQU	0x001FFFF8	; Extended Identifier
CAN_RI0R_STID	EQU	0xFFE00000	; Standard Identifier or Extended Identifier

; Bit definition for CAN_RDT0R register
CAN_RDT0R_DLC	EQU	0x0000000F	; Data Length Code
CAN_RDT0R_FMI	EQU	0x0000FF00	; Filter Match Index
CAN_RDT0R_TIME	EQU	0xFFFF0000	; Message Time Stamp

; Bit definition for CAN_RDL0R register
CAN_RDL0R_DATA0	EQU	0x000000FF	; Data byte 0
CAN_RDL0R_DATA1	EQU	0x0000FF00	; Data byte 1
CAN_RDL0R_DATA2	EQU	0x00FF0000	; Data byte 2
CAN_RDL0R_DATA3	EQU	0xFF000000	; Data byte 3

; Bit definition for CAN_RDH0R register
CAN_RDH0R_DATA4	EQU	0x000000FF	; Data byte 4
CAN_RDH0R_DATA5	EQU	0x0000FF00	; Data byte 5
CAN_RDH0R_DATA6	EQU	0x00FF0000	; Data byte 6
CAN_RDH0R_DATA7	EQU	0xFF000000	; Data byte 7

; Bit definition for CAN_RI1R register
CAN_RI1R_RTR	EQU	0x00000002	; Remote Transmission Request
CAN_RI1R_IDE	EQU	0x00000004	; Identifier Extension
CAN_RI1R_EXID	EQU	0x001FFFF8	; Extended identifier
CAN_RI1R_STID	EQU	0xFFE00000	; Standard Identifier or Extended Identifier

; Bit definition for CAN_RDT1R register
CAN_RDT1R_DLC	EQU	0x0000000F	; Data Length Code
CAN_RDT1R_FMI	EQU	0x0000FF00	; Filter Match Index
CAN_RDT1R_TIME	EQU	0xFFFF0000	; Message Time Stamp

; Bit definition for CAN_RDL1R register
CAN_RDL1R_DATA0	EQU	0x000000FF	; Data byte 0
CAN_RDL1R_DATA1	EQU	0x0000FF00	; Data byte 1
CAN_RDL1R_DATA2	EQU	0x00FF0000	; Data byte 2
CAN_RDL1R_DATA3	EQU	0xFF000000	; Data byte 3

; Bit definition for CAN_RDH1R register
CAN_RDH1R_DATA4	EQU	0x000000FF	; Data byte 4
CAN_RDH1R_DATA5	EQU	0x0000FF00	; Data byte 5
CAN_RDH1R_DATA6	EQU	0x00FF0000	; Data byte 6
CAN_RDH1R_DATA7	EQU	0xFF000000	; Data byte 7

; CAN filter registers
; Bit definition for CAN_FMR register
CAN_FMR_FINIT	EQU	0x01	; Filter Init Mode

; Bit definition for CAN_FM1R register
CAN_FM1R_FBM	EQU	0x3FFF	; Filter Mode
CAN_FM1R_FBM0	EQU	0x0001	; Filter Init Mode bit 0
CAN_FM1R_FBM1	EQU	0x0002	; Filter Init Mode bit 1
CAN_FM1R_FBM2	EQU	0x0004	; Filter Init Mode bit 2
CAN_FM1R_FBM3	EQU	0x0008	; Filter Init Mode bit 3
CAN_FM1R_FBM4	EQU	0x0010	; Filter Init Mode bit 4
CAN_FM1R_FBM5	EQU	0x0020	; Filter Init Mode bit 5
CAN_FM1R_FBM6	EQU	0x0040	; Filter Init Mode bit 6
CAN_FM1R_FBM7	EQU	0x0080	; Filter Init Mode bit 7
CAN_FM1R_FBM8	EQU	0x0100	; Filter Init Mode bit 8
CAN_FM1R_FBM9	EQU	0x0200	; Filter Init Mode bit 9
CAN_FM1R_FBM10	EQU	0x0400	; Filter Init Mode bit 10
CAN_FM1R_FBM11	EQU	0x0800	; Filter Init Mode bit 11
CAN_FM1R_FBM12	EQU	0x1000	; Filter Init Mode bit 12
CAN_FM1R_FBM13	EQU	0x2000	; Filter Init Mode bit 13

; Bit definition for CAN_FS1R register
CAN_FS1R_FSC	EQU	0x3FFF	; Filter Scale Configuration
CAN_FS1R_FSC0	EQU	0x0001	; Filter Scale Configuration bit 0
CAN_FS1R_FSC1	EQU	0x0002	; Filter Scale Configuration bit 1
CAN_FS1R_FSC2	EQU	0x0004	; Filter Scale Configuration bit 2
CAN_FS1R_FSC3	EQU	0x0008	; Filter Scale Configuration bit 3
CAN_FS1R_FSC4	EQU	0x0010	; Filter Scale Configuration bit 4
CAN_FS1R_FSC5	EQU	0x0020	; Filter Scale Configuration bit 5
CAN_FS1R_FSC6	EQU	0x0040	; Filter Scale Configuration bit 6
CAN_FS1R_FSC7	EQU	0x0080	; Filter Scale Configuration bit 7
CAN_FS1R_FSC8	EQU	0x0100	; Filter Scale Configuration bit 8
CAN_FS1R_FSC9	EQU	0x0200	; Filter Scale Configuration bit 9
CAN_FS1R_FSC10	EQU	0x0400	; Filter Scale Configuration bit 10
CAN_FS1R_FSC11	EQU	0x0800	; Filter Scale Configuration bit 11
CAN_FS1R_FSC12	EQU	0x1000	; Filter Scale Configuration bit 12
CAN_FS1R_FSC13	EQU	0x2000	; Filter Scale Configuration bit 13

; Bit definition for CAN_FFA1R register
CAN_FFA1R_FFA	EQU	0x3FFF	; Filter FIFO Assignment
CAN_FFA1R_FFA0	EQU	0x0001	; Filter FIFO Assignment for Filter 0
CAN_FFA1R_FFA1	EQU	0x0002	; Filter FIFO Assignment for Filter 1
CAN_FFA1R_FFA2	EQU	0x0004	; Filter FIFO Assignment for Filter 2
CAN_FFA1R_FFA3	EQU	0x0008	; Filter FIFO Assignment for Filter 3
CAN_FFA1R_FFA4	EQU	0x0010	; Filter FIFO Assignment for Filter 4
CAN_FFA1R_FFA5	EQU	0x0020	; Filter FIFO Assignment for Filter 5
CAN_FFA1R_FFA6	EQU	0x0040	; Filter FIFO Assignment for Filter 6
CAN_FFA1R_FFA7	EQU	0x0080	; Filter FIFO Assignment for Filter 7
CAN_FFA1R_FFA8	EQU	0x0100	; Filter FIFO Assignment for Filter 8
CAN_FFA1R_FFA9	EQU	0x0200	; Filter FIFO Assignment for Filter 9
CAN_FFA1R_FFA10	EQU	0x0400	; Filter FIFO Assignment for Filter 10
CAN_FFA1R_FFA11	EQU	0x0800	; Filter FIFO Assignment for Filter 11
CAN_FFA1R_FFA12	EQU	0x1000	; Filter FIFO Assignment for Filter 12
CAN_FFA1R_FFA13	EQU	0x2000	; Filter FIFO Assignment for Filter 13

; Bit definition for CAN_FA1R register
CAN_FA1R_FACT	EQU	0x3FFF	; Filter Active
CAN_FA1R_FACT0	EQU	0x0001	; Filter 0 Active
CAN_FA1R_FACT1	EQU	0x0002	; Filter 1 Active
CAN_FA1R_FACT2	EQU	0x0004	; Filter 2 Active
CAN_FA1R_FACT3	EQU	0x0008	; Filter 3 Active
CAN_FA1R_FACT4	EQU	0x0010	; Filter 4 Active
CAN_FA1R_FACT5	EQU	0x0020	; Filter 5 Active
CAN_FA1R_FACT6	EQU	0x0040	; Filter 6 Active
CAN_FA1R_FACT7	EQU	0x0080	; Filter 7 Active
CAN_FA1R_FACT8	EQU	0x0100	; Filter 8 Active
CAN_FA1R_FACT9	EQU	0x0200	; Filter 9 Active
CAN_FA1R_FACT10	EQU	0x0400	; Filter 10 Active
CAN_FA1R_FACT11	EQU	0x0800	; Filter 11 Active
CAN_FA1R_FACT12	EQU	0x1000	; Filter 12 Active
CAN_FA1R_FACT13	EQU	0x2000	; Filter 13 Active

; Bit definition for CAN_F0R1 register
CAN_F0R1_FB0	EQU	0x00000001	; Filter bit 0
CAN_F0R1_FB1	EQU	0x00000002	; Filter bit 1
CAN_F0R1_FB2	EQU	0x00000004	; Filter bit 2
CAN_F0R1_FB3	EQU	0x00000008	; Filter bit 3
CAN_F0R1_FB4	EQU	0x00000010	; Filter bit 4
CAN_F0R1_FB5	EQU	0x00000020	; Filter bit 5
CAN_F0R1_FB6	EQU	0x00000040	; Filter bit 6
CAN_F0R1_FB7	EQU	0x00000080	; Filter bit 7
CAN_F0R1_FB8	EQU	0x00000100	; Filter bit 8
CAN_F0R1_FB9	EQU	0x00000200	; Filter bit 9
CAN_F0R1_FB10	EQU	0x00000400	; Filter bit 10
CAN_F0R1_FB11	EQU	0x00000800	; Filter bit 11
CAN_F0R1_FB12	EQU	0x00001000	; Filter bit 12
CAN_F0R1_FB13	EQU	0x00002000	; Filter bit 13
CAN_F0R1_FB14	EQU	0x00004000	; Filter bit 14
CAN_F0R1_FB15	EQU	0x00008000	; Filter bit 15
CAN_F0R1_FB16	EQU	0x00010000	; Filter bit 16
CAN_F0R1_FB17	EQU	0x00020000	; Filter bit 17
CAN_F0R1_FB18	EQU	0x00040000	; Filter bit 18
CAN_F0R1_FB19	EQU	0x00080000	; Filter bit 19
CAN_F0R1_FB20	EQU	0x00100000	; Filter bit 20
CAN_F0R1_FB21	EQU	0x00200000	; Filter bit 21
CAN_F0R1_FB22	EQU	0x00400000	; Filter bit 22
CAN_F0R1_FB23	EQU	0x00800000	; Filter bit 23
CAN_F0R1_FB24	EQU	0x01000000	; Filter bit 24
CAN_F0R1_FB25	EQU	0x02000000	; Filter bit 25
CAN_F0R1_FB26	EQU	0x04000000	; Filter bit 26
CAN_F0R1_FB27	EQU	0x08000000	; Filter bit 27
CAN_F0R1_FB28	EQU	0x10000000	; Filter bit 28
CAN_F0R1_FB29	EQU	0x20000000	; Filter bit 29
CAN_F0R1_FB30	EQU	0x40000000	; Filter bit 30
CAN_F0R1_FB31	EQU	0x80000000	; Filter bit 31

; Bit definition for CAN_F1R1 register
CAN_F1R1_FB0	EQU	0x00000001	; Filter bit 0
CAN_F1R1_FB1	EQU	0x00000002	; Filter bit 1
CAN_F1R1_FB2	EQU	0x00000004	; Filter bit 2
CAN_F1R1_FB3	EQU	0x00000008	; Filter bit 3
CAN_F1R1_FB4	EQU	0x00000010	; Filter bit 4
CAN_F1R1_FB5	EQU	0x00000020	; Filter bit 5
CAN_F1R1_FB6	EQU	0x00000040	; Filter bit 6
CAN_F1R1_FB7	EQU	0x00000080	; Filter bit 7
CAN_F1R1_FB8	EQU	0x00000100	; Filter bit 8
CAN_F1R1_FB9	EQU	0x00000200	; Filter bit 9
CAN_F1R1_FB10	EQU	0x00000400	; Filter bit 10
CAN_F1R1_FB11	EQU	0x00000800	; Filter bit 11
CAN_F1R1_FB12	EQU	0x00001000	; Filter bit 12
CAN_F1R1_FB13	EQU	0x00002000	; Filter bit 13
CAN_F1R1_FB14	EQU	0x00004000	; Filter bit 14
CAN_F1R1_FB15	EQU	0x00008000	; Filter bit 15
CAN_F1R1_FB16	EQU	0x00010000	; Filter bit 16
CAN_F1R1_FB17	EQU	0x00020000	; Filter bit 17
CAN_F1R1_FB18	EQU	0x00040000	; Filter bit 18
CAN_F1R1_FB19	EQU	0x00080000	; Filter bit 19
CAN_F1R1_FB20	EQU	0x00100000	; Filter bit 20
CAN_F1R1_FB21	EQU	0x00200000	; Filter bit 21
CAN_F1R1_FB22	EQU	0x00400000	; Filter bit 22
CAN_F1R1_FB23	EQU	0x00800000	; Filter bit 23
CAN_F1R1_FB24	EQU	0x01000000	; Filter bit 24
CAN_F1R1_FB25	EQU	0x02000000	; Filter bit 25
CAN_F1R1_FB26	EQU	0x04000000	; Filter bit 26
CAN_F1R1_FB27	EQU	0x08000000	; Filter bit 27
CAN_F1R1_FB28	EQU	0x10000000	; Filter bit 28
CAN_F1R1_FB29	EQU	0x20000000	; Filter bit 29
CAN_F1R1_FB30	EQU	0x40000000	; Filter bit 30
CAN_F1R1_FB31	EQU	0x80000000	; Filter bit 31

; Bit definition for CAN_F2R1 register
CAN_F2R1_FB0	EQU	0x00000001	; Filter bit 0
CAN_F2R1_FB1	EQU	0x00000002	; Filter bit 1
CAN_F2R1_FB2	EQU	0x00000004	; Filter bit 2
CAN_F2R1_FB3	EQU	0x00000008	; Filter bit 3
CAN_F2R1_FB4	EQU	0x00000010	; Filter bit 4
CAN_F2R1_FB5	EQU	0x00000020	; Filter bit 5
CAN_F2R1_FB6	EQU	0x00000040	; Filter bit 6
CAN_F2R1_FB7	EQU	0x00000080	; Filter bit 7
CAN_F2R1_FB8	EQU	0x00000100	; Filter bit 8
CAN_F2R1_FB9	EQU	0x00000200	; Filter bit 9
CAN_F2R1_FB10	EQU	0x00000400	; Filter bit 10
CAN_F2R1_FB11	EQU	0x00000800	; Filter bit 11
CAN_F2R1_FB12	EQU	0x00001000	; Filter bit 12
CAN_F2R1_FB13	EQU	0x00002000	; Filter bit 13
CAN_F2R1_FB14	EQU	0x00004000	; Filter bit 14
CAN_F2R1_FB15	EQU	0x00008000	; Filter bit 15
CAN_F2R1_FB16	EQU	0x00010000	; Filter bit 16
CAN_F2R1_FB17	EQU	0x00020000	; Filter bit 17
CAN_F2R1_FB18	EQU	0x00040000	; Filter bit 18
CAN_F2R1_FB19	EQU	0x00080000	; Filter bit 19
CAN_F2R1_FB20	EQU	0x00100000	; Filter bit 20
CAN_F2R1_FB21	EQU	0x00200000	; Filter bit 21
CAN_F2R1_FB22	EQU	0x00400000	; Filter bit 22
CAN_F2R1_FB23	EQU	0x00800000	; Filter bit 23
CAN_F2R1_FB24	EQU	0x01000000	; Filter bit 24
CAN_F2R1_FB25	EQU	0x02000000	; Filter bit 25
CAN_F2R1_FB26	EQU	0x04000000	; Filter bit 26
CAN_F2R1_FB27	EQU	0x08000000	; Filter bit 27
CAN_F2R1_FB28	EQU	0x10000000	; Filter bit 28
CAN_F2R1_FB29	EQU	0x20000000	; Filter bit 29
CAN_F2R1_FB30	EQU	0x40000000	; Filter bit 30
CAN_F2R1_FB31	EQU	0x80000000	; Filter bit 31

; Bit definition for CAN_F3R1 register
CAN_F3R1_FB0	EQU	0x00000001	; Filter bit 0
CAN_F3R1_FB1	EQU	0x00000002	; Filter bit 1
CAN_F3R1_FB2	EQU	0x00000004	; Filter bit 2
CAN_F3R1_FB3	EQU	0x00000008	; Filter bit 3
CAN_F3R1_FB4	EQU	0x00000010	; Filter bit 4
CAN_F3R1_FB5	EQU	0x00000020	; Filter bit 5
CAN_F3R1_FB6	EQU	0x00000040	; Filter bit 6
CAN_F3R1_FB7	EQU	0x00000080	; Filter bit 7
CAN_F3R1_FB8	EQU	0x00000100	; Filter bit 8
CAN_F3R1_FB9	EQU	0x00000200	; Filter bit 9
CAN_F3R1_FB10	EQU	0x00000400	; Filter bit 10
CAN_F3R1_FB11	EQU	0x00000800	; Filter bit 11
CAN_F3R1_FB12	EQU	0x00001000	; Filter bit 12
CAN_F3R1_FB13	EQU	0x00002000	; Filter bit 13
CAN_F3R1_FB14	EQU	0x00004000	; Filter bit 14
CAN_F3R1_FB15	EQU	0x00008000	; Filter bit 15
CAN_F3R1_FB16	EQU	0x00010000	; Filter bit 16
CAN_F3R1_FB17	EQU	0x00020000	; Filter bit 17
CAN_F3R1_FB18	EQU	0x00040000	; Filter bit 18
CAN_F3R1_FB19	EQU	0x00080000	; Filter bit 19
CAN_F3R1_FB20	EQU	0x00100000	; Filter bit 20
CAN_F3R1_FB21	EQU	0x00200000	; Filter bit 21
CAN_F3R1_FB22	EQU	0x00400000	; Filter bit 22
CAN_F3R1_FB23	EQU	0x00800000	; Filter bit 23
CAN_F3R1_FB24	EQU	0x01000000	; Filter bit 24
CAN_F3R1_FB25	EQU	0x02000000	; Filter bit 25
CAN_F3R1_FB26	EQU	0x04000000	; Filter bit 26
CAN_F3R1_FB27	EQU	0x08000000	; Filter bit 27
CAN_F3R1_FB28	EQU	0x10000000	; Filter bit 28
CAN_F3R1_FB29	EQU	0x20000000	; Filter bit 29
CAN_F3R1_FB30	EQU	0x40000000	; Filter bit 30
CAN_F3R1_FB31	EQU	0x80000000	; Filter bit 31

; Bit definition for CAN_F4R1 register
CAN_F4R1_FB0	EQU	0x00000001	; Filter bit 0
CAN_F4R1_FB1	EQU	0x00000002	; Filter bit 1
CAN_F4R1_FB2	EQU	0x00000004	; Filter bit 2
CAN_F4R1_FB3	EQU	0x00000008	; Filter bit 3
CAN_F4R1_FB4	EQU	0x00000010	; Filter bit 4
CAN_F4R1_FB5	EQU	0x00000020	; Filter bit 5
CAN_F4R1_FB6	EQU	0x00000040	; Filter bit 6
CAN_F4R1_FB7	EQU	0x00000080	; Filter bit 7
CAN_F4R1_FB8	EQU	0x00000100	; Filter bit 8
CAN_F4R1_FB9	EQU	0x00000200	; Filter bit 9
CAN_F4R1_FB10	EQU	0x00000400	; Filter bit 10
CAN_F4R1_FB11	EQU	0x00000800	; Filter bit 11
CAN_F4R1_FB12	EQU	0x00001000	; Filter bit 12
CAN_F4R1_FB13	EQU	0x00002000	; Filter bit 13
CAN_F4R1_FB14	EQU	0x00004000	; Filter bit 14
CAN_F4R1_FB15	EQU	0x00008000	; Filter bit 15
CAN_F4R1_FB16	EQU	0x00010000	; Filter bit 16
CAN_F4R1_FB17	EQU	0x00020000	; Filter bit 17
CAN_F4R1_FB18	EQU	0x00040000	; Filter bit 18
CAN_F4R1_FB19	EQU	0x00080000	; Filter bit 19
CAN_F4R1_FB20	EQU	0x00100000	; Filter bit 20
CAN_F4R1_FB21	EQU	0x00200000	; Filter bit 21
CAN_F4R1_FB22	EQU	0x00400000	; Filter bit 22
CAN_F4R1_FB23	EQU	0x00800000	; Filter bit 23
CAN_F4R1_FB24	EQU	0x01000000	; Filter bit 24
CAN_F4R1_FB25	EQU	0x02000000	; Filter bit 25
CAN_F4R1_FB26	EQU	0x04000000	; Filter bit 26
CAN_F4R1_FB27	EQU	0x08000000	; Filter bit 27
CAN_F4R1_FB28	EQU	0x10000000	; Filter bit 28
CAN_F4R1_FB29	EQU	0x20000000	; Filter bit 29
CAN_F4R1_FB30	EQU	0x40000000	; Filter bit 30
CAN_F4R1_FB31	EQU	0x80000000	; Filter bit 31

; Bit definition for CAN_F5R1 register
CAN_F5R1_FB0	EQU	0x00000001	; Filter bit 0
CAN_F5R1_FB1	EQU	0x00000002	; Filter bit 1
CAN_F5R1_FB2	EQU	0x00000004	; Filter bit 2
CAN_F5R1_FB3	EQU	0x00000008	; Filter bit 3
CAN_F5R1_FB4	EQU	0x00000010	; Filter bit 4
CAN_F5R1_FB5	EQU	0x00000020	; Filter bit 5
CAN_F5R1_FB6	EQU	0x00000040	; Filter bit 6
CAN_F5R1_FB7	EQU	0x00000080	; Filter bit 7
CAN_F5R1_FB8	EQU	0x00000100	; Filter bit 8
CAN_F5R1_FB9	EQU	0x00000200	; Filter bit 9
CAN_F5R1_FB10	EQU	0x00000400	; Filter bit 10
CAN_F5R1_FB11	EQU	0x00000800	; Filter bit 11
CAN_F5R1_FB12	EQU	0x00001000	; Filter bit 12
CAN_F5R1_FB13	EQU	0x00002000	; Filter bit 13
CAN_F5R1_FB14	EQU	0x00004000	; Filter bit 14
CAN_F5R1_FB15	EQU	0x00008000	; Filter bit 15
CAN_F5R1_FB16	EQU	0x00010000	; Filter bit 16
CAN_F5R1_FB17	EQU	0x00020000	; Filter bit 17
CAN_F5R1_FB18	EQU	0x00040000	; Filter bit 18
CAN_F5R1_FB19	EQU	0x00080000	; Filter bit 19
CAN_F5R1_FB20	EQU	0x00100000	; Filter bit 20
CAN_F5R1_FB21	EQU	0x00200000	; Filter bit 21
CAN_F5R1_FB22	EQU	0x00400000	; Filter bit 22
CAN_F5R1_FB23	EQU	0x00800000	; Filter bit 23
CAN_F5R1_FB24	EQU	0x01000000	; Filter bit 24
CAN_F5R1_FB25	EQU	0x02000000	; Filter bit 25
CAN_F5R1_FB26	EQU	0x04000000	; Filter bit 26
CAN_F5R1_FB27	EQU	0x08000000	; Filter bit 27
CAN_F5R1_FB28	EQU	0x10000000	; Filter bit 28
CAN_F5R1_FB29	EQU	0x20000000	; Filter bit 29
CAN_F5R1_FB30	EQU	0x40000000	; Filter bit 30
CAN_F5R1_FB31	EQU	0x80000000	; Filter bit 31

; Bit definition for CAN_F6R1 register
CAN_F6R1_FB0	EQU	0x00000001	; Filter bit 0
CAN_F6R1_FB1	EQU	0x00000002	; Filter bit 1
CAN_F6R1_FB2	EQU	0x00000004	; Filter bit 2
CAN_F6R1_FB3	EQU	0x00000008	; Filter bit 3
CAN_F6R1_FB4	EQU	0x00000010	; Filter bit 4
CAN_F6R1_FB5	EQU	0x00000020	; Filter bit 5
CAN_F6R1_FB6	EQU	0x00000040	; Filter bit 6
CAN_F6R1_FB7	EQU	0x00000080	; Filter bit 7
CAN_F6R1_FB8	EQU	0x00000100	; Filter bit 8
CAN_F6R1_FB9	EQU	0x00000200	; Filter bit 9
CAN_F6R1_FB10	EQU	0x00000400	; Filter bit 10
CAN_F6R1_FB11	EQU	0x00000800	; Filter bit 11
CAN_F6R1_FB12	EQU	0x00001000	; Filter bit 12
CAN_F6R1_FB13	EQU	0x00002000	; Filter bit 13
CAN_F6R1_FB14	EQU	0x00004000	; Filter bit 14
CAN_F6R1_FB15	EQU	0x00008000	; Filter bit 15
CAN_F6R1_FB16	EQU	0x00010000	; Filter bit 16
CAN_F6R1_FB17	EQU	0x00020000	; Filter bit 17
CAN_F6R1_FB18	EQU	0x00040000	; Filter bit 18
CAN_F6R1_FB19	EQU	0x00080000	; Filter bit 19
CAN_F6R1_FB20	EQU	0x00100000	; Filter bit 20
CAN_F6R1_FB21	EQU	0x00200000	; Filter bit 21
CAN_F6R1_FB22	EQU	0x00400000	; Filter bit 22
CAN_F6R1_FB23	EQU	0x00800000	; Filter bit 23
CAN_F6R1_FB24	EQU	0x01000000	; Filter bit 24
CAN_F6R1_FB25	EQU	0x02000000	; Filter bit 25
CAN_F6R1_FB26	EQU	0x04000000	; Filter bit 26
CAN_F6R1_FB27	EQU	0x08000000	; Filter bit 27
CAN_F6R1_FB28	EQU	0x10000000	; Filter bit 28
CAN_F6R1_FB29	EQU	0x20000000	; Filter bit 29
CAN_F6R1_FB30	EQU	0x40000000	; Filter bit 30
CAN_F6R1_FB31	EQU	0x80000000	; Filter bit 31

; Bit definition for CAN_F7R1 register
CAN_F7R1_FB0	EQU	0x00000001	; Filter bit 0
CAN_F7R1_FB1	EQU	0x00000002	; Filter bit 1
CAN_F7R1_FB2	EQU	0x00000004	; Filter bit 2
CAN_F7R1_FB3	EQU	0x00000008	; Filter bit 3
CAN_F7R1_FB4	EQU	0x00000010	; Filter bit 4
CAN_F7R1_FB5	EQU	0x00000020	; Filter bit 5
CAN_F7R1_FB6	EQU	0x00000040	; Filter bit 6
CAN_F7R1_FB7	EQU	0x00000080	; Filter bit 7
CAN_F7R1_FB8	EQU	0x00000100	; Filter bit 8
CAN_F7R1_FB9	EQU	0x00000200	; Filter bit 9
CAN_F7R1_FB10	EQU	0x00000400	; Filter bit 10
CAN_F7R1_FB11	EQU	0x00000800	; Filter bit 11
CAN_F7R1_FB12	EQU	0x00001000	; Filter bit 12
CAN_F7R1_FB13	EQU	0x00002000	; Filter bit 13
CAN_F7R1_FB14	EQU	0x00004000	; Filter bit 14
CAN_F7R1_FB15	EQU	0x00008000	; Filter bit 15
CAN_F7R1_FB16	EQU	0x00010000	; Filter bit 16
CAN_F7R1_FB17	EQU	0x00020000	; Filter bit 17
CAN_F7R1_FB18	EQU	0x00040000	; Filter bit 18
CAN_F7R1_FB19	EQU	0x00080000	; Filter bit 19
CAN_F7R1_FB20	EQU	0x00100000	; Filter bit 20
CAN_F7R1_FB21	EQU	0x00200000	; Filter bit 21
CAN_F7R1_FB22	EQU	0x00400000	; Filter bit 22
CAN_F7R1_FB23	EQU	0x00800000	; Filter bit 23
CAN_F7R1_FB24	EQU	0x01000000	; Filter bit 24
CAN_F7R1_FB25	EQU	0x02000000	; Filter bit 25
CAN_F7R1_FB26	EQU	0x04000000	; Filter bit 26
CAN_F7R1_FB27	EQU	0x08000000	; Filter bit 27
CAN_F7R1_FB28	EQU	0x10000000	; Filter bit 28
CAN_F7R1_FB29	EQU	0x20000000	; Filter bit 29
CAN_F7R1_FB30	EQU	0x40000000	; Filter bit 30
CAN_F7R1_FB31	EQU	0x80000000	; Filter bit 31

; Bit definition for CAN_F8R1 register
CAN_F8R1_FB0	EQU	0x00000001	; Filter bit 0
CAN_F8R1_FB1	EQU	0x00000002	; Filter bit 1
CAN_F8R1_FB2	EQU	0x00000004	; Filter bit 2
CAN_F8R1_FB3	EQU	0x00000008	; Filter bit 3
CAN_F8R1_FB4	EQU	0x00000010	; Filter bit 4
CAN_F8R1_FB5	EQU	0x00000020	; Filter bit 5
CAN_F8R1_FB6	EQU	0x00000040	; Filter bit 6
CAN_F8R1_FB7	EQU	0x00000080	; Filter bit 7
CAN_F8R1_FB8	EQU	0x00000100	; Filter bit 8
CAN_F8R1_FB9	EQU	0x00000200	; Filter bit 9
CAN_F8R1_FB10	EQU	0x00000400	; Filter bit 10
CAN_F8R1_FB11	EQU	0x00000800	; Filter bit 11
CAN_F8R1_FB12	EQU	0x00001000	; Filter bit 12
CAN_F8R1_FB13	EQU	0x00002000	; Filter bit 13
CAN_F8R1_FB14	EQU	0x00004000	; Filter bit 14
CAN_F8R1_FB15	EQU	0x00008000	; Filter bit 15
CAN_F8R1_FB16	EQU	0x00010000	; Filter bit 16
CAN_F8R1_FB17	EQU	0x00020000	; Filter bit 17
CAN_F8R1_FB18	EQU	0x00040000	; Filter bit 18
CAN_F8R1_FB19	EQU	0x00080000	; Filter bit 19
CAN_F8R1_FB20	EQU	0x00100000	; Filter bit 20
CAN_F8R1_FB21	EQU	0x00200000	; Filter bit 21
CAN_F8R1_FB22	EQU	0x00400000	; Filter bit 22
CAN_F8R1_FB23	EQU	0x00800000	; Filter bit 23
CAN_F8R1_FB24	EQU	0x01000000	; Filter bit 24
CAN_F8R1_FB25	EQU	0x02000000	; Filter bit 25
CAN_F8R1_FB26	EQU	0x04000000	; Filter bit 26
CAN_F8R1_FB27	EQU	0x08000000	; Filter bit 27
CAN_F8R1_FB28	EQU	0x10000000	; Filter bit 28
CAN_F8R1_FB29	EQU	0x20000000	; Filter bit 29
CAN_F8R1_FB30	EQU	0x40000000	; Filter bit 30
CAN_F8R1_FB31	EQU	0x80000000	; Filter bit 31

; Bit definition for CAN_F9R1 register
CAN_F9R1_FB0	EQU	0x00000001	; Filter bit 0
CAN_F9R1_FB1	EQU	0x00000002	; Filter bit 1
CAN_F9R1_FB2	EQU	0x00000004	; Filter bit 2
CAN_F9R1_FB3	EQU	0x00000008	; Filter bit 3
CAN_F9R1_FB4	EQU	0x00000010	; Filter bit 4
CAN_F9R1_FB5	EQU	0x00000020	; Filter bit 5
CAN_F9R1_FB6	EQU	0x00000040	; Filter bit 6
CAN_F9R1_FB7	EQU	0x00000080	; Filter bit 7
CAN_F9R1_FB8	EQU	0x00000100	; Filter bit 8
CAN_F9R1_FB9	EQU	0x00000200	; Filter bit 9
CAN_F9R1_FB10	EQU	0x00000400	; Filter bit 10
CAN_F9R1_FB11	EQU	0x00000800	; Filter bit 11
CAN_F9R1_FB12	EQU	0x00001000	; Filter bit 12
CAN_F9R1_FB13	EQU	0x00002000	; Filter bit 13
CAN_F9R1_FB14	EQU	0x00004000	; Filter bit 14
CAN_F9R1_FB15	EQU	0x00008000	; Filter bit 15
CAN_F9R1_FB16	EQU	0x00010000	; Filter bit 16
CAN_F9R1_FB17	EQU	0x00020000	; Filter bit 17
CAN_F9R1_FB18	EQU	0x00040000	; Filter bit 18
CAN_F9R1_FB19	EQU	0x00080000	; Filter bit 19
CAN_F9R1_FB20	EQU	0x00100000	; Filter bit 20
CAN_F9R1_FB21	EQU	0x00200000	; Filter bit 21
CAN_F9R1_FB22	EQU	0x00400000	; Filter bit 22
CAN_F9R1_FB23	EQU	0x00800000	; Filter bit 23
CAN_F9R1_FB24	EQU	0x01000000	; Filter bit 24
CAN_F9R1_FB25	EQU	0x02000000	; Filter bit 25
CAN_F9R1_FB26	EQU	0x04000000	; Filter bit 26
CAN_F9R1_FB27	EQU	0x08000000	; Filter bit 27
CAN_F9R1_FB28	EQU	0x10000000	; Filter bit 28
CAN_F9R1_FB29	EQU	0x20000000	; Filter bit 29
CAN_F9R1_FB30	EQU	0x40000000	; Filter bit 30
CAN_F9R1_FB31	EQU	0x80000000	; Filter bit 31

; Bit definition for CAN_F10R1 register
CAN_F10R1_FB0	EQU	0x00000001	; Filter bit 0
CAN_F10R1_FB1	EQU	0x00000002	; Filter bit 1
CAN_F10R1_FB2	EQU	0x00000004	; Filter bit 2
CAN_F10R1_FB3	EQU	0x00000008	; Filter bit 3
CAN_F10R1_FB4	EQU	0x00000010	; Filter bit 4
CAN_F10R1_FB5	EQU	0x00000020	; Filter bit 5
CAN_F10R1_FB6	EQU	0x00000040	; Filter bit 6
CAN_F10R1_FB7	EQU	0x00000080	; Filter bit 7
CAN_F10R1_FB8	EQU	0x00000100	; Filter bit 8
CAN_F10R1_FB9	EQU	0x00000200	; Filter bit 9
CAN_F10R1_FB10	EQU	0x00000400	; Filter bit 10
CAN_F10R1_FB11	EQU	0x00000800	; Filter bit 11
CAN_F10R1_FB12	EQU	0x00001000	; Filter bit 12
CAN_F10R1_FB13	EQU	0x00002000	; Filter bit 13
CAN_F10R1_FB14	EQU	0x00004000	; Filter bit 14
CAN_F10R1_FB15	EQU	0x00008000	; Filter bit 15
CAN_F10R1_FB16	EQU	0x00010000	; Filter bit 16
CAN_F10R1_FB17	EQU	0x00020000	; Filter bit 17
CAN_F10R1_FB18	EQU	0x00040000	; Filter bit 18
CAN_F10R1_FB19	EQU	0x00080000	; Filter bit 19
CAN_F10R1_FB20	EQU	0x00100000	; Filter bit 20
CAN_F10R1_FB21	EQU	0x00200000	; Filter bit 21
CAN_F10R1_FB22	EQU	0x00400000	; Filter bit 22
CAN_F10R1_FB23	EQU	0x00800000	; Filter bit 23
CAN_F10R1_FB24	EQU	0x01000000	; Filter bit 24
CAN_F10R1_FB25	EQU	0x02000000	; Filter bit 25
CAN_F10R1_FB26	EQU	0x04000000	; Filter bit 26
CAN_F10R1_FB27	EQU	0x08000000	; Filter bit 27
CAN_F10R1_FB28	EQU	0x10000000	; Filter bit 28
CAN_F10R1_FB29	EQU	0x20000000	; Filter bit 29
CAN_F10R1_FB30	EQU	0x40000000	; Filter bit 30
CAN_F10R1_FB31	EQU	0x80000000	; Filter bit 31

; Bit definition for CAN_F11R1 register
CAN_F11R1_FB0	EQU	0x00000001	; Filter bit 0
CAN_F11R1_FB1	EQU	0x00000002	; Filter bit 1
CAN_F11R1_FB2	EQU	0x00000004	; Filter bit 2
CAN_F11R1_FB3	EQU	0x00000008	; Filter bit 3
CAN_F11R1_FB4	EQU	0x00000010	; Filter bit 4
CAN_F11R1_FB5	EQU	0x00000020	; Filter bit 5
CAN_F11R1_FB6	EQU	0x00000040	; Filter bit 6
CAN_F11R1_FB7	EQU	0x00000080	; Filter bit 7
CAN_F11R1_FB8	EQU	0x00000100	; Filter bit 8
CAN_F11R1_FB9	EQU	0x00000200	; Filter bit 9
CAN_F11R1_FB10	EQU	0x00000400	; Filter bit 10
CAN_F11R1_FB11	EQU	0x00000800	; Filter bit 11
CAN_F11R1_FB12	EQU	0x00001000	; Filter bit 12
CAN_F11R1_FB13	EQU	0x00002000	; Filter bit 13
CAN_F11R1_FB14	EQU	0x00004000	; Filter bit 14
CAN_F11R1_FB15	EQU	0x00008000	; Filter bit 15
CAN_F11R1_FB16	EQU	0x00010000	; Filter bit 16
CAN_F11R1_FB17	EQU	0x00020000	; Filter bit 17
CAN_F11R1_FB18	EQU	0x00040000	; Filter bit 18
CAN_F11R1_FB19	EQU	0x00080000	; Filter bit 19
CAN_F11R1_FB20	EQU	0x00100000	; Filter bit 20
CAN_F11R1_FB21	EQU	0x00200000	; Filter bit 21
CAN_F11R1_FB22	EQU	0x00400000	; Filter bit 22
CAN_F11R1_FB23	EQU	0x00800000	; Filter bit 23
CAN_F11R1_FB24	EQU	0x01000000	; Filter bit 24
CAN_F11R1_FB25	EQU	0x02000000	; Filter bit 25
CAN_F11R1_FB26	EQU	0x04000000	; Filter bit 26
CAN_F11R1_FB27	EQU	0x08000000	; Filter bit 27
CAN_F11R1_FB28	EQU	0x10000000	; Filter bit 28
CAN_F11R1_FB29	EQU	0x20000000	; Filter bit 29
CAN_F11R1_FB30	EQU	0x40000000	; Filter bit 30
CAN_F11R1_FB31	EQU	0x80000000	; Filter bit 31

; Bit definition for CAN_F12R1 register
CAN_F12R1_FB0	EQU	0x00000001	; Filter bit 0
CAN_F12R1_FB1	EQU	0x00000002	; Filter bit 1
CAN_F12R1_FB2	EQU	0x00000004	; Filter bit 2
CAN_F12R1_FB3	EQU	0x00000008	; Filter bit 3
CAN_F12R1_FB4	EQU	0x00000010	; Filter bit 4
CAN_F12R1_FB5	EQU	0x00000020	; Filter bit 5
CAN_F12R1_FB6	EQU	0x00000040	; Filter bit 6
CAN_F12R1_FB7	EQU	0x00000080	; Filter bit 7
CAN_F12R1_FB8	EQU	0x00000100	; Filter bit 8
CAN_F12R1_FB9	EQU	0x00000200	; Filter bit 9
CAN_F12R1_FB10	EQU	0x00000400	; Filter bit 10
CAN_F12R1_FB11	EQU	0x00000800	; Filter bit 11
CAN_F12R1_FB12	EQU	0x00001000	; Filter bit 12
CAN_F12R1_FB13	EQU	0x00002000	; Filter bit 13
CAN_F12R1_FB14	EQU	0x00004000	; Filter bit 14
CAN_F12R1_FB15	EQU	0x00008000	; Filter bit 15
CAN_F12R1_FB16	EQU	0x00010000	; Filter bit 16
CAN_F12R1_FB17	EQU	0x00020000	; Filter bit 17
CAN_F12R1_FB18	EQU	0x00040000	; Filter bit 18
CAN_F12R1_FB19	EQU	0x00080000	; Filter bit 19
CAN_F12R1_FB20	EQU	0x00100000	; Filter bit 20
CAN_F12R1_FB21	EQU	0x00200000	; Filter bit 21
CAN_F12R1_FB22	EQU	0x00400000	; Filter bit 22
CAN_F12R1_FB23	EQU	0x00800000	; Filter bit 23
CAN_F12R1_FB24	EQU	0x01000000	; Filter bit 24
CAN_F12R1_FB25	EQU	0x02000000	; Filter bit 25
CAN_F12R1_FB26	EQU	0x04000000	; Filter bit 26
CAN_F12R1_FB27	EQU	0x08000000	; Filter bit 27
CAN_F12R1_FB28	EQU	0x10000000	; Filter bit 28
CAN_F12R1_FB29	EQU	0x20000000	; Filter bit 29
CAN_F12R1_FB30	EQU	0x40000000	; Filter bit 30
CAN_F12R1_FB31	EQU	0x80000000	; Filter bit 31

; Bit definition for CAN_F13R1 register
CAN_F13R1_FB0	EQU	0x00000001	; Filter bit 0
CAN_F13R1_FB1	EQU	0x00000002	; Filter bit 1
CAN_F13R1_FB2	EQU	0x00000004	; Filter bit 2
CAN_F13R1_FB3	EQU	0x00000008	; Filter bit 3
CAN_F13R1_FB4	EQU	0x00000010	; Filter bit 4
CAN_F13R1_FB5	EQU	0x00000020	; Filter bit 5
CAN_F13R1_FB6	EQU	0x00000040	; Filter bit 6
CAN_F13R1_FB7	EQU	0x00000080	; Filter bit 7
CAN_F13R1_FB8	EQU	0x00000100	; Filter bit 8
CAN_F13R1_FB9	EQU	0x00000200	; Filter bit 9
CAN_F13R1_FB10	EQU	0x00000400	; Filter bit 10
CAN_F13R1_FB11	EQU	0x00000800	; Filter bit 11
CAN_F13R1_FB12	EQU	0x00001000	; Filter bit 12
CAN_F13R1_FB13	EQU	0x00002000	; Filter bit 13
CAN_F13R1_FB14	EQU	0x00004000	; Filter bit 14
CAN_F13R1_FB15	EQU	0x00008000	; Filter bit 15
CAN_F13R1_FB16	EQU	0x00010000	; Filter bit 16
CAN_F13R1_FB17	EQU	0x00020000	; Filter bit 17
CAN_F13R1_FB18	EQU	0x00040000	; Filter bit 18
CAN_F13R1_FB19	EQU	0x00080000	; Filter bit 19
CAN_F13R1_FB20	EQU	0x00100000	; Filter bit 20
CAN_F13R1_FB21	EQU	0x00200000	; Filter bit 21
CAN_F13R1_FB22	EQU	0x00400000	; Filter bit 22
CAN_F13R1_FB23	EQU	0x00800000	; Filter bit 23
CAN_F13R1_FB24	EQU	0x01000000	; Filter bit 24
CAN_F13R1_FB25	EQU	0x02000000	; Filter bit 25
CAN_F13R1_FB26	EQU	0x04000000	; Filter bit 26
CAN_F13R1_FB27	EQU	0x08000000	; Filter bit 27
CAN_F13R1_FB28	EQU	0x10000000	; Filter bit 28
CAN_F13R1_FB29	EQU	0x20000000	; Filter bit 29
CAN_F13R1_FB30	EQU	0x40000000	; Filter bit 30
CAN_F13R1_FB31	EQU	0x80000000	; Filter bit 31

; Bit definition for CAN_F0R2 register
CAN_F0R2_FB0	EQU	0x00000001	; Filter bit 0
CAN_F0R2_FB1	EQU	0x00000002	; Filter bit 1
CAN_F0R2_FB2	EQU	0x00000004	; Filter bit 2
CAN_F0R2_FB3	EQU	0x00000008	; Filter bit 3
CAN_F0R2_FB4	EQU	0x00000010	; Filter bit 4
CAN_F0R2_FB5	EQU	0x00000020	; Filter bit 5
CAN_F0R2_FB6	EQU	0x00000040	; Filter bit 6
CAN_F0R2_FB7	EQU	0x00000080	; Filter bit 7
CAN_F0R2_FB8	EQU	0x00000100	; Filter bit 8
CAN_F0R2_FB9	EQU	0x00000200	; Filter bit 9
CAN_F0R2_FB10	EQU	0x00000400	; Filter bit 10
CAN_F0R2_FB11	EQU	0x00000800	; Filter bit 11
CAN_F0R2_FB12	EQU	0x00001000	; Filter bit 12
CAN_F0R2_FB13	EQU	0x00002000	; Filter bit 13
CAN_F0R2_FB14	EQU	0x00004000	; Filter bit 14
CAN_F0R2_FB15	EQU	0x00008000	; Filter bit 15
CAN_F0R2_FB16	EQU	0x00010000	; Filter bit 16
CAN_F0R2_FB17	EQU	0x00020000	; Filter bit 17
CAN_F0R2_FB18	EQU	0x00040000	; Filter bit 18
CAN_F0R2_FB19	EQU	0x00080000	; Filter bit 19
CAN_F0R2_FB20	EQU	0x00100000	; Filter bit 20
CAN_F0R2_FB21	EQU	0x00200000	; Filter bit 21
CAN_F0R2_FB22	EQU	0x00400000	; Filter bit 22
CAN_F0R2_FB23	EQU	0x00800000	; Filter bit 23
CAN_F0R2_FB24	EQU	0x01000000	; Filter bit 24
CAN_F0R2_FB25	EQU	0x02000000	; Filter bit 25
CAN_F0R2_FB26	EQU	0x04000000	; Filter bit 26
CAN_F0R2_FB27	EQU	0x08000000	; Filter bit 27
CAN_F0R2_FB28	EQU	0x10000000	; Filter bit 28
CAN_F0R2_FB29	EQU	0x20000000	; Filter bit 29
CAN_F0R2_FB30	EQU	0x40000000	; Filter bit 30
CAN_F0R2_FB31	EQU	0x80000000	; Filter bit 31

; Bit definition for CAN_F1R2 register
CAN_F1R2_FB0	EQU	0x00000001	; Filter bit 0
CAN_F1R2_FB1	EQU	0x00000002	; Filter bit 1
CAN_F1R2_FB2	EQU	0x00000004	; Filter bit 2
CAN_F1R2_FB3	EQU	0x00000008	; Filter bit 3
CAN_F1R2_FB4	EQU	0x00000010	; Filter bit 4
CAN_F1R2_FB5	EQU	0x00000020	; Filter bit 5
CAN_F1R2_FB6	EQU	0x00000040	; Filter bit 6
CAN_F1R2_FB7	EQU	0x00000080	; Filter bit 7
CAN_F1R2_FB8	EQU	0x00000100	; Filter bit 8
CAN_F1R2_FB9	EQU	0x00000200	; Filter bit 9
CAN_F1R2_FB10	EQU	0x00000400	; Filter bit 10
CAN_F1R2_FB11	EQU	0x00000800	; Filter bit 11
CAN_F1R2_FB12	EQU	0x00001000	; Filter bit 12
CAN_F1R2_FB13	EQU	0x00002000	; Filter bit 13
CAN_F1R2_FB14	EQU	0x00004000	; Filter bit 14
CAN_F1R2_FB15	EQU	0x00008000	; Filter bit 15
CAN_F1R2_FB16	EQU	0x00010000	; Filter bit 16
CAN_F1R2_FB17	EQU	0x00020000	; Filter bit 17
CAN_F1R2_FB18	EQU	0x00040000	; Filter bit 18
CAN_F1R2_FB19	EQU	0x00080000	; Filter bit 19
CAN_F1R2_FB20	EQU	0x00100000	; Filter bit 20
CAN_F1R2_FB21	EQU	0x00200000	; Filter bit 21
CAN_F1R2_FB22	EQU	0x00400000	; Filter bit 22
CAN_F1R2_FB23	EQU	0x00800000	; Filter bit 23
CAN_F1R2_FB24	EQU	0x01000000	; Filter bit 24
CAN_F1R2_FB25	EQU	0x02000000	; Filter bit 25
CAN_F1R2_FB26	EQU	0x04000000	; Filter bit 26
CAN_F1R2_FB27	EQU	0x08000000	; Filter bit 27
CAN_F1R2_FB28	EQU	0x10000000	; Filter bit 28
CAN_F1R2_FB29	EQU	0x20000000	; Filter bit 29
CAN_F1R2_FB30	EQU	0x40000000	; Filter bit 30
CAN_F1R2_FB31	EQU	0x80000000	; Filter bit 31

; Bit definition for CAN_F2R2 register
CAN_F2R2_FB0	EQU	0x00000001	; Filter bit 0
CAN_F2R2_FB1	EQU	0x00000002	; Filter bit 1
CAN_F2R2_FB2	EQU	0x00000004	; Filter bit 2
CAN_F2R2_FB3	EQU	0x00000008	; Filter bit 3
CAN_F2R2_FB4	EQU	0x00000010	; Filter bit 4
CAN_F2R2_FB5	EQU	0x00000020	; Filter bit 5
CAN_F2R2_FB6	EQU	0x00000040	; Filter bit 6
CAN_F2R2_FB7	EQU	0x00000080	; Filter bit 7
CAN_F2R2_FB8	EQU	0x00000100	; Filter bit 8
CAN_F2R2_FB9	EQU	0x00000200	; Filter bit 9
CAN_F2R2_FB10	EQU	0x00000400	; Filter bit 10
CAN_F2R2_FB11	EQU	0x00000800	; Filter bit 11
CAN_F2R2_FB12	EQU	0x00001000	; Filter bit 12
CAN_F2R2_FB13	EQU	0x00002000	; Filter bit 13
CAN_F2R2_FB14	EQU	0x00004000	; Filter bit 14
CAN_F2R2_FB15	EQU	0x00008000	; Filter bit 15
CAN_F2R2_FB16	EQU	0x00010000	; Filter bit 16
CAN_F2R2_FB17	EQU	0x00020000	; Filter bit 17
CAN_F2R2_FB18	EQU	0x00040000	; Filter bit 18
CAN_F2R2_FB19	EQU	0x00080000	; Filter bit 19
CAN_F2R2_FB20	EQU	0x00100000	; Filter bit 20
CAN_F2R2_FB21	EQU	0x00200000	; Filter bit 21
CAN_F2R2_FB22	EQU	0x00400000	; Filter bit 22
CAN_F2R2_FB23	EQU	0x00800000	; Filter bit 23
CAN_F2R2_FB24	EQU	0x01000000	; Filter bit 24
CAN_F2R2_FB25	EQU	0x02000000	; Filter bit 25
CAN_F2R2_FB26	EQU	0x04000000	; Filter bit 26
CAN_F2R2_FB27	EQU	0x08000000	; Filter bit 27
CAN_F2R2_FB28	EQU	0x10000000	; Filter bit 28
CAN_F2R2_FB29	EQU	0x20000000	; Filter bit 29
CAN_F2R2_FB30	EQU	0x40000000	; Filter bit 30
CAN_F2R2_FB31	EQU	0x80000000	; Filter bit 31

; Bit definition for CAN_F3R2 register
CAN_F3R2_FB0	EQU	0x00000001	; Filter bit 0
CAN_F3R2_FB1	EQU	0x00000002	; Filter bit 1
CAN_F3R2_FB2	EQU	0x00000004	; Filter bit 2
CAN_F3R2_FB3	EQU	0x00000008	; Filter bit 3
CAN_F3R2_FB4	EQU	0x00000010	; Filter bit 4
CAN_F3R2_FB5	EQU	0x00000020	; Filter bit 5
CAN_F3R2_FB6	EQU	0x00000040	; Filter bit 6
CAN_F3R2_FB7	EQU	0x00000080	; Filter bit 7
CAN_F3R2_FB8	EQU	0x00000100	; Filter bit 8
CAN_F3R2_FB9	EQU	0x00000200	; Filter bit 9
CAN_F3R2_FB10	EQU	0x00000400	; Filter bit 10
CAN_F3R2_FB11	EQU	0x00000800	; Filter bit 11
CAN_F3R2_FB12	EQU	0x00001000	; Filter bit 12
CAN_F3R2_FB13	EQU	0x00002000	; Filter bit 13
CAN_F3R2_FB14	EQU	0x00004000	; Filter bit 14
CAN_F3R2_FB15	EQU	0x00008000	; Filter bit 15
CAN_F3R2_FB16	EQU	0x00010000	; Filter bit 16
CAN_F3R2_FB17	EQU	0x00020000	; Filter bit 17
CAN_F3R2_FB18	EQU	0x00040000	; Filter bit 18
CAN_F3R2_FB19	EQU	0x00080000	; Filter bit 19
CAN_F3R2_FB20	EQU	0x00100000	; Filter bit 20
CAN_F3R2_FB21	EQU	0x00200000	; Filter bit 21
CAN_F3R2_FB22	EQU	0x00400000	; Filter bit 22
CAN_F3R2_FB23	EQU	0x00800000	; Filter bit 23
CAN_F3R2_FB24	EQU	0x01000000	; Filter bit 24
CAN_F3R2_FB25	EQU	0x02000000	; Filter bit 25
CAN_F3R2_FB26	EQU	0x04000000	; Filter bit 26
CAN_F3R2_FB27	EQU	0x08000000	; Filter bit 27
CAN_F3R2_FB28	EQU	0x10000000	; Filter bit 28
CAN_F3R2_FB29	EQU	0x20000000	; Filter bit 29
CAN_F3R2_FB30	EQU	0x40000000	; Filter bit 30
CAN_F3R2_FB31	EQU	0x80000000	; Filter bit 31

; Bit definition for CAN_F4R2 register
CAN_F4R2_FB0	EQU	0x00000001	; Filter bit 0
CAN_F4R2_FB1	EQU	0x00000002	; Filter bit 1
CAN_F4R2_FB2	EQU	0x00000004	; Filter bit 2
CAN_F4R2_FB3	EQU	0x00000008	; Filter bit 3
CAN_F4R2_FB4	EQU	0x00000010	; Filter bit 4
CAN_F4R2_FB5	EQU	0x00000020	; Filter bit 5
CAN_F4R2_FB6	EQU	0x00000040	; Filter bit 6
CAN_F4R2_FB7	EQU	0x00000080	; Filter bit 7
CAN_F4R2_FB8	EQU	0x00000100	; Filter bit 8
CAN_F4R2_FB9	EQU	0x00000200	; Filter bit 9
CAN_F4R2_FB10	EQU	0x00000400	; Filter bit 10
CAN_F4R2_FB11	EQU	0x00000800	; Filter bit 11
CAN_F4R2_FB12	EQU	0x00001000	; Filter bit 12
CAN_F4R2_FB13	EQU	0x00002000	; Filter bit 13
CAN_F4R2_FB14	EQU	0x00004000	; Filter bit 14
CAN_F4R2_FB15	EQU	0x00008000	; Filter bit 15
CAN_F4R2_FB16	EQU	0x00010000	; Filter bit 16
CAN_F4R2_FB17	EQU	0x00020000	; Filter bit 17
CAN_F4R2_FB18	EQU	0x00040000	; Filter bit 18
CAN_F4R2_FB19	EQU	0x00080000	; Filter bit 19
CAN_F4R2_FB20	EQU	0x00100000	; Filter bit 20
CAN_F4R2_FB21	EQU	0x00200000	; Filter bit 21
CAN_F4R2_FB22	EQU	0x00400000	; Filter bit 22
CAN_F4R2_FB23	EQU	0x00800000	; Filter bit 23
CAN_F4R2_FB24	EQU	0x01000000	; Filter bit 24
CAN_F4R2_FB25	EQU	0x02000000	; Filter bit 25
CAN_F4R2_FB26	EQU	0x04000000	; Filter bit 26
CAN_F4R2_FB27	EQU	0x08000000	; Filter bit 27
CAN_F4R2_FB28	EQU	0x10000000	; Filter bit 28
CAN_F4R2_FB29	EQU	0x20000000	; Filter bit 29
CAN_F4R2_FB30	EQU	0x40000000	; Filter bit 30
CAN_F4R2_FB31	EQU	0x80000000	; Filter bit 31

; Bit definition for CAN_F5R2 register
CAN_F5R2_FB0	EQU	0x00000001	; Filter bit 0
CAN_F5R2_FB1	EQU	0x00000002	; Filter bit 1
CAN_F5R2_FB2	EQU	0x00000004	; Filter bit 2
CAN_F5R2_FB3	EQU	0x00000008	; Filter bit 3
CAN_F5R2_FB4	EQU	0x00000010	; Filter bit 4
CAN_F5R2_FB5	EQU	0x00000020	; Filter bit 5
CAN_F5R2_FB6	EQU	0x00000040	; Filter bit 6
CAN_F5R2_FB7	EQU	0x00000080	; Filter bit 7
CAN_F5R2_FB8	EQU	0x00000100	; Filter bit 8
CAN_F5R2_FB9	EQU	0x00000200	; Filter bit 9
CAN_F5R2_FB10	EQU	0x00000400	; Filter bit 10
CAN_F5R2_FB11	EQU	0x00000800	; Filter bit 11
CAN_F5R2_FB12	EQU	0x00001000	; Filter bit 12
CAN_F5R2_FB13	EQU	0x00002000	; Filter bit 13
CAN_F5R2_FB14	EQU	0x00004000	; Filter bit 14
CAN_F5R2_FB15	EQU	0x00008000	; Filter bit 15
CAN_F5R2_FB16	EQU	0x00010000	; Filter bit 16
CAN_F5R2_FB17	EQU	0x00020000	; Filter bit 17
CAN_F5R2_FB18	EQU	0x00040000	; Filter bit 18
CAN_F5R2_FB19	EQU	0x00080000	; Filter bit 19
CAN_F5R2_FB20	EQU	0x00100000	; Filter bit 20
CAN_F5R2_FB21	EQU	0x00200000	; Filter bit 21
CAN_F5R2_FB22	EQU	0x00400000	; Filter bit 22
CAN_F5R2_FB23	EQU	0x00800000	; Filter bit 23
CAN_F5R2_FB24	EQU	0x01000000	; Filter bit 24
CAN_F5R2_FB25	EQU	0x02000000	; Filter bit 25
CAN_F5R2_FB26	EQU	0x04000000	; Filter bit 26
CAN_F5R2_FB27	EQU	0x08000000	; Filter bit 27
CAN_F5R2_FB28	EQU	0x10000000	; Filter bit 28
CAN_F5R2_FB29	EQU	0x20000000	; Filter bit 29
CAN_F5R2_FB30	EQU	0x40000000	; Filter bit 30
CAN_F5R2_FB31	EQU	0x80000000	; Filter bit 31

; Bit definition for CAN_F6R2 register
CAN_F6R2_FB0	EQU	0x00000001	; Filter bit 0
CAN_F6R2_FB1	EQU	0x00000002	; Filter bit 1
CAN_F6R2_FB2	EQU	0x00000004	; Filter bit 2
CAN_F6R2_FB3	EQU	0x00000008	; Filter bit 3
CAN_F6R2_FB4	EQU	0x00000010	; Filter bit 4
CAN_F6R2_FB5	EQU	0x00000020	; Filter bit 5
CAN_F6R2_FB6	EQU	0x00000040	; Filter bit 6
CAN_F6R2_FB7	EQU	0x00000080	; Filter bit 7
CAN_F6R2_FB8	EQU	0x00000100	; Filter bit 8
CAN_F6R2_FB9	EQU	0x00000200	; Filter bit 9
CAN_F6R2_FB10	EQU	0x00000400	; Filter bit 10
CAN_F6R2_FB11	EQU	0x00000800	; Filter bit 11
CAN_F6R2_FB12	EQU	0x00001000	; Filter bit 12
CAN_F6R2_FB13	EQU	0x00002000	; Filter bit 13
CAN_F6R2_FB14	EQU	0x00004000	; Filter bit 14
CAN_F6R2_FB15	EQU	0x00008000	; Filter bit 15
CAN_F6R2_FB16	EQU	0x00010000	; Filter bit 16
CAN_F6R2_FB17	EQU	0x00020000	; Filter bit 17
CAN_F6R2_FB18	EQU	0x00040000	; Filter bit 18
CAN_F6R2_FB19	EQU	0x00080000	; Filter bit 19
CAN_F6R2_FB20	EQU	0x00100000	; Filter bit 20
CAN_F6R2_FB21	EQU	0x00200000	; Filter bit 21
CAN_F6R2_FB22	EQU	0x00400000	; Filter bit 22
CAN_F6R2_FB23	EQU	0x00800000	; Filter bit 23
CAN_F6R2_FB24	EQU	0x01000000	; Filter bit 24
CAN_F6R2_FB25	EQU	0x02000000	; Filter bit 25
CAN_F6R2_FB26	EQU	0x04000000	; Filter bit 26
CAN_F6R2_FB27	EQU	0x08000000	; Filter bit 27
CAN_F6R2_FB28	EQU	0x10000000	; Filter bit 28
CAN_F6R2_FB29	EQU	0x20000000	; Filter bit 29
CAN_F6R2_FB30	EQU	0x40000000	; Filter bit 30
CAN_F6R2_FB31	EQU	0x80000000	; Filter bit 31

; Bit definition for CAN_F7R2 register
CAN_F7R2_FB0	EQU	0x00000001	; Filter bit 0
CAN_F7R2_FB1	EQU	0x00000002	; Filter bit 1
CAN_F7R2_FB2	EQU	0x00000004	; Filter bit 2
CAN_F7R2_FB3	EQU	0x00000008	; Filter bit 3
CAN_F7R2_FB4	EQU	0x00000010	; Filter bit 4
CAN_F7R2_FB5	EQU	0x00000020	; Filter bit 5
CAN_F7R2_FB6	EQU	0x00000040	; Filter bit 6
CAN_F7R2_FB7	EQU	0x00000080	; Filter bit 7
CAN_F7R2_FB8	EQU	0x00000100	; Filter bit 8
CAN_F7R2_FB9	EQU	0x00000200	; Filter bit 9
CAN_F7R2_FB10	EQU	0x00000400	; Filter bit 10
CAN_F7R2_FB11	EQU	0x00000800	; Filter bit 11
CAN_F7R2_FB12	EQU	0x00001000	; Filter bit 12
CAN_F7R2_FB13	EQU	0x00002000	; Filter bit 13
CAN_F7R2_FB14	EQU	0x00004000	; Filter bit 14
CAN_F7R2_FB15	EQU	0x00008000	; Filter bit 15
CAN_F7R2_FB16	EQU	0x00010000	; Filter bit 16
CAN_F7R2_FB17	EQU	0x00020000	; Filter bit 17
CAN_F7R2_FB18	EQU	0x00040000	; Filter bit 18
CAN_F7R2_FB19	EQU	0x00080000	; Filter bit 19
CAN_F7R2_FB20	EQU	0x00100000	; Filter bit 20
CAN_F7R2_FB21	EQU	0x00200000	; Filter bit 21
CAN_F7R2_FB22	EQU	0x00400000	; Filter bit 22
CAN_F7R2_FB23	EQU	0x00800000	; Filter bit 23
CAN_F7R2_FB24	EQU	0x01000000	; Filter bit 24
CAN_F7R2_FB25	EQU	0x02000000	; Filter bit 25
CAN_F7R2_FB26	EQU	0x04000000	; Filter bit 26
CAN_F7R2_FB27	EQU	0x08000000	; Filter bit 27
CAN_F7R2_FB28	EQU	0x10000000	; Filter bit 28
CAN_F7R2_FB29	EQU	0x20000000	; Filter bit 29
CAN_F7R2_FB30	EQU	0x40000000	; Filter bit 30
CAN_F7R2_FB31	EQU	0x80000000	; Filter bit 31

; Bit definition for CAN_F8R2 register
CAN_F8R2_FB0	EQU	0x00000001	; Filter bit 0
CAN_F8R2_FB1	EQU	0x00000002	; Filter bit 1
CAN_F8R2_FB2	EQU	0x00000004	; Filter bit 2
CAN_F8R2_FB3	EQU	0x00000008	; Filter bit 3
CAN_F8R2_FB4	EQU	0x00000010	; Filter bit 4
CAN_F8R2_FB5	EQU	0x00000020	; Filter bit 5
CAN_F8R2_FB6	EQU	0x00000040	; Filter bit 6
CAN_F8R2_FB7	EQU	0x00000080	; Filter bit 7
CAN_F8R2_FB8	EQU	0x00000100	; Filter bit 8
CAN_F8R2_FB9	EQU	0x00000200	; Filter bit 9
CAN_F8R2_FB10	EQU	0x00000400	; Filter bit 10
CAN_F8R2_FB11	EQU	0x00000800	; Filter bit 11
CAN_F8R2_FB12	EQU	0x00001000	; Filter bit 12
CAN_F8R2_FB13	EQU	0x00002000	; Filter bit 13
CAN_F8R2_FB14	EQU	0x00004000	; Filter bit 14
CAN_F8R2_FB15	EQU	0x00008000	; Filter bit 15
CAN_F8R2_FB16	EQU	0x00010000	; Filter bit 16
CAN_F8R2_FB17	EQU	0x00020000	; Filter bit 17
CAN_F8R2_FB18	EQU	0x00040000	; Filter bit 18
CAN_F8R2_FB19	EQU	0x00080000	; Filter bit 19
CAN_F8R2_FB20	EQU	0x00100000	; Filter bit 20
CAN_F8R2_FB21	EQU	0x00200000	; Filter bit 21
CAN_F8R2_FB22	EQU	0x00400000	; Filter bit 22
CAN_F8R2_FB23	EQU	0x00800000	; Filter bit 23
CAN_F8R2_FB24	EQU	0x01000000	; Filter bit 24
CAN_F8R2_FB25	EQU	0x02000000	; Filter bit 25
CAN_F8R2_FB26	EQU	0x04000000	; Filter bit 26
CAN_F8R2_FB27	EQU	0x08000000	; Filter bit 27
CAN_F8R2_FB28	EQU	0x10000000	; Filter bit 28
CAN_F8R2_FB29	EQU	0x20000000	; Filter bit 29
CAN_F8R2_FB30	EQU	0x40000000	; Filter bit 30
CAN_F8R2_FB31	EQU	0x80000000	; Filter bit 31

; Bit definition for CAN_F9R2 register
CAN_F9R2_FB0	EQU	0x00000001	; Filter bit 0
CAN_F9R2_FB1	EQU	0x00000002	; Filter bit 1
CAN_F9R2_FB2	EQU	0x00000004	; Filter bit 2
CAN_F9R2_FB3	EQU	0x00000008	; Filter bit 3
CAN_F9R2_FB4	EQU	0x00000010	; Filter bit 4
CAN_F9R2_FB5	EQU	0x00000020	; Filter bit 5
CAN_F9R2_FB6	EQU	0x00000040	; Filter bit 6
CAN_F9R2_FB7	EQU	0x00000080	; Filter bit 7
CAN_F9R2_FB8	EQU	0x00000100	; Filter bit 8
CAN_F9R2_FB9	EQU	0x00000200	; Filter bit 9
CAN_F9R2_FB10	EQU	0x00000400	; Filter bit 10
CAN_F9R2_FB11	EQU	0x00000800	; Filter bit 11
CAN_F9R2_FB12	EQU	0x00001000	; Filter bit 12
CAN_F9R2_FB13	EQU	0x00002000	; Filter bit 13
CAN_F9R2_FB14	EQU	0x00004000	; Filter bit 14
CAN_F9R2_FB15	EQU	0x00008000	; Filter bit 15
CAN_F9R2_FB16	EQU	0x00010000	; Filter bit 16
CAN_F9R2_FB17	EQU	0x00020000	; Filter bit 17
CAN_F9R2_FB18	EQU	0x00040000	; Filter bit 18
CAN_F9R2_FB19	EQU	0x00080000	; Filter bit 19
CAN_F9R2_FB20	EQU	0x00100000	; Filter bit 20
CAN_F9R2_FB21	EQU	0x00200000	; Filter bit 21
CAN_F9R2_FB22	EQU	0x00400000	; Filter bit 22
CAN_F9R2_FB23	EQU	0x00800000	; Filter bit 23
CAN_F9R2_FB24	EQU	0x01000000	; Filter bit 24
CAN_F9R2_FB25	EQU	0x02000000	; Filter bit 25
CAN_F9R2_FB26	EQU	0x04000000	; Filter bit 26
CAN_F9R2_FB27	EQU	0x08000000	; Filter bit 27
CAN_F9R2_FB28	EQU	0x10000000	; Filter bit 28
CAN_F9R2_FB29	EQU	0x20000000	; Filter bit 29
CAN_F9R2_FB30	EQU	0x40000000	; Filter bit 30
CAN_F9R2_FB31	EQU	0x80000000	; Filter bit 31

; Bit definition for CAN_F10R2 register
CAN_F10R2_FB0	EQU	0x00000001	; Filter bit 0
CAN_F10R2_FB1	EQU	0x00000002	; Filter bit 1
CAN_F10R2_FB2	EQU	0x00000004	; Filter bit 2
CAN_F10R2_FB3	EQU	0x00000008	; Filter bit 3
CAN_F10R2_FB4	EQU	0x00000010	; Filter bit 4
CAN_F10R2_FB5	EQU	0x00000020	; Filter bit 5
CAN_F10R2_FB6	EQU	0x00000040	; Filter bit 6
CAN_F10R2_FB7	EQU	0x00000080	; Filter bit 7
CAN_F10R2_FB8	EQU	0x00000100	; Filter bit 8
CAN_F10R2_FB9	EQU	0x00000200	; Filter bit 9
CAN_F10R2_FB10	EQU	0x00000400	; Filter bit 10
CAN_F10R2_FB11	EQU	0x00000800	; Filter bit 11
CAN_F10R2_FB12	EQU	0x00001000	; Filter bit 12
CAN_F10R2_FB13	EQU	0x00002000	; Filter bit 13
CAN_F10R2_FB14	EQU	0x00004000	; Filter bit 14
CAN_F10R2_FB15	EQU	0x00008000	; Filter bit 15
CAN_F10R2_FB16	EQU	0x00010000	; Filter bit 16
CAN_F10R2_FB17	EQU	0x00020000	; Filter bit 17
CAN_F10R2_FB18	EQU	0x00040000	; Filter bit 18
CAN_F10R2_FB19	EQU	0x00080000	; Filter bit 19
CAN_F10R2_FB20	EQU	0x00100000	; Filter bit 20
CAN_F10R2_FB21	EQU	0x00200000	; Filter bit 21
CAN_F10R2_FB22	EQU	0x00400000	; Filter bit 22
CAN_F10R2_FB23	EQU	0x00800000	; Filter bit 23
CAN_F10R2_FB24	EQU	0x01000000	; Filter bit 24
CAN_F10R2_FB25	EQU	0x02000000	; Filter bit 25
CAN_F10R2_FB26	EQU	0x04000000	; Filter bit 26
CAN_F10R2_FB27	EQU	0x08000000	; Filter bit 27
CAN_F10R2_FB28	EQU	0x10000000	; Filter bit 28
CAN_F10R2_FB29	EQU	0x20000000	; Filter bit 29
CAN_F10R2_FB30	EQU	0x40000000	; Filter bit 30
CAN_F10R2_FB31	EQU	0x80000000	; Filter bit 31

; Bit definition for CAN_F11R2 register
CAN_F11R2_FB0	EQU	0x00000001	; Filter bit 0
CAN_F11R2_FB1	EQU	0x00000002	; Filter bit 1
CAN_F11R2_FB2	EQU	0x00000004	; Filter bit 2
CAN_F11R2_FB3	EQU	0x00000008	; Filter bit 3
CAN_F11R2_FB4	EQU	0x00000010	; Filter bit 4
CAN_F11R2_FB5	EQU	0x00000020	; Filter bit 5
CAN_F11R2_FB6	EQU	0x00000040	; Filter bit 6
CAN_F11R2_FB7	EQU	0x00000080	; Filter bit 7
CAN_F11R2_FB8	EQU	0x00000100	; Filter bit 8
CAN_F11R2_FB9	EQU	0x00000200	; Filter bit 9
CAN_F11R2_FB10	EQU	0x00000400	; Filter bit 10
CAN_F11R2_FB11	EQU	0x00000800	; Filter bit 11
CAN_F11R2_FB12	EQU	0x00001000	; Filter bit 12
CAN_F11R2_FB13	EQU	0x00002000	; Filter bit 13
CAN_F11R2_FB14	EQU	0x00004000	; Filter bit 14
CAN_F11R2_FB15	EQU	0x00008000	; Filter bit 15
CAN_F11R2_FB16	EQU	0x00010000	; Filter bit 16
CAN_F11R2_FB17	EQU	0x00020000	; Filter bit 17
CAN_F11R2_FB18	EQU	0x00040000	; Filter bit 18
CAN_F11R2_FB19	EQU	0x00080000	; Filter bit 19
CAN_F11R2_FB20	EQU	0x00100000	; Filter bit 20
CAN_F11R2_FB21	EQU	0x00200000	; Filter bit 21
CAN_F11R2_FB22	EQU	0x00400000	; Filter bit 22
CAN_F11R2_FB23	EQU	0x00800000	; Filter bit 23
CAN_F11R2_FB24	EQU	0x01000000	; Filter bit 24
CAN_F11R2_FB25	EQU	0x02000000	; Filter bit 25
CAN_F11R2_FB26	EQU	0x04000000	; Filter bit 26
CAN_F11R2_FB27	EQU	0x08000000	; Filter bit 27
CAN_F11R2_FB28	EQU	0x10000000	; Filter bit 28
CAN_F11R2_FB29	EQU	0x20000000	; Filter bit 29
CAN_F11R2_FB30	EQU	0x40000000	; Filter bit 30
CAN_F11R2_FB31	EQU	0x80000000	; Filter bit 31

; Bit definition for CAN_F12R2 register
CAN_F12R2_FB0	EQU	0x00000001	; Filter bit 0
CAN_F12R2_FB1	EQU	0x00000002	; Filter bit 1
CAN_F12R2_FB2	EQU	0x00000004	; Filter bit 2
CAN_F12R2_FB3	EQU	0x00000008	; Filter bit 3
CAN_F12R2_FB4	EQU	0x00000010	; Filter bit 4
CAN_F12R2_FB5	EQU	0x00000020	; Filter bit 5
CAN_F12R2_FB6	EQU	0x00000040	; Filter bit 6
CAN_F12R2_FB7	EQU	0x00000080	; Filter bit 7
CAN_F12R2_FB8	EQU	0x00000100	; Filter bit 8
CAN_F12R2_FB9	EQU	0x00000200	; Filter bit 9
CAN_F12R2_FB10	EQU	0x00000400	; Filter bit 10
CAN_F12R2_FB11	EQU	0x00000800	; Filter bit 11
CAN_F12R2_FB12	EQU	0x00001000	; Filter bit 12
CAN_F12R2_FB13	EQU	0x00002000	; Filter bit 13
CAN_F12R2_FB14	EQU	0x00004000	; Filter bit 14
CAN_F12R2_FB15	EQU	0x00008000	; Filter bit 15
CAN_F12R2_FB16	EQU	0x00010000	; Filter bit 16
CAN_F12R2_FB17	EQU	0x00020000	; Filter bit 17
CAN_F12R2_FB18	EQU	0x00040000	; Filter bit 18
CAN_F12R2_FB19	EQU	0x00080000	; Filter bit 19
CAN_F12R2_FB20	EQU	0x00100000	; Filter bit 20
CAN_F12R2_FB21	EQU	0x00200000	; Filter bit 21
CAN_F12R2_FB22	EQU	0x00400000	; Filter bit 22
CAN_F12R2_FB23	EQU	0x00800000	; Filter bit 23
CAN_F12R2_FB24	EQU	0x01000000	; Filter bit 24
CAN_F12R2_FB25	EQU	0x02000000	; Filter bit 25
CAN_F12R2_FB26	EQU	0x04000000	; Filter bit 26
CAN_F12R2_FB27	EQU	0x08000000	; Filter bit 27
CAN_F12R2_FB28	EQU	0x10000000	; Filter bit 28
CAN_F12R2_FB29	EQU	0x20000000	; Filter bit 29
CAN_F12R2_FB30	EQU	0x40000000	; Filter bit 30
CAN_F12R2_FB31	EQU	0x80000000	; Filter bit 31

; Bit definition for CAN_F13R2 register
CAN_F13R2_FB0	EQU	0x00000001	; Filter bit 0
CAN_F13R2_FB1	EQU	0x00000002	; Filter bit 1
CAN_F13R2_FB2	EQU	0x00000004	; Filter bit 2
CAN_F13R2_FB3	EQU	0x00000008	; Filter bit 3
CAN_F13R2_FB4	EQU	0x00000010	; Filter bit 4
CAN_F13R2_FB5	EQU	0x00000020	; Filter bit 5
CAN_F13R2_FB6	EQU	0x00000040	; Filter bit 6
CAN_F13R2_FB7	EQU	0x00000080	; Filter bit 7
CAN_F13R2_FB8	EQU	0x00000100	; Filter bit 8
CAN_F13R2_FB9	EQU	0x00000200	; Filter bit 9
CAN_F13R2_FB10	EQU	0x00000400	; Filter bit 10
CAN_F13R2_FB11	EQU	0x00000800	; Filter bit 11
CAN_F13R2_FB12	EQU	0x00001000	; Filter bit 12
CAN_F13R2_FB13	EQU	0x00002000	; Filter bit 13
CAN_F13R2_FB14	EQU	0x00004000	; Filter bit 14
CAN_F13R2_FB15	EQU	0x00008000	; Filter bit 15
CAN_F13R2_FB16	EQU	0x00010000	; Filter bit 16
CAN_F13R2_FB17	EQU	0x00020000	; Filter bit 17
CAN_F13R2_FB18	EQU	0x00040000	; Filter bit 18
CAN_F13R2_FB19	EQU	0x00080000	; Filter bit 19
CAN_F13R2_FB20	EQU	0x00100000	; Filter bit 20
CAN_F13R2_FB21	EQU	0x00200000	; Filter bit 21
CAN_F13R2_FB22	EQU	0x00400000	; Filter bit 22
CAN_F13R2_FB23	EQU	0x00800000	; Filter bit 23
CAN_F13R2_FB24	EQU	0x01000000	; Filter bit 24
CAN_F13R2_FB25	EQU	0x02000000	; Filter bit 25
CAN_F13R2_FB26	EQU	0x04000000	; Filter bit 26
CAN_F13R2_FB27	EQU	0x08000000	; Filter bit 27
CAN_F13R2_FB28	EQU	0x10000000	; Filter bit 28
CAN_F13R2_FB29	EQU	0x20000000	; Filter bit 29
CAN_F13R2_FB30	EQU	0x40000000	; Filter bit 30
CAN_F13R2_FB31	EQU	0x80000000	; Filter bit 31


;
; Serial Peripheral Interface
;


; Bit definition for SPI_CR1 register
SPI_CR1_CPHA	EQU	0x0001	; Clock Phase
SPI_CR1_CPOL	EQU	0x0002	; Clock Polarity
SPI_CR1_MSTR	EQU	0x0004	; Master Selection

SPI_CR1_BR	EQU	0x0038	; BR[2:0] bits (Baud Rate Control)
SPI_CR1_BR_0	EQU	0x0008	; Bit 0
SPI_CR1_BR_1	EQU	0x0010	; Bit 1
SPI_CR1_BR_2	EQU	0x0020	; Bit 2

SPI_CR1_SPE	EQU	0x0040	; SPI Enable
SPI_CR1_LSBFIRST	EQU	0x0080	; Frame Format
SPI_CR1_SSI	EQU	0x0100	; Internal slave select
SPI_CR1_SSM	EQU	0x0200	; Software slave management
SPI_CR1_RXONLY	EQU	0x0400	; Receive only
SPI_CR1_DFF	EQU	0x0800	; Data Frame Format
SPI_CR1_CRCNEXT	EQU	0x1000	; Transmit CRC next
SPI_CR1_CRCEN	EQU	0x2000	; Hardware CRC calculation enable
SPI_CR1_BIDIOE	EQU	0x4000	; Output enable in bidirectional mode
SPI_CR1_BIDIMODE	EQU	0x8000	; Bidirectional data mode enable

; Bit definition for SPI_CR2 register
SPI_CR2_RXDMAEN	EQU	0x01	; Rx Buffer DMA Enable
SPI_CR2_TXDMAEN	EQU	0x02	; Tx Buffer DMA Enable
SPI_CR2_SSOE	EQU	0x04	; SS Output Enable
SPI_CR2_ERRIE	EQU	0x20	; Error Interrupt Enable
SPI_CR2_RXNEIE	EQU	0x40	; RX buffer Not Empty Interrupt Enable
SPI_CR2_TXEIE	EQU	0x80	; Tx buffer Empty Interrupt Enable

; Bit definition for SPI_SR register
SPI_SR_RXNE	EQU	0x01	; Receive buffer Not Empty
SPI_SR_TXE	EQU	0x02	; Transmit buffer Empty
SPI_SR_CHSIDE	EQU	0x04	; Channel side
SPI_SR_UDR	EQU	0x08	; Underrun flag
SPI_SR_CRCERR	EQU	0x10	; CRC Error flag
SPI_SR_MODF	EQU	0x20	; Mode fault
SPI_SR_OVR	EQU	0x40	; Overrun flag
SPI_SR_BSY	EQU	0x80	; Busy flag

; Bit definition for SPI_DR register
SPI_DR_DR	EQU	0xFFFF	; Data Register

; Bit definition for SPI_CRCPR register
SPI_CRCPR_CRCPOLY	EQU	0xFFFF	; CRC polynomial register

; Bit definition for SPI_RXCRCR register
SPI_RXCRCR_RXCRC	EQU	0xFFFF	; Rx CRC Register

; Bit definition for SPI_TXCRCR register
SPI_TXCRCR_TXCRC	EQU	0xFFFF	; Tx CRC Register

; Bit definition for SPI_I2SCFGR register
SPI_I2SCFGR_CHLEN	EQU	0x0001	; Channel length (number of bits per audio channel)

SPI_I2SCFGR_DATLEN	EQU	0x0006	; DATLEN[1:0] bits (Data length to be transferred)
SPI_I2SCFGR_DATLEN_0	EQU	0x0002	; Bit 0
SPI_I2SCFGR_DATLEN_1	EQU	0x0004	; Bit 1

SPI_I2SCFGR_CKPOL	EQU	0x0008	; steady state clock polarity

SPI_I2SCFGR_I2SSTD	EQU	0x0030	; I2SSTD[1:0] bits (I2S standard selection)
SPI_I2SCFGR_I2SSTD_0	EQU	0x0010	; Bit 0
SPI_I2SCFGR_I2SSTD_1	EQU	0x0020	; Bit 1

SPI_I2SCFGR_PCMSYNC	EQU	0x0080	; PCM frame synchronization

SPI_I2SCFGR_I2SCFG	EQU	0x0300	; I2SCFG[1:0] bits (I2S configuration mode)
SPI_I2SCFGR_I2SCFG_0	EQU	0x0100	; Bit 0
SPI_I2SCFGR_I2SCFG_1	EQU	0x0200	; Bit 1

SPI_I2SCFGR_I2SE	EQU	0x0400	; I2S Enable
SPI_I2SCFGR_I2SMOD	EQU	0x0800	; I2S mode selection

; Bit definition for SPI_I2SPR register
SPI_I2SPR_I2SDIV	EQU	0x00FF	; I2S Linear prescaler
SPI_I2SPR_ODD	EQU	0x0100	; Odd factor for the prescaler
SPI_I2SPR_MCKOE	EQU	0x0200	; Master Clock Output Enable


;
; Inter-integrated Circuit Interface
;


; Bit definition for I2C_CR1 register
I2C_CR1_PE	EQU	0x0001	; Peripheral Enable
I2C_CR1_SMBUS	EQU	0x0002	; SMBus Mode
I2C_CR1_SMBTYPE	EQU	0x0008	; SMBus Type
I2C_CR1_ENARP	EQU	0x0010	; ARP Enable
I2C_CR1_ENPEC	EQU	0x0020	; PEC Enable
I2C_CR1_ENGC	EQU	0x0040	; General Call Enable
I2C_CR1_NOSTRETCH	EQU	0x0080	; Clock Stretching Disable (Slave mode)
I2C_CR1_START	EQU	0x0100	; Start Generation
I2C_CR1_STOP	EQU	0x0200	; Stop Generation
I2C_CR1_ACK	EQU	0x0400	; Acknowledge Enable
I2C_CR1_POS	EQU	0x0800	; Acknowledge/PEC Position (for data reception)
I2C_CR1_PEC	EQU	0x1000	; Packet Error Checking
I2C_CR1_ALERT	EQU	0x2000	; SMBus Alert
I2C_CR1_SWRST	EQU	0x8000	; Software Reset

; Bit definition for I2C_CR2 register
I2C_CR2_FREQ	EQU	0x003F	; FREQ[5:0] bits (Peripheral Clock Frequency)
I2C_CR2_FREQ_0	EQU	0x0001	; Bit 0
I2C_CR2_FREQ_1	EQU	0x0002	; Bit 1
I2C_CR2_FREQ_2	EQU	0x0004	; Bit 2
I2C_CR2_FREQ_3	EQU	0x0008	; Bit 3
I2C_CR2_FREQ_4	EQU	0x0010	; Bit 4
I2C_CR2_FREQ_5	EQU	0x0020	; Bit 5

I2C_CR2_ITERREN	EQU	0x0100	; Error Interrupt Enable
I2C_CR2_ITEVTEN	EQU	0x0200	; Event Interrupt Enable
I2C_CR2_ITBUFEN	EQU	0x0400	; Buffer Interrupt Enable
I2C_CR2_DMAEN	EQU	0x0800	; DMA Requests Enable
I2C_CR2_LAST	EQU	0x1000	; DMA Last Transfer

; Bit definition for I2C_OAR1 register
I2C_OAR1_ADD1_7	EQU	0x00FE	; Interface Address
I2C_OAR1_ADD8_9	EQU	0x0300	; Interface Address

I2C_OAR1_ADD0	EQU	0x0001	; Bit 0
I2C_OAR1_ADD1	EQU	0x0002	; Bit 1
I2C_OAR1_ADD2	EQU	0x0004	; Bit 2
I2C_OAR1_ADD3	EQU	0x0008	; Bit 3
I2C_OAR1_ADD4	EQU	0x0010	; Bit 4
I2C_OAR1_ADD5	EQU	0x0020	; Bit 5
I2C_OAR1_ADD6	EQU	0x0040	; Bit 6
I2C_OAR1_ADD7	EQU	0x0080	; Bit 7
I2C_OAR1_ADD8	EQU	0x0100	; Bit 8
I2C_OAR1_ADD9	EQU	0x0200	; Bit 9

I2C_OAR1_ADDMODE	EQU	0x8000	; Addressing Mode (Slave mode)

; Bit definition for I2C_OAR2 register
I2C_OAR2_ENDUAL	EQU	0x01	; Dual addressing mode enable
I2C_OAR2_ADD2	EQU	0xFE	; Interface address

; Bit definition for I2C_DR register
I2C_DR_DR	EQU	0xFF	; 8-bit Data Register

; Bit definition for I2C_SR1 register
I2C_SR1_SB	EQU	0x0001	; Start Bit (Master mode)
I2C_SR1_ADDR	EQU	0x0002	; Address sent (master mode)/matched (slave mode)
I2C_SR1_BTF	EQU	0x0004	; Byte Transfer Finished
I2C_SR1_ADD10	EQU	0x0008	; 10-bit header sent (Master mode)
I2C_SR1_STOPF	EQU	0x0010	; Stop detection (Slave mode)
I2C_SR1_RXNE	EQU	0x0040	; Data Register not Empty (receivers)
I2C_SR1_TXE	EQU	0x0080	; Data Register Empty (transmitters)
I2C_SR1_BERR	EQU	0x0100	; Bus Error
I2C_SR1_ARLO	EQU	0x0200	; Arbitration Lost (master mode)
I2C_SR1_AF	EQU	0x0400	; Acknowledge Failure
I2C_SR1_OVR	EQU	0x0800	; Overrun/Underrun
I2C_SR1_PECERR	EQU	0x1000	; PEC Error in reception
I2C_SR1_TIMEOUT	EQU	0x4000	; Timeout or Tlow Error
I2C_SR1_SMBALERT	EQU	0x8000	; SMBus Alert

; Bit definition for I2C_SR2 register
I2C_SR2_MSL	EQU	0x0001	; Master/Slave
I2C_SR2_BUSY	EQU	0x0002	; Bus Busy
I2C_SR2_TRA	EQU	0x0004	; Transmitter/Receiver
I2C_SR2_GENCALL	EQU	0x0010	; General Call Address (Slave mode)
I2C_SR2_SMBDEFAULT	EQU	0x0020	; SMBus Device Default Address (Slave mode)
I2C_SR2_SMBHOST	EQU	0x0040	; SMBus Host Header (Slave mode)
I2C_SR2_DUALF	EQU	0x0080	; Dual Flag (Slave mode)
I2C_SR2_PEC	EQU	0xFF00	; Packet Error Checking Register

; Bit definition for I2C_CCR register
I2C_CCR_CCR	EQU	0x0FFF	; Clock Control Register in Fast/Standard mode (Master mode)
I2C_CCR_DUTY	EQU	0x4000	; Fast Mode Duty Cycle
I2C_CCR_FS	EQU	0x8000	; I2C Master Mode Selection

; Bit definition for I2C_TRISE register
I2C_TRISE_TRISE	EQU	0x3F	; Maximum Rise Time in Fast/Standard mode (Master mode)


;
; Universal Synchronous Asynchronous Receiver Transmitter
;


; Bit definition for USART_SR register
USART_SR_PE	EQU	0x0001	; Parity Error
USART_SR_FE	EQU	0x0002	; Framing Error
USART_SR_NE	EQU	0x0004	; Noise Error Flag
USART_SR_ORE	EQU	0x0008	; OverRun Error
USART_SR_IDLE	EQU	0x0010	; IDLE line detected
USART_SR_RXNE	EQU	0x0020	; Read Data Register Not Empty
USART_SR_TC	EQU	0x0040	; Transmission Complete
USART_SR_TXE	EQU	0x0080	; Transmit Data Register Empty
USART_SR_LBD	EQU	0x0100	; LIN Break Detection Flag
USART_SR_CTS	EQU	0x0200	; CTS Flag

; Bit definition for USART_DR register
USART_DR_DR	EQU	0x01FF	; Data value

; Bit definition for USART_BRR register
USART_BRR_DIV_Fraction	EQU	0x000F	; Fraction of USARTDIV
USART_BRR_DIV_Mantissa	EQU	0xFFF0	; Mantissa of USARTDIV

; Bit definition for USART_CR1 register
USART_CR1_SBK	EQU	0x0001	; Send Break
USART_CR1_RWU	EQU	0x0002	; Receiver wakeup
USART_CR1_RE	EQU	0x0004	; Receiver Enable
USART_CR1_TE	EQU	0x0008	; Transmitter Enable
USART_CR1_IDLEIE	EQU	0x0010	; IDLE Interrupt Enable
USART_CR1_RXNEIE	EQU	0x0020	; RXNE Interrupt Enable
USART_CR1_TCIE	EQU	0x0040	; Transmission Complete Interrupt Enable
USART_CR1_TXEIE	EQU	0x0080	; PE Interrupt Enable
USART_CR1_PEIE	EQU	0x0100	; PE Interrupt Enable
USART_CR1_PS	EQU	0x0200	; Parity Selection
USART_CR1_PCE	EQU	0x0400	; Parity Control Enable
USART_CR1_WAKE	EQU	0x0800	; Wakeup method
USART_CR1_M	EQU	0x1000	; Word length
USART_CR1_UE	EQU	0x2000	; USART Enable

; Bit definition for USART_CR2 register
USART_CR2_ADD	EQU	0x000F	; Address of the USART node
USART_CR2_LBDL	EQU	0x0020	; LIN Break Detection Length
USART_CR2_LBDIE	EQU	0x0040	; LIN Break Detection Interrupt Enable
USART_CR2_LBCL	EQU	0x0100	; Last Bit Clock pulse
USART_CR2_CPHA	EQU	0x0200	; Clock Phase
USART_CR2_CPOL	EQU	0x0400	; Clock Polarity
USART_CR2_CLKEN	EQU	0x0800	; Clock Enable

USART_CR2_STOP	EQU	0x3000	; STOP[1:0] bits (STOP bits)
USART_CR2_STOP_0	EQU	0x1000	; Bit 0
USART_CR2_STOP_1	EQU	0x2000	; Bit 1

USART_CR2_LINEN	EQU	0x4000	; LIN mode enable

; Bit definition for USART_CR3 register
USART_CR3_EIE	EQU	0x0001	; Error Interrupt Enable
USART_CR3_IREN	EQU	0x0002	; IrDA mode Enable
USART_CR3_IRLP	EQU	0x0004	; IrDA Low-Power
USART_CR3_HDSEL	EQU	0x0008	; Half-Duplex Selection
USART_CR3_NACK	EQU	0x0010	; Smartcard NACK enable
USART_CR3_SCEN	EQU	0x0020	; Smartcard mode enable
USART_CR3_DMAR	EQU	0x0040	; DMA Enable Receiver
USART_CR3_DMAT	EQU	0x0080	; DMA Enable Transmitter
USART_CR3_RTSE	EQU	0x0100	; RTS Enable
USART_CR3_CTSE	EQU	0x0200	; CTS Enable
USART_CR3_CTSIE	EQU	0x0400	; CTS Interrupt Enable

; Bit definition for USART_GTPR register
USART_GTPR_PSC	EQU	0x00FF	; PSC[7:0] bits (Prescaler value)
USART_GTPR_PSC_0	EQU	0x0001	; Bit 0
USART_GTPR_PSC_1	EQU	0x0002	; Bit 1
USART_GTPR_PSC_2	EQU	0x0004	; Bit 2
USART_GTPR_PSC_3	EQU	0x0008	; Bit 3
USART_GTPR_PSC_4	EQU	0x0010	; Bit 4
USART_GTPR_PSC_5	EQU	0x0020	; Bit 5
USART_GTPR_PSC_6	EQU	0x0040	; Bit 6
USART_GTPR_PSC_7	EQU	0x0080	; Bit 7

USART_GTPR_GT	EQU	0xFF00	; Guard time value


;
; Debug MCU
;


; Bit definition for DBGMCU_IDCODE register
DBGMCU_IDCODE_DEV_ID	EQU	0x00000FFF	; Device Identifier

DBGMCU_IDCODE_REV_ID	EQU	0xFFFF0000	; REV_ID[15:0] bits (Revision Identifier)
DBGMCU_IDCODE_REV_ID_0	EQU	0x00010000	; Bit 0
DBGMCU_IDCODE_REV_ID_1	EQU	0x00020000	; Bit 1
DBGMCU_IDCODE_REV_ID_2	EQU	0x00040000	; Bit 2
DBGMCU_IDCODE_REV_ID_3	EQU	0x00080000	; Bit 3
DBGMCU_IDCODE_REV_ID_4	EQU	0x00100000	; Bit 4
DBGMCU_IDCODE_REV_ID_5	EQU	0x00200000	; Bit 5
DBGMCU_IDCODE_REV_ID_6	EQU	0x00400000	; Bit 6
DBGMCU_IDCODE_REV_ID_7	EQU	0x00800000	; Bit 7
DBGMCU_IDCODE_REV_ID_8	EQU	0x01000000	; Bit 8
DBGMCU_IDCODE_REV_ID_9	EQU	0x02000000	; Bit 9
DBGMCU_IDCODE_REV_ID_10	EQU	0x04000000	; Bit 10
DBGMCU_IDCODE_REV_ID_11	EQU	0x08000000	; Bit 11
DBGMCU_IDCODE_REV_ID_12	EQU	0x10000000	; Bit 12
DBGMCU_IDCODE_REV_ID_13	EQU	0x20000000	; Bit 13
DBGMCU_IDCODE_REV_ID_14	EQU	0x40000000	; Bit 14
DBGMCU_IDCODE_REV_ID_15	EQU	0x80000000	; Bit 15

; Bit definition for DBGMCU_CR register
DBGMCU_CR_DBG_SLEEP	EQU	0x00000001	; Debug Sleep Mode
DBGMCU_CR_DBG_STOP	EQU	0x00000002	; Debug Stop Mode
DBGMCU_CR_DBG_STANDBY	EQU	0x00000004	; Debug Standby mode
DBGMCU_CR_TRACE_IOEN	EQU	0x00000020	; Trace Pin Assignment Control

DBGMCU_CR_TRACE_MODE	EQU	0x000000C0	; TRACE_MODE[1:0] bits (Trace Pin Assignment Control)
DBGMCU_CR_TRACE_MODE_0	EQU	0x00000040	; Bit 0
DBGMCU_CR_TRACE_MODE_1	EQU	0x00000080	; Bit 1

DBGMCU_CR_DBG_IWDG_STOP	EQU	0x00000100	; Debug Independent Watchdog stopped when Core is halted
DBGMCU_CR_DBG_WWDG_STOP	EQU	0x00000200	; Debug Window Watchdog stopped when Core is halted
DBGMCU_CR_DBG_TIM1_STOP	EQU	0x00000400	; TIM1 counter stopped when core is halted
DBGMCU_CR_DBG_TIM2_STOP	EQU	0x00000800	; TIM2 counter stopped when core is halted
DBGMCU_CR_DBG_TIM3_STOP	EQU	0x00001000	; TIM3 counter stopped when core is halted
DBGMCU_CR_DBG_TIM4_STOP	EQU	0x00002000	; TIM4 counter stopped when core is halted
DBGMCU_CR_DBG_CAN1_STOP	EQU	0x00004000	; Debug CAN1 stopped when Core is halted
DBGMCU_CR_DBG_I2C1_SMBUS_TIMEOUT	EQU	0x00008000	; SMBUS timeout mode stopped when Core is halted
DBGMCU_CR_DBG_I2C2_SMBUS_TIMEOUT	EQU	0x00010000	; SMBUS timeout mode stopped when Core is halted
DBGMCU_CR_DBG_TIM8_STOP	EQU	0x00020000	; TIM8 counter stopped when core is halted
DBGMCU_CR_DBG_TIM5_STOP	EQU	0x00040000	; TIM5 counter stopped when core is halted
DBGMCU_CR_DBG_TIM6_STOP	EQU	0x00080000	; TIM6 counter stopped when core is halted
DBGMCU_CR_DBG_TIM7_STOP	EQU	0x00100000	; TIM7 counter stopped when core is halted
DBGMCU_CR_DBG_CAN2_STOP	EQU	0x00200000	; Debug CAN2 stopped when Core is halted


;
; FLASH and Option Bytes Registers
;


; Bit definition for FLASH_ACR register
FLASH_ACR_LATENCY	EQU	0x03	; LATENCY[2:0] bits (Latency)
FLASH_ACR_LATENCY_0	EQU	0x00	; Bit 0
FLASH_ACR_LATENCY_1	EQU	0x01	; Bit 0
FLASH_ACR_LATENCY_2	EQU	0x02	; Bit 1

FLASH_ACR_HLFCYA	EQU	0x08	; Flash Half Cycle Access Enable
FLASH_ACR_PRFTBE	EQU	0x10	; Prefetch Buffer Enable
FLASH_ACR_PRFTBS	EQU	0x20	; Prefetch Buffer Status

; Bit definition for FLASH_KEYR register
FLASH_KEYR_FKEYR	EQU	0xFFFFFFFF	; FPEC Key

; Bit definition for FLASH_OPTKEYR register
FLASH_OPTKEYR_OPTKEYR	EQU	0xFFFFFFFF	; Option Byte Key

; Bit definition for FLASH_SR register
FLASH_SR_BSY	EQU	0x01	; Busy
FLASH_SR_PGERR	EQU	0x04	; Programming Error
FLASH_SR_WRPRTERR	EQU	0x10	; Write Protection Error
FLASH_SR_EOP	EQU	0x20	; End of operation

; Bit definition for FLASH_CR register
FLASH_CR_PG	EQU	0x0001	; Programming
FLASH_CR_PER	EQU	0x0002	; Page Erase
FLASH_CR_MER	EQU	0x0004	; Mass Erase
FLASH_CR_OPTPG	EQU	0x0010	; Option Byte Programming
FLASH_CR_OPTER	EQU	0x0020	; Option Byte Erase
FLASH_CR_STRT	EQU	0x0040	; Start
FLASH_CR_LOCK	EQU	0x0080	; Lock
FLASH_CR_OPTWRE	EQU	0x0200	; Option Bytes Write Enable
FLASH_CR_ERRIE	EQU	0x0400	; Error Interrupt Enable
FLASH_CR_EOPIE	EQU	0x1000	; End of operation interrupt enable

; Bit definition for FLASH_AR register
FLASH_AR_FAR	EQU	0xFFFFFFFF	; Flash Address

; Bit definition for FLASH_OBR register
FLASH_OBR_OPTERR	EQU	0x0001	; Option Byte Error
FLASH_OBR_RDPRT	EQU	0x0002	; Read protection

FLASH_OBR_USER	EQU	0x03FC	; User Option Bytes
FLASH_OBR_WDG_SW	EQU	0x0004	; WDG_SW
FLASH_OBR_nRST_STOP	EQU	0x0008	; nRST_STOP
FLASH_OBR_nRST_STDBY	EQU	0x0010	; nRST_STDBY
FLASH_OBR_Notused	EQU	0x03E0	; Not used

; Bit definition for FLASH_WRPR register
FLASH_WRPR_WRP	EQU	0xFFFFFFFF	; Write Protect

;----------------------------------------------------------------------------

; Bit definition for FLASH_RDP register
FLASH_RDP_RDP	EQU	0x000000FF	; Read protection option byte
FLASH_RDP_nRDP	EQU	0x0000FF00	; Read protection complemented option byte

; Bit definition for FLASH_USER register
FLASH_USER_USER	EQU	0x00FF0000	; User option byte
FLASH_USER_nUSER	EQU	0xFF000000	; User complemented option byte

; Bit definition for FLASH_Data0 register
FLASH_Data0_Data0	EQU	0x000000FF	; User data storage option byte
FLASH_Data0_nData0	EQU	0x0000FF00	; User data storage complemented option byte

; Bit definition for FLASH_Data1 register
FLASH_Data1_Data1	EQU	0x00FF0000	; User data storage option byte
FLASH_Data1_nData1	EQU	0xFF000000	; User data storage complemented option byte

; Bit definition for FLASH_WRP0 register
FLASH_WRP0_WRP0	EQU	0x000000FF	; Flash memory write protection option bytes
FLASH_WRP0_nWRP0	EQU	0x0000FF00	; Flash memory write protection complemented option bytes

; Bit definition for FLASH_WRP1 register
FLASH_WRP1_WRP1	EQU	0x00FF0000	; Flash memory write protection option bytes
FLASH_WRP1_nWRP1	EQU	0xFF000000	; Flash memory write protection complemented option bytes

; Bit definition for FLASH_WRP2 register
FLASH_WRP2_WRP2	EQU	0x000000FF	; Flash memory write protection option bytes
FLASH_WRP2_nWRP2	EQU	0x0000FF00	; Flash memory write protection complemented option bytes

; Bit definition for FLASH_WRP3 register
FLASH_WRP3_WRP3	EQU	0x00FF0000	; Flash memory write protection option bytes
FLASH_WRP3_nWRP3	EQU	0xFF000000	; Flash memory write protection complemented option bytes


	IF :DEF:STM32F10X_CL

; Ethernet MAC Registers bits definitions

; Bit definition for Ethernet MAC Control Register register
ETH_MACCR_WD	EQU	0x00800000	; Watchdog disable
ETH_MACCR_JD	EQU	0x00400000	; Jabber disable
ETH_MACCR_IFG	EQU	0x000E0000	; Inter-frame gap
ETH_MACCR_IFG_96Bit	EQU	0x00000000	; Minimum IFG between frames during transmission is 96Bit
ETH_MACCR_IFG_88Bit	EQU	0x00020000	; Minimum IFG between frames during transmission is 88Bit
ETH_MACCR_IFG_80Bit	EQU	0x00040000	; Minimum IFG between frames during transmission is 80Bit
ETH_MACCR_IFG_72Bit	EQU	0x00060000	; Minimum IFG between frames during transmission is 72Bit
ETH_MACCR_IFG_64Bit	EQU	0x00080000	; Minimum IFG between frames during transmission is 64Bit
ETH_MACCR_IFG_56Bit	EQU	0x000A0000	; Minimum IFG between frames during transmission is 56Bit
ETH_MACCR_IFG_48Bit	EQU	0x000C0000	; Minimum IFG between frames during transmission is 48Bit
ETH_MACCR_IFG_40Bit	EQU	0x000E0000	; Minimum IFG between frames during transmission is 40Bit
ETH_MACCR_CSD	EQU	0x00010000	; Carrier sense disable (during transmission)
ETH_MACCR_FES	EQU	0x00004000	; Fast ethernet speed
ETH_MACCR_ROD	EQU	0x00002000	; Receive own disable
ETH_MACCR_LM	EQU	0x00001000	; loopback mode
ETH_MACCR_DM	EQU	0x00000800	; Duplex mode
ETH_MACCR_IPCO	EQU	0x00000400	; IP Checksum offload
ETH_MACCR_RD	EQU	0x00000200	; Retry disable
ETH_MACCR_APCS	EQU	0x00000080	; Automatic Pad/CRC stripping
ETH_MACCR_BL	EQU	0x00000060	; Back-off limit: random integer number (r) of slot time delays before rescheduling a transmission attempt during retries after a collision: 0 =< r <2^k
ETH_MACCR_BL_10	EQU	0x00000000	; k = min (n, 10)
ETH_MACCR_BL_8	EQU	0x00000020	; k = min (n, 8)
ETH_MACCR_BL_4	EQU	0x00000040	; k = min (n, 4)
ETH_MACCR_BL_1	EQU	0x00000060	; k = min (n, 1)
ETH_MACCR_DC	EQU	0x00000010	; Defferal check
ETH_MACCR_TE	EQU	0x00000008	; Transmitter enable
ETH_MACCR_RE	EQU	0x00000004	; Receiver enable

; Bit definition for Ethernet MAC Frame Filter Register
ETH_MACFFR_RA	EQU	0x80000000	; Receive all
ETH_MACFFR_HPF	EQU	0x00000400	; Hash or perfect filter
ETH_MACFFR_SAF	EQU	0x00000200	; Source address filter enable
ETH_MACFFR_SAIF	EQU	0x00000100	; SA inverse filtering
ETH_MACFFR_PCF	EQU	0x000000C0	; Pass control frames: 3 cases
ETH_MACFFR_PCF_BlockAll	EQU	0x00000040	; MAC filters all control frames from reaching the application
ETH_MACFFR_PCF_ForwardAll	EQU	0x00000080	; MAC forwards all control frames to application even if they fail the Address Filter
ETH_MACFFR_PCF_ForwardPassedAddrFilter	EQU	0x000000C0	; MAC forwards control frames that pass the Address Filter.
ETH_MACFFR_BFD	EQU	0x00000020	; Broadcast frame disable
ETH_MACFFR_PAM	EQU	0x00000010	; Pass all mutlicast
ETH_MACFFR_DAIF	EQU	0x00000008	; DA Inverse filtering
ETH_MACFFR_HM	EQU	0x00000004	; Hash multicast
ETH_MACFFR_HU	EQU	0x00000002	; Hash unicast
ETH_MACFFR_PM	EQU	0x00000001	; Promiscuous mode

; Bit definition for Ethernet MAC Hash Table High Register
ETH_MACHTHR_HTH	EQU	0xFFFFFFFF	; Hash table high

; Bit definition for Ethernet MAC Hash Table Low Register
ETH_MACHTLR_HTL	EQU	0xFFFFFFFF	; Hash table low

; Bit definition for Ethernet MAC MII Address Register
ETH_MACMIIAR_PA	EQU	0x0000F800	; Physical layer address
ETH_MACMIIAR_MR	EQU	0x000007C0	; MII register in the selected PHY
ETH_MACMIIAR_CR	EQU	0x0000001C	; CR clock range: 6 cases
ETH_MACMIIAR_CR_Div42	EQU	0x00000000	; HCLK:60-72 MHz; MDC clock= HCLK/42
ETH_MACMIIAR_CR_Div16	EQU	0x00000008	; HCLK:20-35 MHz; MDC clock= HCLK/16
ETH_MACMIIAR_CR_Div26	EQU	0x0000000C	; HCLK:35-60 MHz; MDC clock= HCLK/26
ETH_MACMIIAR_MW	EQU	0x00000002	; MII write
ETH_MACMIIAR_MB	EQU	0x00000001	; MII busy

; Bit definition for Ethernet MAC MII Data Register
ETH_MACMIIDR_MD	EQU	0x0000FFFF	; MII data: read/write data from/to PHY

; Bit definition for Ethernet MAC Flow Control Register
ETH_MACFCR_PT	EQU	0xFFFF0000	; Pause time
ETH_MACFCR_ZQPD	EQU	0x00000080	; Zero-quanta pause disable
ETH_MACFCR_PLT	EQU	0x00000030	; Pause low threshold: 4 cases
ETH_MACFCR_PLT_Minus4	EQU	0x00000000	; Pause time minus 4 slot times
ETH_MACFCR_PLT_Minus28	EQU	0x00000010	; Pause time minus 28 slot times
ETH_MACFCR_PLT_Minus144	EQU	0x00000020	; Pause time minus 144 slot times
ETH_MACFCR_PLT_Minus256	EQU	0x00000030	; Pause time minus 256 slot times
ETH_MACFCR_UPFD	EQU	0x00000008	; Unicast pause frame detect
ETH_MACFCR_RFCE	EQU	0x00000004	; Receive flow control enable
ETH_MACFCR_TFCE	EQU	0x00000002	; Transmit flow control enable
ETH_MACFCR_FCBBPA	EQU	0x00000001	; Flow control busy/backpressure activate

; Bit definition for Ethernet MAC VLAN Tag Register
ETH_MACVLANTR_VLANTC	EQU	0x00010000	; 12-bit VLAN tag comparison
ETH_MACVLANTR_VLANTI	EQU	0x0000FFFF	; VLAN tag identifier (for receive frames)

; Bit definition for Ethernet MAC Remote Wake-UpFrame Filter Register
ETH_MACRWUFFR_D	EQU	0xFFFFFFFF	; Wake-up frame filter register data
; Eight sequential Writes to this address (offset 0x28) will write all Wake-UpFrame Filter Registers.
; Eight sequential Reads from this address (offset 0x28) will read all Wake-UpFrame Filter Registers. 
; Wake-UpFrame Filter Reg0 : Filter 0 Byte Mask
; Wake-UpFrame Filter Reg1 : Filter 1 Byte Mask
; Wake-UpFrame Filter Reg2 : Filter 2 Byte Mask
; Wake-UpFrame Filter Reg3 : Filter 3 Byte Mask
; Wake-UpFrame Filter Reg4 : RSVD - Filter3 Command - RSVD - Filter2 Command -
; RSVD - Filter1 Command - RSVD - Filter0 Command
; Wake-UpFrame Filter Re5 : Filter3 Offset - Filter2 Offset - Filter1 Offset - Filter0 Offset
; Wake-UpFrame Filter Re6 : Filter1 CRC16 - Filter0 CRC16
; Wake-UpFrame Filter Re7 : Filter3 CRC16 - Filter2 CRC16 

; Bit definition for Ethernet MAC PMT Control and Status Register
ETH_MACPMTCSR_WFFRPR	EQU	0x80000000	; Wake-Up Frame Filter Register Pointer Reset
ETH_MACPMTCSR_GU	EQU	0x00000200	; Global Unicast
ETH_MACPMTCSR_WFR	EQU	0x00000040	; Wake-Up Frame Received
ETH_MACPMTCSR_MPR	EQU	0x00000020	; Magic Packet Received
ETH_MACPMTCSR_WFE	EQU	0x00000004	; Wake-Up Frame Enable
ETH_MACPMTCSR_MPE	EQU	0x00000002	; Magic Packet Enable
ETH_MACPMTCSR_PD	EQU	0x00000001	; Power Down

; Bit definition for Ethernet MAC Status Register
ETH_MACSR_TSTS	EQU	0x00000200	; Time stamp trigger status
ETH_MACSR_MMCTS	EQU	0x00000040	; MMC transmit status
ETH_MACSR_MMMCRS	EQU	0x00000020	; MMC receive status
ETH_MACSR_MMCS	EQU	0x00000010	; MMC status
ETH_MACSR_PMTS	EQU	0x00000008	; PMT status

; Bit definition for Ethernet MAC Interrupt Mask Register
ETH_MACIMR_TSTIM	EQU	0x00000200	; Time stamp trigger interrupt mask
ETH_MACIMR_PMTIM	EQU	0x00000008	; PMT interrupt mask

; Bit definition for Ethernet MAC Address0 High Register
ETH_MACA0HR_MACA0H	EQU	0x0000FFFF	; MAC address0 high

; Bit definition for Ethernet MAC Address0 Low Register
ETH_MACA0LR_MACA0L	EQU	0xFFFFFFFF	; MAC address0 low

; Bit definition for Ethernet MAC Address1 High Register
ETH_MACA1HR_AE	EQU	0x80000000	; Address enable
ETH_MACA1HR_SA	EQU	0x40000000	; Source address
ETH_MACA1HR_MBC	EQU	0x3F000000	; Mask byte control: bits to mask for comparison of the MAC Address bytes
ETH_MACA1HR_MBC_HBits15_8	EQU	0x20000000	; Mask MAC Address high reg bits [15:8]
ETH_MACA1HR_MBC_HBits7_0	EQU	0x10000000	; Mask MAC Address high reg bits [7:0]
ETH_MACA1HR_MBC_LBits31_24	EQU	0x08000000	; Mask MAC Address low reg bits [31:24]
ETH_MACA1HR_MBC_LBits23_16	EQU	0x04000000	; Mask MAC Address low reg bits [23:16]
ETH_MACA1HR_MBC_LBits15_8	EQU	0x02000000	; Mask MAC Address low reg bits [15:8]
ETH_MACA1HR_MBC_LBits7_0	EQU	0x01000000	; Mask MAC Address low reg bits [7:0]
ETH_MACA1HR_MACA1H	EQU	0x0000FFFF	; MAC address1 high

; Bit definition for Ethernet MAC Address1 Low Register
ETH_MACA1LR_MACA1L	EQU	0xFFFFFFFF	; MAC address1 low

; Bit definition for Ethernet MAC Address2 High Register
ETH_MACA2HR_AE	EQU	0x80000000	; Address enable
ETH_MACA2HR_SA	EQU	0x40000000	; Source address
ETH_MACA2HR_MBC	EQU	0x3F000000	; Mask byte control
ETH_MACA2HR_MBC_HBits15_8	EQU	0x20000000	; Mask MAC Address high reg bits [15:8]
ETH_MACA2HR_MBC_HBits7_0	EQU	0x10000000	; Mask MAC Address high reg bits [7:0]
ETH_MACA2HR_MBC_LBits31_24	EQU	0x08000000	; Mask MAC Address low reg bits [31:24]
ETH_MACA2HR_MBC_LBits23_16	EQU	0x04000000	; Mask MAC Address low reg bits [23:16]
ETH_MACA2HR_MBC_LBits15_8	EQU	0x02000000	; Mask MAC Address low reg bits [15:8]
ETH_MACA2HR_MBC_LBits7_0	EQU	0x01000000	; Mask MAC Address low reg bits [70]
ETH_MACA2HR_MACA2H	EQU	0x0000FFFF	; MAC address1 high

; Bit definition for Ethernet MAC Address2 Low Register
ETH_MACA2LR_MACA2L	EQU	0xFFFFFFFF	; MAC address2 low

; Bit definition for Ethernet MAC Address3 High Register
ETH_MACA3HR_AE	EQU	0x80000000	; Address enable
ETH_MACA3HR_SA	EQU	0x40000000	; Source address
ETH_MACA3HR_MBC	EQU	0x3F000000	; Mask byte control
ETH_MACA3HR_MBC_HBits15_8	EQU	0x20000000	; Mask MAC Address high reg bits [15:8]
ETH_MACA3HR_MBC_HBits7_0	EQU	0x10000000	; Mask MAC Address high reg bits [7:0]
ETH_MACA3HR_MBC_LBits31_24	EQU	0x08000000	; Mask MAC Address low reg bits [31:24]
ETH_MACA3HR_MBC_LBits23_16	EQU	0x04000000	; Mask MAC Address low reg bits [23:16]
ETH_MACA3HR_MBC_LBits15_8	EQU	0x02000000	; Mask MAC Address low reg bits [15:8]
ETH_MACA3HR_MBC_LBits7_0	EQU	0x01000000	; Mask MAC Address low reg bits [70]
ETH_MACA3HR_MACA3H	EQU	0x0000FFFF	; MAC address3 high

; Bit definition for Ethernet MAC Address3 Low Register
ETH_MACA3LR_MACA3L	EQU	0xFFFFFFFF	; MAC address3 low


; Ethernet MMC Registers bits definition


; Bit definition for Ethernet MMC Contol Register
ETH_MMCCR_MCF	EQU	0x00000008	; MMC Counter Freeze
ETH_MMCCR_ROR	EQU	0x00000004	; Reset on Read
ETH_MMCCR_CSR	EQU	0x00000002	; Counter Stop Rollover
ETH_MMCCR_CR	EQU	0x00000001	; Counters Reset

; Bit definition for Ethernet MMC Receive Interrupt Register
ETH_MMCRIR_RGUFS	EQU	0x00020000	; Set when Rx good unicast frames counter reaches half the maximum value
ETH_MMCRIR_RFAES	EQU	0x00000040	; Set when Rx alignment error counter reaches half the maximum value
ETH_MMCRIR_RFCES	EQU	0x00000020	; Set when Rx crc error counter reaches half the maximum value

; Bit definition for Ethernet MMC Transmit Interrupt Register
ETH_MMCTIR_TGFS	EQU	0x00200000	; Set when Tx good frame count counter reaches half the maximum value
ETH_MMCTIR_TGFMSCS	EQU	0x00008000	; Set when Tx good multi col counter reaches half the maximum value
ETH_MMCTIR_TGFSCS	EQU	0x00004000	; Set when Tx good single col counter reaches half the maximum value

; Bit definition for Ethernet MMC Receive Interrupt Mask Register
ETH_MMCRIMR_RGUFM	EQU	0x00020000	; Mask the interrupt when Rx good unicast frames counter reaches half the maximum value
ETH_MMCRIMR_RFAEM	EQU	0x00000040	; Mask the interrupt when when Rx alignment error counter reaches half the maximum value
ETH_MMCRIMR_RFCEM	EQU	0x00000020	; Mask the interrupt when Rx crc error counter reaches half the maximum value

; Bit definition for Ethernet MMC Transmit Interrupt Mask Register
ETH_MMCTIMR_TGFM	EQU	0x00200000	; Mask the interrupt when Tx good frame count counter reaches half the maximum value
ETH_MMCTIMR_TGFMSCM	EQU	0x00008000	; Mask the interrupt when Tx good multi col counter reaches half the maximum value
ETH_MMCTIMR_TGFSCM	EQU	0x00004000	; Mask the interrupt when Tx good single col counter reaches half the maximum value

; Bit definition for Ethernet MMC Transmitted Good Frames after Single Collision Counter Register
ETH_MMCTGFSCCR_TGFSCC	EQU	0xFFFFFFFF	; Number of successfully transmitted frames after a single collision in Half-duplex mode.

; Bit definition for Ethernet MMC Transmitted Good Frames after More than a Single Collision Counter Register
ETH_MMCTGFMSCCR_TGFMSCC	EQU	0xFFFFFFFF	; Number of successfully transmitted frames after more than a single collision in Half-duplex mode.

; Bit definition for Ethernet MMC Transmitted Good Frames Counter Register
ETH_MMCTGFCR_TGFC	EQU	0xFFFFFFFF	; Number of good frames transmitted.

; Bit definition for Ethernet MMC Received Frames with CRC Error Counter Register
ETH_MMCRFCECR_RFCEC	EQU	0xFFFFFFFF	; Number of frames received with CRC error.

; Bit definition for Ethernet MMC Received Frames with Alignement Error Counter Register
ETH_MMCRFAECR_RFAEC	EQU	0xFFFFFFFF	; Number of frames received with alignment (dribble) error

; Bit definition for Ethernet MMC Received Good Unicast Frames Counter Register
ETH_MMCRGUFCR_RGUFC	EQU	0xFFFFFFFF	; Number of good unicast frames received.


; Ethernet PTP Registers bits definition


; Bit definition for Ethernet PTP Time Stamp Contol Register
ETH_PTPTSCR_TSARU	EQU	0x00000020	; Addend register update
ETH_PTPTSCR_TSITE	EQU	0x00000010	; Time stamp interrupt trigger enable
ETH_PTPTSCR_TSSTU	EQU	0x00000008	; Time stamp update
ETH_PTPTSCR_TSSTI	EQU	0x00000004	; Time stamp initialize
ETH_PTPTSCR_TSFCU	EQU	0x00000002	; Time stamp fine or coarse update
ETH_PTPTSCR_TSE	EQU	0x00000001	; Time stamp enable

; Bit definition for Ethernet PTP Sub-Second Increment Register
ETH_PTPSSIR_STSSI	EQU	0x000000FF	; System time Sub-second increment value

; Bit definition for Ethernet PTP Time Stamp High Register
ETH_PTPTSHR_STS	EQU	0xFFFFFFFF	; System Time second

; Bit definition for Ethernet PTP Time Stamp Low Register
ETH_PTPTSLR_STPNS	EQU	0x80000000	; System Time Positive or negative time
ETH_PTPTSLR_STSS	EQU	0x7FFFFFFF	; System Time sub-seconds

; Bit definition for Ethernet PTP Time Stamp High Update Register
ETH_PTPTSHUR_TSUS	EQU	0xFFFFFFFF	; Time stamp update seconds

; Bit definition for Ethernet PTP Time Stamp Low Update Register
ETH_PTPTSLUR_TSUPNS	EQU	0x80000000	; Time stamp update Positive or negative time
ETH_PTPTSLUR_TSUSS	EQU	0x7FFFFFFF	; Time stamp update sub-seconds

; Bit definition for Ethernet PTP Time Stamp Addend Register
ETH_PTPTSAR_TSA	EQU	0xFFFFFFFF	; Time stamp addend

; Bit definition for Ethernet PTP Target Time High Register
ETH_PTPTTHR_TTSH	EQU	0xFFFFFFFF	; Target time stamp high

; Bit definition for Ethernet PTP Target Time Low Register
ETH_PTPTTLR_TTSL	EQU	0xFFFFFFFF	; Target time stamp low


; Ethernet DMA Registers bits definition


; Bit definition for Ethernet DMA Bus Mode Register
ETH_DMABMR_AAB	EQU	0x02000000	; Address-Aligned beats
ETH_DMABMR_FPM	EQU	0x01000000	; 4xPBL mode
ETH_DMABMR_USP	EQU	0x00800000	; Use separate PBL
ETH_DMABMR_RDP	EQU	0x007E0000	; RxDMA PBL
ETH_DMABMR_RDP_1Beat	EQU	0x00020000	; maximum number of beats to be transferred in one RxDMA transaction is 1
ETH_DMABMR_RDP_2Beat	EQU	0x00040000	; maximum number of beats to be transferred in one RxDMA transaction is 2
ETH_DMABMR_RDP_4Beat	EQU	0x00080000	; maximum number of beats to be transferred in one RxDMA transaction is 4
ETH_DMABMR_RDP_8Beat	EQU	0x00100000	; maximum number of beats to be transferred in one RxDMA transaction is 8
ETH_DMABMR_RDP_16Beat	EQU	0x00200000	; maximum number of beats to be transferred in one RxDMA transaction is 16
ETH_DMABMR_RDP_32Beat	EQU	0x00400000	; maximum number of beats to be transferred in one RxDMA transaction is 32
ETH_DMABMR_RDP_4xPBL_4Beat	EQU	0x01020000	; maximum number of beats to be transferred in one RxDMA transaction is 4
ETH_DMABMR_RDP_4xPBL_8Beat	EQU	0x01040000	; maximum number of beats to be transferred in one RxDMA transaction is 8
ETH_DMABMR_RDP_4xPBL_16Beat	EQU	0x01080000	; maximum number of beats to be transferred in one RxDMA transaction is 16
ETH_DMABMR_RDP_4xPBL_32Beat	EQU	0x01100000	; maximum number of beats to be transferred in one RxDMA transaction is 32
ETH_DMABMR_RDP_4xPBL_64Beat	EQU	0x01200000	; maximum number of beats to be transferred in one RxDMA transaction is 64
ETH_DMABMR_RDP_4xPBL_128Beat	EQU	0x01400000	; maximum number of beats to be transferred in one RxDMA transaction is 128
ETH_DMABMR_FB	EQU	0x00010000	; Fixed Burst
ETH_DMABMR_RTPR	EQU	0x0000C000	; Rx Tx priority ratio
ETH_DMABMR_RTPR_1_1	EQU	0x00000000	; Rx Tx priority ratio
ETH_DMABMR_RTPR_2_1	EQU	0x00004000	; Rx Tx priority ratio
ETH_DMABMR_RTPR_3_1	EQU	0x00008000	; Rx Tx priority ratio
ETH_DMABMR_RTPR_4_1	EQU	0x0000C000	; Rx Tx priority ratio
ETH_DMABMR_PBL	EQU	0x00003F00	; Programmable burst length
ETH_DMABMR_PBL_1Beat	EQU	0x00000100	; maximum number of beats to be transferred in one TxDMA (or both) transaction is 1
ETH_DMABMR_PBL_2Beat	EQU	0x00000200	; maximum number of beats to be transferred in one TxDMA (or both) transaction is 2
ETH_DMABMR_PBL_4Beat	EQU	0x00000400	; maximum number of beats to be transferred in one TxDMA (or both) transaction is 4
ETH_DMABMR_PBL_8Beat	EQU	0x00000800	; maximum number of beats to be transferred in one TxDMA (or both) transaction is 8
ETH_DMABMR_PBL_16Beat	EQU	0x00001000	; maximum number of beats to be transferred in one TxDMA (or both) transaction is 16
ETH_DMABMR_PBL_32Beat	EQU	0x00002000	; maximum number of beats to be transferred in one TxDMA (or both) transaction is 32
ETH_DMABMR_PBL_4xPBL_4Beat	EQU	0x01000100	; maximum number of beats to be transferred in one TxDMA (or both) transaction is 4
ETH_DMABMR_PBL_4xPBL_8Beat	EQU	0x01000200	; maximum number of beats to be transferred in one TxDMA (or both) transaction is 8
ETH_DMABMR_PBL_4xPBL_16Beat	EQU	0x01000400	; maximum number of beats to be transferred in one TxDMA (or both) transaction is 16
ETH_DMABMR_PBL_4xPBL_32Beat	EQU	0x01000800	; maximum number of beats to be transferred in one TxDMA (or both) transaction is 32
ETH_DMABMR_PBL_4xPBL_64Beat	EQU	0x01001000	; maximum number of beats to be transferred in one TxDMA (or both) transaction is 64
ETH_DMABMR_PBL_4xPBL_128Beat	EQU	0x01002000	; maximum number of beats to be transferred in one TxDMA (or both) transaction is 128
ETH_DMABMR_DSL	EQU	0x0000007C	; Descriptor Skip Length
ETH_DMABMR_DA	EQU	0x00000002	; DMA arbitration scheme
ETH_DMABMR_SR	EQU	0x00000001	; Software reset

; Bit definition for Ethernet DMA Transmit Poll Demand Register
ETH_DMATPDR_TPD	EQU	0xFFFFFFFF	; Transmit poll demand

; Bit definition for Ethernet DMA Receive Poll Demand Register
ETH_DMARPDR_RPD	EQU	0xFFFFFFFF	; Receive poll demand

; Bit definition for Ethernet DMA Receive Descriptor List Address Register
ETH_DMARDLAR_SRL	EQU	0xFFFFFFFF	; Start of receive list

; Bit definition for Ethernet DMA Transmit Descriptor List Address Register
ETH_DMATDLAR_STL	EQU	0xFFFFFFFF	; Start of transmit list

; Bit definition for Ethernet DMA Status Register
ETH_DMASR_TSTS	EQU	0x20000000	; Time-stamp trigger status
ETH_DMASR_PMTS	EQU	0x10000000	; PMT status
ETH_DMASR_MMCS	EQU	0x08000000	; MMC status
ETH_DMASR_EBS	EQU	0x03800000	; Error bits status
; combination with EBS[2:0] for GetFlagStatus function
ETH_DMASR_EBS_DescAccess	EQU	0x02000000	; Error bits 0-data buffer, 1-desc. access
ETH_DMASR_EBS_ReadTransf	EQU	0x01000000	; Error bits 0-write trnsf, 1-read transfr
ETH_DMASR_EBS_DataTransfTx	EQU	0x00800000	; Error bits 0-Rx DMA, 1-Tx DMA
ETH_DMASR_TPS	EQU	0x00700000	; Transmit process state
ETH_DMASR_TPS_Stopped	EQU	0x00000000	; Stopped - Reset or Stop Tx Command issued
ETH_DMASR_TPS_Fetching	EQU	0x00100000	; Running - fetching the Tx descriptor
ETH_DMASR_TPS_Waiting	EQU	0x00200000	; Running - waiting for status
ETH_DMASR_TPS_Reading	EQU	0x00300000	; Running - reading the data from host memory
ETH_DMASR_TPS_Suspended	EQU	0x00600000	; Suspended - Tx Descriptor unavailabe
ETH_DMASR_TPS_Closing	EQU	0x00700000	; Running - closing Rx descriptor
ETH_DMASR_RPS	EQU	0x000E0000	; Receive process state
ETH_DMASR_RPS_Stopped	EQU	0x00000000	; Stopped - Reset or Stop Rx Command issued
ETH_DMASR_RPS_Fetching	EQU	0x00020000	; Running - fetching the Rx descriptor
ETH_DMASR_RPS_Waiting	EQU	0x00060000	; Running - waiting for packet
ETH_DMASR_RPS_Suspended	EQU	0x00080000	; Suspended - Rx Descriptor unavailable
ETH_DMASR_RPS_Closing	EQU	0x000A0000	; Running - closing descriptor
ETH_DMASR_RPS_Queuing	EQU	0x000E0000	; Running - queuing the recieve frame into host memory
ETH_DMASR_NIS	EQU	0x00010000	; Normal interrupt summary
ETH_DMASR_AIS	EQU	0x00008000	; Abnormal interrupt summary
ETH_DMASR_ERS	EQU	0x00004000	; Early receive status
ETH_DMASR_FBES	EQU	0x00002000	; Fatal bus error status
ETH_DMASR_ETS	EQU	0x00000400	; Early transmit status
ETH_DMASR_RWTS	EQU	0x00000200	; Receive watchdog timeout status
ETH_DMASR_RPSS	EQU	0x00000100	; Receive process stopped status
ETH_DMASR_RBUS	EQU	0x00000080	; Receive buffer unavailable status
ETH_DMASR_RS	EQU	0x00000040	; Receive status
ETH_DMASR_TUS	EQU	0x00000020	; Transmit underflow status
ETH_DMASR_ROS	EQU	0x00000010	; Receive overflow status
ETH_DMASR_TJTS	EQU	0x00000008	; Transmit jabber timeout status
ETH_DMASR_TBUS	EQU	0x00000004	; Transmit buffer unavailable status
ETH_DMASR_TPSS	EQU	0x00000002	; Transmit process stopped status
ETH_DMASR_TS	EQU	0x00000001	; Transmit status

; Bit definition for Ethernet DMA Operation Mode Register
ETH_DMAOMR_DTCEFD	EQU	0x04000000	; Disable Dropping of TCP/IP checksum error frames
ETH_DMAOMR_RSF	EQU	0x02000000	; Receive store and forward
ETH_DMAOMR_DFRF	EQU	0x01000000	; Disable flushing of received frames
ETH_DMAOMR_TSF	EQU	0x00200000	; Transmit store and forward
ETH_DMAOMR_FTF	EQU	0x00100000	; Flush transmit FIFO
ETH_DMAOMR_TTC	EQU	0x0001C000	; Transmit threshold control
ETH_DMAOMR_TTC_64Bytes	EQU	0x00000000	; threshold level of the MTL Transmit FIFO is 64 Bytes
ETH_DMAOMR_TTC_128Bytes	EQU	0x00004000	; threshold level of the MTL Transmit FIFO is 128 Bytes
ETH_DMAOMR_TTC_192Bytes	EQU	0x00008000	; threshold level of the MTL Transmit FIFO is 192 Bytes
ETH_DMAOMR_TTC_256Bytes	EQU	0x0000C000	; threshold level of the MTL Transmit FIFO is 256 Bytes
ETH_DMAOMR_TTC_40Bytes	EQU	0x00010000	; threshold level of the MTL Transmit FIFO is 40 Bytes
ETH_DMAOMR_TTC_32Bytes	EQU	0x00014000	; threshold level of the MTL Transmit FIFO is 32 Bytes
ETH_DMAOMR_TTC_24Bytes	EQU	0x00018000	; threshold level of the MTL Transmit FIFO is 24 Bytes
ETH_DMAOMR_TTC_16Bytes	EQU	0x0001C000	; threshold level of the MTL Transmit FIFO is 16 Bytes
ETH_DMAOMR_ST	EQU	0x00002000	; Start/stop transmission command
ETH_DMAOMR_FEF	EQU	0x00000080	; Forward error frames
ETH_DMAOMR_FUGF	EQU	0x00000040	; Forward undersized good frames
ETH_DMAOMR_RTC	EQU	0x00000018	; receive threshold control
ETH_DMAOMR_RTC_64Bytes	EQU	0x00000000	; threshold level of the MTL Receive FIFO is 64 Bytes
ETH_DMAOMR_RTC_32Bytes	EQU	0x00000008	; threshold level of the MTL Receive FIFO is 32 Bytes
ETH_DMAOMR_RTC_96Bytes	EQU	0x00000010	; threshold level of the MTL Receive FIFO is 96 Bytes
ETH_DMAOMR_RTC_128Bytes	EQU	0x00000018	; threshold level of the MTL Receive FIFO is 128 Bytes
ETH_DMAOMR_OSF	EQU	0x00000004	; operate on second frame
ETH_DMAOMR_SR	EQU	0x00000002	; Start/stop receive

; Bit definition for Ethernet DMA Interrupt Enable Register
ETH_DMAIER_NISE	EQU	0x00010000	; Normal interrupt summary enable
ETH_DMAIER_AISE	EQU	0x00008000	; Abnormal interrupt summary enable
ETH_DMAIER_ERIE	EQU	0x00004000	; Early receive interrupt enable
ETH_DMAIER_FBEIE	EQU	0x00002000	; Fatal bus error interrupt enable
ETH_DMAIER_ETIE	EQU	0x00000400	; Early transmit interrupt enable
ETH_DMAIER_RWTIE	EQU	0x00000200	; Receive watchdog timeout interrupt enable
ETH_DMAIER_RPSIE	EQU	0x00000100	; Receive process stopped interrupt enable
ETH_DMAIER_RBUIE	EQU	0x00000080	; Receive buffer unavailable interrupt enable
ETH_DMAIER_RIE	EQU	0x00000040	; Receive interrupt enable
ETH_DMAIER_TUIE	EQU	0x00000020	; Transmit Underflow interrupt enable
ETH_DMAIER_ROIE	EQU	0x00000010	; Receive Overflow interrupt enable
ETH_DMAIER_TJTIE	EQU	0x00000008	; Transmit jabber timeout interrupt enable
ETH_DMAIER_TBUIE	EQU	0x00000004	; Transmit buffer unavailable interrupt enable
ETH_DMAIER_TPSIE	EQU	0x00000002	; Transmit process stopped interrupt enable
ETH_DMAIER_TIE	EQU	0x00000001	; Transmit interrupt enable

; Bit definition for Ethernet DMA Missed Frame and Buffer Overflow Counter Register
ETH_DMAMFBOCR_OFOC	EQU	0x10000000	; Overflow bit for FIFO overflow counter
ETH_DMAMFBOCR_MFA	EQU	0x0FFE0000	; Number of frames missed by the application
ETH_DMAMFBOCR_OMFC	EQU	0x00010000	; Overflow bit for missed frame counter
ETH_DMAMFBOCR_MFC	EQU	0x0000FFFF	; Number of frames missed by the controller

; Bit definition for Ethernet DMA Current Host Transmit Descriptor Register
ETH_DMACHTDR_HTDAP	EQU	0xFFFFFFFF	; Host transmit descriptor address pointer

; Bit definition for Ethernet DMA Current Host Receive Descriptor Register
ETH_DMACHRDR_HRDAP	EQU	0xFFFFFFFF	; Host receive descriptor address pointer

; Bit definition for Ethernet DMA Current Host Transmit Buffer Address Register
ETH_DMACHTBAR_HTBAP	EQU	0xFFFFFFFF	; Host transmit buffer address pointer

; Bit definition for Ethernet DMA Current Host Receive Buffer Address Register
ETH_DMACHRBAR_HRBAP	EQU	0xFFFFFFFF	; Host receive buffer address pointer
	ENDIF ; STM32F10X_CL

	END

